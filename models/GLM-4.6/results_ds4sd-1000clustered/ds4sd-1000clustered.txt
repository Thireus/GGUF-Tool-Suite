```dart
import 'package:cbt_offline/import.dart';

StatefulBuilder(
  builder: (BuildContext context, setState) {
    return ;
  },
),
```

```dart
// Copyright 2013 The Flutter Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// @dart = 2.4
import 'dart:io';

import 'package:file/file.dart';
import 'package:path/path.dart' as path;
import 'package:file/memory.dart';
import 'package:fuchsia_ctl/src/ssh_key_manager.dart';
import 'package:mockito/mockito.dart';
import 'package:process/process.dart';
import 'package:test/test.dart';

void main() {
  group('SystemSshKeyManager', () {
    MemoryFileSystem fs;
    final MockProcessManager processManager = MockProcessManager();

    setUp(() async {
      fs = MemoryFileSystem();
    });
    test('CreateAuthorizedKeys', () async {
```

```dart
Widget build(BuildContext context) {
    return GestureDetector(
      onTap: () {
        //edit the userNickName onTap
        var textController = TextEditingController();
        showDialog(
          context: context,
          builder: (context) {
            return AlertDialog(
```

```dart
import 'package:richtalk/models/models.dart';
/*
  type : Class
  packages used: Getx
  function: this is the controller class that listens to user object changes
 */
class UserController extends GetxController {
  Rx<UserModel> _userModel = UserModel().obs;

  UserModel get user => _userModel.value;

  set user(UserModel value) => this._userModel.value = value;
  set room(Room room) => this._userModel.value.activeRoom = room;
}
```

```dart
// // This is a basic Flutter widget test.
// //
// // To perform an interaction with a widget in your test, use the WidgetTester
// // utility that Flutter provides. For example, you can send tap and scroll
// // gestures. You can also use WidgetTester to find child widgets in the widget
// // tree, read text, and verify that the values of widget properties are correct.
//
// import 'package:flutter/material.dart';
// import 'package:flutter_test/flutter_test.dart';
```

```dart
),
    );
    expect(calls, 1);
    await tester.pump();
    expect(calls, 1);
    tester.renderObject<RenderBaselineDetector>(find.byType(BaselineDetector)).dirty();
    await tester.pump();
    expect(calls, 2);
  });
}

class BaselineDetector extends LeafRenderObjectWidget {
  const BaselineDetector(this.callback);

  final VoidCallback callback;

  @override
  RenderBaselineDetector createRenderObject(BuildContext context) => new RenderBaselineDetector(callback);

  @override
  void updateRenderObject(BuildContext context, RenderBaselineDetector renderObject) {
    renderObject.callback = callback;
  }
}

class RenderBaselineDetector extends RenderBox {
  RenderBaselineDetector(this.callback);

  VoidCallback callback;

  @override
  bool get sizedByParent => true;

  @override
  double computeMinIntrinsicWidth(double height) => 0.0;

  @override
  double computeMaxIntrinsicWidth(double height) => 0.0;

  @override
  double computeMinIntrinsicHeight(double width) => 0.0;

  @override
  double computeMaxIntrinsicHeight(double width) => 0.0;

  @override
  double computeDistanceToActualBaseline(TextBaseline baseline) {
    if (callback != null)
      callback();
    return 0.0;
  }

  void dirty() {
    markNeedsLayout();
  }

  @override
  void performResize() {
    size = constraints.smallest;
  }

  @override
  void paint(PaintingContext context, Offset offset) { }
}
```

```dart
import 'dart:convert';

import 'package:flutter/material.dart';
import 'package:widget_gen/widget_gen_annotations.dart';

import '../../../flutter_dynamic_widget.dart';
import '../library.dart';

part 'drawer.g.dart';

@WidgetClass('Drawer')
class DrawerBase extends _$DrawerBase {
  DrawerBase(this.widgetData, this.widgetContext, this.widgetRender);

  Key key;
  String semanticLabel;

  @override
  final Map<String, dynamic> widgetData;

  @override
  final WidgetContext widgetContext;

  @override
  final GenerateWidget widgetRender;
     

  @override
  get onAction => (context, val) => MaterialBase.onAction(context, val);

  @WidgetKey.widget(
    acceptWidth: 100,
    acceptHeight: 100,
    defaultValue: 'Placeholder',
  )
  Widget child;

  @PropertyKey(defaultValue: '16.0')
  double elevation;
}
```

```dart
.catchError((dynamic e) => e.toString())
            .timeout(timeLimit, onTimeout: () => 'Timed out.'));

    diagnosis[DiagnosisKeys.nsLookupEmse].complete(
        _lookup(MyIPAdresses.stormshield)
            .timeout(timeLimit, onTimeout: () => 'Timed out.'));
    diagnosis[DiagnosisKeys.nsLookupGoogle].complete(
        _lookup(MyIPAdresses.google)
            .timeout(timeLimit, onTimeout: () => 'Timed out.'));

    return diagnosis;
  }

  Future<String> _lookup(String target) async {
    try {
      final addresses = await internetAddressManager.lookup(target);

      return addresses
          .map((address) =>
              'Host: ${address.host}\nLookup: ${address.address}\n')
          .join();
    } catch (e, s) {
      return '''
Error: $e
Stacktrace: $s
''';
    }
  }

  Future<String> _run(String command, List<String> args) {
    return processManager
        .run(command, args)
        .then((result) => result.stdout.toString())
        .then((stdout) => stdout.isEmpty ? 'Nothing to show' : stdout)
        .catchError((dynamic e) => e.toString());
  }
}
```

```cmake
# The set of languages for which implicit dependencies are needed:
set(CMAKE_DEPENDS_LANGUAGES
  "CXX"
  )
# The set of files for implicit dependencies of each language:
set(CMAKE_DEPENDS_CHECK_CXX
  "/usr/src/gtest/src/gtest_main.cc" "/home/arslanali/quadrotor-simulation/hector_quadrotor_opencv/build/gtest/gtest/CMakeFiles/gtest_main.dir/src/gtest_main.cc.o"
  )
set(CMAKE_CXX_COMPILER_ID "GNU")

# Preprocessor definitions for this target.
set(CMAKE_TARGET_DEFINITIONS_CXX
  "GTEST_CREATE_SHARED_LIBRARY=1"
  "gtest_main_EXPORTS"
  )

# The include file search paths:
set(CMAKE_CXX_TARGET_INCLUDE_PATH
  "/usr/src/gtest/include"
  "/usr/src/gtest"
  )

# Targets to which this target links.
set(CMAKE_TARGET_LINKED_INFO_FILES
  "/home/arslanali/quadrotor-simulation/hector_quadrotor_opencv/build/gtest/gtest/CMakeFiles/gtest.dir/DependInfo.cmake"
  )

# Fortran module output directory.
set(CMAKE_Fortran_TARGET_MODULE_DIR "")
```

```cmake
message(STATUS "CPU does not support SSE4.1")
endif()
if(${CPUID_FLAG} GREATER 2)
  set(SUPPORT_sse42 TRUE)
  message(STATUS "CPU supports SSE4.2")
else()
  message(STATUS "CPU does not support SSE4.2")
endif()
if(${CPUID_FLAG} GREATER 3)
  set(SUPPORT_avx1 TRUE)
  message(STATUS "CPU supports AVX1")
else()
  message(STATUS "CPU does not support AVX1")
endif()
if(${CPUID_FLAG} GREATER 4)
  set(SUPPORT_avx2 TRUE)
  message(STATUS "CPU supports AVX2")
else()
  message(STATUS "CPU does not support AVX2")
endif()

set(BITS32 TRUE)
set(BITS64 FALSE)
if(CMAKE_SIZEOF_VOID_P EQUAL 8)
  set(BITS32 FALSE)
  set(BITS64 TRUE)
endif()

# Executes the target as a test once, and then once again with valgrind
# Appropriate flags are added so that GTest outputs JUnit XML for later
# processing. The target is appended to the list of tests that is used in the
# add_gtest_report macro.
macro(add_custom_test TESTNAME)
  get_target_property(TEST_LOC ${TESTNAME} LOCATION)
  add_test(${TESTNAME} ${TEST_LOC})
  if(${CMAKE_SYSTEM_NAME} MATCHES "Linux")
    add_test(${TESTNAME}_valgrind valgrind --leak-check=full --error-exitcode=1 ${TEST_LOC})
  endif()
  list(APPEND gtests ${TESTNAME})
  set(tests ${tests} CACHE INTERNAL "Test tests to run")
endmacro()

# Builds a test executable from the specified SOURCES and links
# it to any additional LINK_LIBRARIES. The sources are also
# compiled with the specified COMPILE_DEFINITIONS. Valgrind is run on each test.
macro(add_multitarget_test TESTNAME)
  cmake_parse_arguments(MTGTEST "" ""
                        "SOURCES;LINK_LIBRARIES;COMPILE_DEFINITIONS;TARGETS"
                        ${ARGN})
  foreach(TARGET ${MTGTEST_TARGETS})
    if(SUPPORT_${TARGET})
      set(TEST ${TESTNAME}_${TARGET})
      add_executable(${TEST} ${MTGTEST_SOURCES})
      set_target_properties(${TEST} PROPERTIES COMPILE_FLAGS ${OPT_FLAGS_${TARGET}} LINK_FLAGS ${OPT_FLAGS_${TARGET}})
      foreach(LINK_LIBRARY ${MTGTEST_LINK_LIBRARIES})
        target_link_libraries(${TEST} ${LINK_LIBRARY}_${TARGET})
      endforeach()
      foreach(COMPILE_DEFINITION ${MTGTEST_COMPILE_DEFINITIONS})
        set_target_properties(${TEST} PROPERTIES COMPILE_DEFINITIONS ${COMPILE_DEFINITION})
      endforeach()
      add_custom_test(${TEST})
    endif()
  endforeach()
endmacro()



# appendable export file for multitargets
function(add_multitarget_export _TARGET_NAME)
  cmake_parse_arguments(MT
                        ""
                        "EXPORTNAME"
                        "TARGETS"
                        ${ARGN}
                        )
  foreach(TARGET ${MT_TARGETS})
    set(EXPORTABLE_NAME "${_TARGET_NAME}_${TARGET}")
    export(TARGETS ${EXPORTABLE_NAME} APPEND FILE "${PROJECT_BINARY_DIR}/${MT_EXPORTNAME}.cmake")
  endforeach()
endfunction()
```

```cmake
# (C) Copyright 2016 Kurento (http://kurento.org/)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

macro(add_glib_marshal outsources outincludes name prefix)
  find_package(GLIB-GENMARSHAL REQUIRED)
  add_custom_command(
    OUTPUT "${CMAKE_CURRENT_BINARY_DIR}/${name}.h"
    COMMAND ${GLIB-GENMARSHAL_EXECUTABLE} --header "--prefix=${prefix}"
            "${CMAKE_CURRENT_SOURCE_DIR}/${name}.list"
            > "${CMAKE_CURRENT_BINARY_DIR}/${name}.h"
    DEPENDS "${CMAKE_CURRENT_SOURCE_DIR}/${name}.list"
  )
  add_custom_command(
    OUTPUT "${CMAKE_CURRENT_BINARY_DIR}/${name}.c"
    COMMAND ${GLIB-GENMARSHAL_EXECUTABLE} --body "--prefix=${prefix}"
            "${CMAKE_CURRENT_SOURCE_DIR}/${name}.list"
            > "${CMAKE_CURRENT_BINARY_DIR}/${name}.c"
    DEPENDS "${CMAKE_CURRENT_SOURCE_DIR}/${name}.list"
            "${CMAKE_CURRENT_BINARY_DIR}/${name}.h"
  )
  list(APPEND ${outsources} "${CMAKE_CURRENT_BINARY_DIR}/${name}.c")
  list(APPEND ${outincludes} "${CMAKE_CURRENT_BINARY_DIR}/${name}.h")
endmacro(add_glib_marshal)

macro(add_glib_enumtypes outsources outheaders name includeguard)
  find_package(GLIB-MKENUMS REQUIRED)
  set (HEADERS "")
  foreach(header ${ARGN})
    set (HEADERS ${HEADERS}\#include \\\"${header}\\\"\\n)
  endforeach(header)
  string(TOUPPER ${name} name_upper)
  string(REPLACE "-" "_" name_upper ${name_upper})

  add_custom_command(
    OUTPUT "${CMAKE_CURRENT_BINARY_DIR}/${name}.h"
    COMMAND ${GLIB-MKENUMS_EXECUTABLE}
```

```cmake
# The set of languages for which implicit dependencies are needed:
set(CMAKE_DEPENDS_LANGUAGES
  "C"
  )
# The set of files for implicit dependencies of each language:
set(CMAKE_DEPENDS_CHECK_C
  "/Users/vectord/GitHubSL/JSON/chapter2/leptjson.c" "/Users/vectord/GitHubSL/JSON/chapter2/bulid/CMakeFiles/leptjson.dir/leptjson.c.o"
  )
set(CMAKE_C_COMPILER_ID "Clang")

# The include file search paths:
set(CMAKE_C_TARGET_INCLUDE_PATH
  )

# Targets to which this target links.
set(CMAKE_TARGET_LINKED_INFO_FILES
  )

# Fortran module output directory.
set(CMAKE_Fortran_TARGET_MODULE_DIR "")
```

```cmake
include_guard(DIRECTORY)

function(_symlink_tree TARGET_NAME SOURCE DEST)
  if(NOT IS_ABSOLUTE ${SOURCE})
    set(SOURCE ${CMAKE_CURRENT_SOURCE_DIR}/${SOURCE})
  endif()

  if(NOT IS_ABSOLUTE ${DEST})
    set(SOURCE ${CMAKE_CURRENT_BINARY_DIR}/${DEST})
  endif()

  if(IS_DIRECTORY ${SOURCE})
    get_filename_component(dir_name ${SOURCE} NAME)
    string(APPEND dir_name "/")
    get_filename_component(parent ${SOURCE} DIRECTORY)
    file(GLOB_RECURSE files
         RELATIVE ${parent}
         CONFIGURE_DEPENDS
         LIST_DIRECTORIES false
         ${SOURCE}/*)
  else()
    if(NOT EXISTS ${SOURCE})
      message(SEND_ERROR "Missing file: ${SOURCE}")
    endif()
    get_filename_component(files ${SOURCE} NAME)
    get_filename_component(parent ${SOURCE} DIRECTORY)
  endif()

  file(GENERATE OUTPUT ${TARGET_NAME}.cmake CONTENT [[
    if (IS_DIRECTORY ${SOURCE})
      get_filename_component(dir_name ${SOURCE} NAME)
      string(APPEND dir_name "/")
      get_filename_component(parent ${SOURCE} DIRECTORY)
```

```cmake
# Copyright (c) 2012 - 2017, Lars Bilke
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification,
# are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its contributors
#    may be used to endorse or promote products derived from this software without
#    specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# CHANGES:
#
# 2012-01-31, Lars Bilke
# - Enable Code Coverage
#
# 2013-09-17, Joakim Söderberg
# - Added support for Clang.
# - Some additional usage instructions.
#
# 2016-02-03, Lars Bilke
# - Refactored functions to use named parameters
#
# 2017-06-02, Lars Bilke
# - Merged with modified version from github.com/ufz/ogs
#
#
# USAGE:
#
# 1. Copy this file into your cmake modules path.
#
# 2. Add the following line to your CMakeLists.txt:
#      include(CodeCoverage)
#
```

```cmake
"/home/colin/Documents/panel-pop/Menus/PauseMenu.cpp" "/home/colin/Documents/panel-pop/build-dir/CMakeFiles/panel-pop.dir/Menus/PauseMenu.cpp.o"
  "/home/colin/Documents/panel-pop/Rendering/BoardRenderer.cpp" "/home/colin/Documents/panel-pop/build-dir/CMakeFiles/panel-pop.dir/Rendering/BoardRenderer.cpp.o"
  "/home/colin/Documents/panel-pop/Rendering/ChainPopup.cpp" "/home/colin/Documents/panel-pop/build-dir/CMakeFiles/panel-pop.dir/Rendering/ChainPopup.cpp.o"
  "/home/colin/Documents/panel-pop/Rendering/ComboPopup.cpp" "/home/colin/Documents/panel-pop/build-dir/CMakeFiles/panel-pop.dir/Rendering/ComboPopup.cpp.o"
  "/home/colin/Documents/panel-pop/Rendering/EndlessGameRenderer.cpp" "/home/colin/Documents/panel-pop/build-dir/CMakeFiles/panel-pop.dir/Rendering/EndlessGameRenderer.cpp.o"
  "/home/colin/Documents/panel-pop/Rendering/GameRenderer.cpp" "/home/colin/Documents/panel-pop/build-dir/CMakeFiles/panel-pop.dir/Rendering/GameRenderer.cpp.o"
  "/home/colin/Documents/panel-pop/Rendering/GbQueueRenderer.cpp" "/home/colin/Documents/panel-pop/build-dir/CMakeFiles/panel-pop.dir/Rendering/GbQueueRenderer.cpp.o"
  "/home/colin/Documents/panel-pop/Rendering/Particle.cpp" "/home/colin/Documents/panel-pop/build-dir/CMakeFiles/panel-pop.dir/Rendering/Particle.cpp.o"
  "/home/colin/Documents/panel-pop/Rendering/Popup.cpp" "/home/colin/Documents/panel-pop/build-dir/CMakeFiles/panel-pop.dir/Rendering/Popup.cpp.o"
  "/home/colin/Documents/panel-pop/Rendering/Renderer.cpp" "/home/colin/Documents/panel-pop/build-dir/CMakeFiles/panel-pop.dir/Rendering/Renderer.cpp.o"
  "/home/colin/Documents/panel-pop/Rendering/TitleScreenRenderer.cpp" "/home/colin/Documents/panel-pop/build-dir/CMakeFiles/panel-pop.dir/Rendering/TitleScreenRenderer.cpp.o"
  "/home/colin/Documents/panel-pop/Rendering/VsGameRenderer.cpp" "/home/colin/Documents/panel-pop/build-dir/CMakeFiles/panel-pop.dir/Rendering/VsGameRenderer.cpp.o"
  "/home/colin/Documents/panel-pop/Rendering/helper.cpp" "/home/colin/Documents/panel-pop/build-dir/CMakeFiles/panel-pop.dir/Rendering/helper.cpp.o"
  "/home/colin/Documents/panel-pop/SDLContext.cpp" "/home/colin/Documents/panel-pop/build-dir/CMakeFiles/panel-pop.dir/SDLContext.cpp.o"
  "/home/colin/Documents/panel-pop/States/AIGameState.cpp" "/home/colin/Documents/panel-pop/build-dir/CMakeFiles/panel-pop.dir/States/AIGameState.cpp.o"
  "/home/colin/Documents/panel-pop/States/DemoGameState.cpp" "/home/colin/Documents/panel-pop/build-dir/CMakeFiles/panel-pop.dir/States/DemoGameState.cpp.o"
  "/home/colin/Documents/panel-pop/States/EndlessGameState.cpp" "/home/colin/Documents/panel-pop/build-dir/CMakeFiles/panel-pop.dir/States/EndlessGameState.cpp.o"
  "/home/colin/Documents/panel-pop/States/FadeTransition.cpp" "/home/colin/Documents/panel-pop/build-dir/CMakeFiles/panel-pop.dir/States/FadeTransition.cpp.o"
  "/home/colin/Documents/panel-pop/States/GameState.cpp" "/home/colin/Documents/panel-pop/build-dir/CMakeFiles/panel-pop.dir/States/GameState.cpp.o"
  "/home/colin/Documents/panel-pop/States/OptionsMenuState.cpp" "/home/colin/Documents/panel-pop/build-dir/CMakeFiles/panel-pop.dir/States/OptionsMenuState.cpp.o"
  "/home/colin/Documents/panel-pop/States/State.cpp" "/home/colin/Documents/panel-pop/build-dir/CMakeFiles/panel-pop.dir/States/State.cpp.o"
  "/home/colin/Documents/panel-pop/States/StateManager.cpp" "/home/colin/Documents/panel-pop/build-dir/CMakeFiles/panel-pop.dir/States/StateManager.cpp.o"
  "/home/colin/Documents/panel-pop/States/TitleScreen.cpp" "/home/colin/Documents/panel-pop/build-dir/CMakeFiles/panel-pop.dir/States/TitleScreen.cpp.o"
  "/home/colin/Documents/panel-pop/States/VsGameState.cpp" "/home/colin/Documents/panel-pop/build-dir/CMakeFiles/panel-pop.dir/States/VsGameState.cpp.o"
  "/home/colin/Documents/panel-pop/debug.cpp" "/home/colin/Documents/panel-pop/build-dir/CMakeFiles/panel-pop.dir/debug.cpp.o"
  )
set(CMAKE_CXX_COMPILER_ID "GNU")

# The include file search paths:
set(CMAKE_CXX_TARGET_INCLUDE_PATH
  "/usr/include/SDL2"
  )

# Targets to which this target links.
set(CMAKE_TARGET_LINKED_INFO_FILES
  )

# Fortran module output directory.
set(CMAKE_Fortran_TARGET_MODULE_DIR "")
```

```cmake
# The set of languages for which implicit dependencies are needed:
set(CMAKE_DEPENDS_LANGUAGES
  "CXX"
  )
# The set of files for implicit dependencies of each language:
set(CMAKE_DEPENDS_CHECK_CXX
  "/opt/wflow/pcraster/pcraster-4.2.0/pcraster-4.2.0/source/modflow/src/bas.cc" "/opt/wflow/pcraster/pcraster-4.2.0/pcraster-4.2.0/build/source/modflow/src/CMakeFiles/pcrmf.dir/bas.cc.o"
  "/opt/wflow/pcraster/pcraster-4.2.0/pcraster-4.2.0/source/modflow/src/bcf.cc" "/opt/wflow/pcraster/pcraster-4.2.0/pcraster-4.2.0/build/source/modflow/src/CMakeFiles/pcrmf.dir/bcf.cc.o"
  "/opt/wflow/pcraster/pcraster-4.2.0/pcraster-4.2.0/source/modflow/src/common.cc" "/opt/wflow/pcraster/pcraster-4.2.0/pcraster-4.2.0/build/source/modflow/src/CMakeFiles/pcrmf.dir/common.cc.o"
  "/opt/wflow/pcraster/pcraster-4.2.0/pcraster-4.2.0/source/modflow/src/dis.cc" "/opt/wflow/pcraster/pcraster-4.2.0/pcraster-4.2.0/build/source/modflow/src/CMakeFiles/pcrmf.dir/dis.cc.o"
  "/opt/wflow/pcraster/pcraster-4.2.0/pcraster-4.2.0/source/modflow/src/drn.cc" "/opt/wflow/pcraster/pcraster-4.2.0/pcraster-4.2.0/build/source/modflow/src/CMakeFiles/pcrmf.dir/drn.cc.o"
  "/opt/wflow/pcraster/pcraster-4.2.0/pcraster-4.2.0/source/modflow/src/dsp.cc" "/opt/wflow/pcraster/pcraster-4.2.0/pcraster-4.2.0/build/source/modflow/src/CMakeFiles/pcrmf.dir/dsp.cc.o"
  "/opt/wflow/pcraster/pcraster-4.2.0/pcraster-4.2.0/source/modflow/src/gridcheck.cc" "/opt/wflow/pcraster/pcraster-4.2.0/pcraster-4.2.0/build/source/modflow/src/CMakeFiles/pcrmf.dir/gridcheck.cc.o"
  "/opt/wflow/pcraster/pcraster-4.2.0/pcraster-4.2.0/source/modflow/src/mf_BinaryReader.cc" "/opt/wflow/pcraster/pcraster-4.2.0/pcraster-4.2.0/build/source/modflow/src/CMakeFiles/pcrmf.dir/mf_BinaryReader.cc.o"
  "/opt/wflow/pcraster/pcraster-4.2.0/pcraster-4.2.0/source/modflow/src/mf_utils.cc" "/opt/wflow/pcraster/pcraster-4.2.0/pcraster-4.2.0/build/source/modflow/src/CMakeFiles/pcrmf.dir/mf_utils.cc.o"
  "/opt/wflow/pcraster/pcraster-4.2.0/pcraster-4.2.0/source/modflow/src/pcg.cc" "/opt/wflow/pcraster/pcraster-4.2.0/pcraster-4.2.0/build/source/modflow/src/CMakeFiles/pcrmf.dir/pcg.cc.o"
  "/opt/wflow/pcraster/pcraster-4.2.0/pcraster-4.2.0/source/modflow/src/pcrmodflow.cc" "/opt/wflow/pcraster/pcraster-4.2.0/pcraster-4.2.0/build/source/modflow/src/CMakeFiles/pcrmf.dir/pcrmodflow.cc.o"
  "/opt/wflow/pcraster/pcraster-4.2.0/pcraster-4.2.0/source/modflow/src/rch.cc" "/opt/wflow/pcraster/pcraster-4.2.0/pcraster-4.2.0/build/source/modflow/src/CMakeFiles/pcrmf.dir/rch.cc.o"
```

```cmake
# The set of languages for which implicit dependencies are needed:
set(CMAKE_DEPENDS_LANGUAGES
  "CXX"
  )
# The set of files for implicit dependencies of each language:
set(CMAKE_DEPENDS_CHECK_CXX
  "/home/zsq/muduo-master/muduo/base/tests/AsyncLogging_test.cc" "/home/zsq/muduo-master/build/muduo/base/tests/CMakeFiles/asynclogging_test.dir/AsyncLogging_test.cc.o"
  )
set(CMAKE_CXX_COMPILER_ID "GNU")

# The include file search paths:
set(CMAKE_CXX_TARGET_INCLUDE_PATH
  "../"
  )

# Targets to which this target links.
set(CMAKE_TARGET_LINKED_INFO_FILES
  "/home/zsq/muduo-master/build/muduo/base/CMakeFiles/muduo_base.dir/DependInfo.cmake"
  )

# Fortran module output directory.
set(CMAKE_Fortran_TARGET_MODULE_DIR "")
```

```cmake
set(CMAKE_INSTALL_PREFIX "/home/lucas170198/development/emsdk/upstream/emscripten/cache/sysroot")
endif()
string(REGEX REPLACE "/$" "" CMAKE_INSTALL_PREFIX "${CMAKE_INSTALL_PREFIX}")

# Set the install configuration name.
if(NOT DEFINED CMAKE_INSTALL_CONFIG_NAME)
  if(BUILD_TYPE)
    string(REGEX REPLACE "^[^A-Za-z0-9_]+" ""
           CMAKE_INSTALL_CONFIG_NAME "${BUILD_TYPE}")
  else()
    set(CMAKE_INSTALL_CONFIG_NAME "")
  endif()
  message(STATUS "Install configuration: \"${CMAKE_INSTALL_CONFIG_NAME}\"")
endif()

# Set the component getting installed.
if(NOT CMAKE_INSTALL_COMPONENT)
  if(COMPONENT)
    message(STATUS "Install component: \"${COMPONENT}\"")
    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")
  else()
    set(CMAKE_INSTALL_COMPONENT)
  endif()
endif()

# Is this installation the result of a crosscompile?
if(NOT DEFINED CMAKE_CROSSCOMPILING)
  set(CMAKE_CROSSCOMPILING "TRUE")
endif()
```

```elixir
defmodule Butters do
  @moduledoc """
  Documentation for Butters.
  """

  require Logger
  alias Kazan.Apis.Core.V1.Pod
  alias Kazan.Models.Apimachinery.Meta.V1.ObjectMeta

  @doc """
  Create a Kazan server object that is authenticated with gcloud.
  """
  def gke_server() do
    "~/.kube/config"
    |> Path.expand
    |> Kazan.Server.from_kubeconfig()
    |> Kazan.Server.resolve_auth!(allow_command_execution: true)
  end

  @doc """
  Shortcut for `Kazan.run/2` using the default GKE server.
  """
  def run!(request) do
     Kazan.run!(request, server: Butters.gke_server())
  end

  @doc """
  Create the NodeAddinity object based on the runtime config.
  """
  def node_affinity() do
    expressions = Application.get_env(:butters, :node_affinity_blacklist)
    |> Enum.map(fn label -> %Kazan.Apis.Core.V1.NodeSelectorRequirement{key: label, operator: "DoesNotExist"} end)
    terms = [%Kazan.Apis.Core.V1.NodeSelectorTerm{match_expressions: expressions}]

    %Kazan.Apis.Core.V1.Affinity{
      node_affinity: %Kazan.Apis.Core.V1.NodeAffinity{
        required_during_scheduling_ignored_during_execution: %Kazan.Apis.Core.V1.NodeSelector{node_selector_terms: terms}
      }
    }
  end

  @doc """
  Run a single-container pod in the kubernetes cluster. All containers run in the same namespace.
  """
  def run_pod(container, name, node_name \\ nil) do
    Logger.debug("Running pod #{name} on node #{node_name}")
    namespace = Application.get_env(:butters, :namespace)

    %Pod{
      metadata: %ObjectMeta{
        labels: %{
          app: "butters",
        },
        name: name,
      },
      spec: %Kazan.Apis.Core.V1.PodSpec{
        affinity: node_affinity(),
        containers: [container],
        host_network: true,
        node_name: node_name,
        service_account_name: Application.get_env(:butters, :service_account_name),
        restart_policy: "Never",
      }
    }
    |> Kazan.Apis.Core.V1.create_namespaced_pod!(namespace)
    |> run!()
  end

  def get_logs(%{name: name, namespace: namespace}) do
    Kazan.Apis.Core.V1.read_namespaced_pod_log!(namespace, name) |> run!()
  end

  def delete_pod(%{name: name, namespace: namespace}) do
    %Kazan.Models.Apimachinery.Meta.V1.DeleteOptions{}
    |> Kazan.Apis.Core.V1.delete_namespaced_pod!(namespace, name)
    |> run!()
  end

  @doc """
  Find all nodes available for chaosing.
  """
  def all_nodes() do
```

```elixir
# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.CloudTrace.V2.Model.Attributes do
  @moduledoc """
  A set of attributes, each in the format &#x60;[KEY]:[VALUE]&#x60;.

  ## Attributes
```

```elixir
require Utils

defmodule D1 do
  @moduledoc """
  --- Day 1: The Tyranny of the Rocket Equation ---
  Santa has become stranded at the edge of the Solar System while delivering presents to other planets! To accurately calculate his position in space, safely align his warp drive, and return to Earth in time to save Christmas, he needs you to bring him measurements from fifty stars.

  Collect stars by solving puzzles. Two puzzles will be made available on each day in the Advent calendar; the second puzzle is unlocked when you complete the first. Each puzzle grants one star. Good luck!

  The Elves quickly load you into a spacecraft and prepare to launch.

  At the first Go / No Go poll, every Elf is Go until the Fuel Counter-Upper. They haven't determined the amount of fuel required yet.

  Fuel required to launch a given module is based on its mass. Specifically, to find the fuel required for a module, take its mass, divide by three, round down, and subtract 2.

  The Fuel Counter-Upper needs to know the total fuel requirement. To find it, individually calculate the fuel needed for the mass of each module (your puzzle input), then add together all the fuel values.

  What is the sum of the fuel requirements for all of the modules on your spacecraft?

  --- Part Two ---
  During the second Go / No Go poll, the Elf in charge of the Rocket Equation Double-Checker stops the launch sequence. Apparently, you forgot to include additional fuel for the fuel you just added.

  Fuel itself requires fuel just like a module - take its mass, divide by three, round down, and subtract 2. However, that fuel also requires fuel, and that fuel requires fuel, and so on. Any mass that would require negative fuel should instead be treated as if it requires zero fuel; the remaining mass, if any, is instead handled by wishing really hard, which has no mass and is outside the scope of this calculation.

  So, for each module mass, calculate its fuel and add it to the total. Then, treat the fuel amount you just calculated as the input mass and repeat the process, continuing until a fuel requirement is zero or negative.

  What is the sum of the fuel requirements for all of the modules on your spacecraft when also taking into account the mass of the added fuel? (Calculate the fuel requirements for each module separately, then add them all up at the end.)
  """

  # 9 / 3 - 2 = 1; 8 / 3 - 2 = 0

  @behaviour Day

  defp calculate_fuel(mass) when mass < 9, do: 0

  defp calculate_fuel(mass) do
    # perform mass -> fuel conversion
    fuel = div(mass, 3) - 2
    # and convert again to account for newly required fuel
    fuel + calculate_fuel(fuel)
  end

  def solve(input) do
    input = Utils.to_ints(input)

    part_1 =
      input
      |> Enum.map(fn mass -> div(mass, 3) - 2 end)
      |> Enum.sum()

    part_2 =
      input
```

```elixir
defmodule GoogleApi.Slides.V1.Model.ThemeColorPair do
  @moduledoc """
  A pair mapping a theme color type to the concrete color it represents.

  ## Attributes

  *   `color` (*type:* `GoogleApi.Slides.V1.Model.RgbColor.t`, *default:* `nil`) - The concrete color corresponding to the theme color type above.
  *   `type` (*type:* `String.t`, *default:* `nil`) - The type of the theme color.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :color => GoogleApi.Slides.V1.Model.RgbColor.t() | nil,
          :type => String.t() | nil
        }

  field(:color, as: GoogleApi.Slides.V1.Model.RgbColor)
  field(:type)
end

defimpl Poison.Decoder, for: GoogleApi.Slides.V1.Model.ThemeColorPair do
  def decode(value, options) do
    GoogleApi.Slides.V1.Model.ThemeColorPair.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Slides.V1.Model.ThemeColorPair do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
```

```elixir
defmodule Api.GraphQL.InputTypes do
  use Absinthe.Schema.Notation

  input_object :ai_competition_bot_input do
    field :title, non_null(:string)
    field :sdk, non_null(:string)
    field :source_code, non_null(:string)
  end

  input_object :competition_input do
    field :name, non_null(:string)
    field :status, non_null(:string)
    field :is_default, :boolean
  end

  input_object :team_input do
    field :name, non_null(:string)
    field :project_name, :string
    field :project_desc, :string
    field :technologies, :array
    field :applied, :boolean
    field :prize_preference, :string # stringified array
  end

  input_object :user_input do
    field :name, :string
    field :email, :string
    field :birthday, :date
    field :employment_status, :string
    field :company, :string
    field :college, :string
    field :github_handle, :string
    field :twitter_handle, :string
    field :linkedin_url, :string
    field :bio, :string
    field :role, :string
    field :tshirt_size, :string
    field :data_usage_consent, :boolean
    field :spam_consent, :boolean
    field :share_consent, :boolean
  end

  input_object :workshop_input do
    field :slug, non_null(:string)
    field :short_date, non_null(:string)
    field :short_speaker, non_null(:string)
    field :name, non_null(:string)
    field :summary, non_null(:string)
    field :description, non_null(:string)
    field :speaker, non_null(:string)
    field :participant_limit, non_null(:integer)
    field :year, non_null(:integer)
    field :speaker_image, :string
```

```elixir
defmodule HuemulixirWeb.ConnCase do
  @moduledoc """
  This module defines the test case to be used by
  tests that require setting up a connection.

  Such tests rely on `Phoenix.ConnTest` and also
  import other functionality to make it easier
  to build common data structures and query the data layer.

  Finally, if the test case interacts with the database,
  we enable the SQL sandbox, so changes done to the database
  are reverted at the end of every test. If you are using
  PostgreSQL, you can even run database tests asynchronously
  by setting `use HuemulixirWeb.ConnCase, async: true`, although
  this option is not recommended for other databases.
  """

  use ExUnit.CaseTemplate

  using do
    quote do
      # Import conveniences for testing with connections
      import Plug.Conn
      import Phoenix.ConnTest
      import HuemulixirWeb.ConnCase

      alias HuemulixirWeb.Router.Helpers, as: Routes

      # The default endpoint for testing
      @endpoint HuemulixirWeb.Endpoint
    end
  end

  setup _tags do
    {:ok, conn: Phoenix.ConnTest.build_conn()}
  end
end
```

```elixir
defmodule LibclusterEtcd.MixProject do
  use Mix.Project

  def project do
    [
      app: :libcluster_etcd,
      version: "1.1.1",
      elixir: "~> 1.7",
      start_permanent: Mix.env() == :prod,
      description: description(),
      package: package(),
      source_url: "https://github.com/dkataskin/libcluster_etcd",
      docs: docs(),
      deps: deps()
    ]
  end

  def application do
    [
      extra_applications: [:inets, :logger]
    ]
  end

  defp deps do
    [
      {:libcluster, "~> 3.0.0"},
      {:jason, "~> 1.0"},
      {:ex_doc, ">= 0.0.0", only: :dev}
    ]
```

```elixir
def to_iri_string({:iriref, _line, value}), do: value |> iri_unescape

  def to_iri({:iriref, line, value}) do
    with iri = RDF.iri(iri_unescape(value)) do
      if IRI.valid?(iri) do
        {:ok, iri}
      else
        {:error, line, "#{value} is not a valid IRI"}
      end
    end
  end

  def to_absolute_or_relative_iri({:iriref, _line, value}) do
    with iri = RDF.iri(iri_unescape(value)) do
      if IRI.absolute?(iri) do
        iri
      else
        {:relative_iri, value}
      end
    end
  end

  def to_bnode({:blank_node_label, _line, value}), do: RDF.bnode(value)
  def to_bnode({:anon, _line}), do: RDF.bnode()

  def to_literal({:string_literal_quote, _line, value}),
    do: value |> string_unescape |> RDF.literal()

  def to_literal({:integer, _line, value}), do: RDF.literal(value)
  def to_literal({:decimal, _line, value}), do: RDF.literal(value)
  def to_literal({:double, _line, value}), do: RDF.literal(value)
  def to_literal({:boolean, _line, value}), do: RDF.literal(value)

  def to_literal({:string_literal_quote, _line, value}, {:language, language}),
    do: value |> string_unescape |> RDF.literal(language: language)

  def to_literal({:string_literal_quote, _line, value}, {:datatype, %IRI{} = type}),
    do: value |> string_unescape |> RDF.literal(datatype: type)

  def to_literal(string_literal_quote_ast, type),
    do: {string_literal_quote_ast, type}

  def integer(value), do: RDF.XSD.Integer.new(List.to_string(value))
  def decimal(value), do: RDF.XSD.Decimal.new(List.to_string(value))
  def double(value), do: RDF.XSD.Double.new(List.to_string(value))
  def boolean('true'), do: true
  def boolean('false'), do: false

  def to_langtag({:langtag, _line, value}), do: value
  def to_langtag({:"@prefix", 1}), do: "prefix"
  def to_langtag({:"@base", 1}), do: "base"

  def bnode_str('_:' ++ value), do: List.to_string(value)
  def langtag_str('@' ++ value), do: List.to_string(value)
  def quoted_content_str(value), do: value |> List.to_string() |> String.slice(1..-2)
  def long_quoted_content_str(value), do: value |> List.to_string() |> String.slice(3..-4)

  def prefix_ns(value), do: value |> List.to_string() |> String.slice(0..-2)

  def prefix_ln(value),
    do: value |> List.to_string() |> String.split(":", parts: 2) |> List.to_tuple()

  def string_unescape(string),
    do: string |> unescape_8digit_unicode_seq |> Macro.unescape_string(&string_unescape_map(&1))

  def iri_unescape(string),
    do: string |> unescape_8digit_unicode_seq |> Macro.unescape_string(&iri_unescape_map(&1))

  defp string_unescape_map(?b), do: ?\b
  defp string_unescape_map(?f), do: ?\f
  defp string_unescape_map(?n), do: ?\n
  defp string_unescape_map(?r), do: ?\r
  defp string_unescape_map(?t), do: ?\t
  defp string_unescape_map(?u), do: true
  defp string_unescape_map(:unicode), do: true
  defp string_unescape_map(e), do: e

  defp iri_unescape_map(?u), do: true
  defp iri_unescape_map(:unicode), do: true
  defp iri_unescape_map(e), do: e

  def unescape_8digit_unicode_seq(string) do
    String.replace(string, ~r/\\U([0-9]|[A-F]|[a-f]){2}(([0-9]|[A-F]|[a-f]){6})/, "\\u{\\2}")
  end

  def error_description(error_descriptor) when is_list(error_descriptor) do
    error_descriptor
    |> Stream.map(&to_string/1)
    |> Enum.join("")
  end

  def error_description(error_descriptor), do: inspect(error_descriptor)
end
```

```elixir
# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.Games.V1.Model.RoomCreateRequest do
  @moduledoc """
  This is a JSON template for a room creation request.

  ## Attributes

  *   `autoMatchingCriteria` (*type:* `GoogleApi.Games.V1.Model.RoomAutoMatchingCriteria.t`, *default:* `nil`) - Criteria for auto-matching players into this room.
  *   `capabilities` (*type:* `list(String.t)`, *default:* `nil`) - The capabilities that this client supports for realtime communication.
  *   `clientAddress` (*type:* `GoogleApi.Games.V1.Model.RoomClientAddress.t`, *default:* `nil`) - Client address for the player creating the room.
  *   `invitedPlayerIds` (*type:* `list(String.t)`, *default:* `nil`) - The player IDs to invite to the room.
  *   `kind` (*type:* `String.t`, *default:* `games#roomCreateRequest`) - Uniquely identifies the type of this resource. Value is always the fixed string games#roomCreateRequest.
  *   `networkDiagnostics` (*type:* `GoogleApi.Games.V1.Model.NetworkDiagnostics.t`, *default:* `nil`) - Network diagnostics for the client creating the room.
  *   `requestId` (*type:* `String.t`, *default:* `nil`) - A randomly generated numeric ID. This number is used at the server to ensure that the request is handled correctly across retries.
  *   `variant` (*type:* `integer()`, *default:* `nil`) - The variant / mode of the application to be played. This can be any integer value, or left blank. You should use a small number of variants to keep the auto-matching pool as large as possible.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :autoMatchingCriteria => GoogleApi.Games.V1.Model.RoomAutoMatchingCriteria.t(),
          :capabilities => list(String.t()),
          :clientAddress => GoogleApi.Games.V1.Model.RoomClientAddress.t(),
          :invitedPlayerIds => list(String.t()),
          :kind => String.t(),
          :networkDiagnostics => GoogleApi.Games.V1.Model.NetworkDiagnostics.t(),
          :requestId => String.t(),
          :variant => integer()
        }

  field(:autoMatchingCriteria, as: GoogleApi.Games.V1.Model.RoomAutoMatchingCriteria)
  field(:capabilities, type: :list)
  field(:clientAddress, as: GoogleApi.Games.V1.Model.RoomClientAddress)
  field(:invitedPlayerIds, type: :list)
  field(:kind)
  field(:networkDiagnostics, as: GoogleApi.Games.V1.Model.NetworkDiagnostics)
  field(:requestId)
  field(:variant)
end
```

```elixir
defmodule BattleBoxWeb.UserRedirectController do
  use BattleBoxWeb, :controller

  def arenas(%{assigns: %{current_user: user}} = conn, _params) do
    redirect(conn, to: Routes.user_arena_path(conn, :index, user.username))
  end

  def bots(%{assigns: %{current_user: user}} = conn, _params) do
    redirect(conn, to: Routes.user_bot_path(conn, :index, user.username))
  end

  def users(%{assigns: %{current_user: user}} = conn, _params) do
    redirect(conn, to: Routes.user_path(conn, :show, user.username))
  end
end
```

```erlang
-author('fajerski@zib.de').
-vsn('$Id$').

-compile(export_all).

-define(TEST_DB, db_toke).
-define(CLOSE, close_and_delete).
-define(EQ, =:=).

-include("db_backend_SUITE.hrl").

-ifdef(have_toke).
all() -> lists:append(tests_avail(), [tester_reopen]).
-else.
all() -> [].
-endif.

suite() -> [ {timetrap, {seconds, 30}} ].

init_per_suite(Config) ->
    tester:register_type_checker({typedef, db_backend_beh, key, []}, db_backend_beh, tester_is_valid_db_key),
    tester:register_value_creator({typedef, db_backend_beh, key, []}, db_backend_beh, tester_create_db_key, 1),
    unittest_helper:start_minimal_procs(Config, [], false).

end_per_suite(Config) ->
    tester:unregister_type_checker({typedef, db_backend_beh, key, []}),
    tester:unregister_value_creator({typedef, db_backend_beh, key, []}),
    _ = unittest_helper:stop_minimal_procs(Config),
    ok.

rw_suite_runs(N) ->
    erlang:min(N, 200).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% db_toke:open/1, db_toke getters
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
-spec prop_reopen(Key::?RT:key()) -> true.
prop_reopen(Key) ->
    DB = db_toke:new(randoms:getRandomString()),
    FileName = db_toke:get_name(DB),
    check_db(DB, [], "check_db_reopen_1"),
    ?equals(db_toke:get(DB, Key), {}),
    DB1 = db_toke:put(DB, {Key}),
    db_toke:close(DB1),
    DB2 = db_toke:open(FileName),
    check_db(DB2, [{Key}], "check_db_reopen_2"),
    ?equals(db_toke:get(DB2, Key), {Key}),
    db_toke:close_and_delete(DB2),
    true.

tester_reopen(_Config) ->
    tester:test(?MODULE, prop_reopen, 1, rw_suite_runs(10)).
```

```erlang
%% Copyright (c) 2021 Exograd SAS.
%%
%% Permission to use, copy, modify, and/or distribute this software for any
%% purpose with or without fee is hereby granted, provided that the above
%% copyright notice and this permission notice appear in all copies.
%%
%% THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
%% WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
%% MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
%% SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
%% WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
%% ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR
%% IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

-module(imf_encode).

-export([heuristic_encoding_bin/1,
         encode_utf8_codepoint/1, encode_latin1_byte/1]).

-export_type([encoding/0]).

-type encoding() :: ascii | latin1 | utf8.

-spec heuristic_encoding_bin(binary()) -> encoding().
heuristic_encoding_bin(Bin) ->
  case is_ascii(Bin) of
    true ->
      ascii;
    false ->
      case unicode:characters_to_binary(Bin, utf8, utf8) of
        Bin -> utf8;
        _ -> latin1
      end
  end.

-spec is_ascii(binary()) -> boolean().
is_ascii(<<>>) -> true;
is_ascii(<<C, Rest/binary>>) when C >= 0, C =< 127 ->
  is_ascii(Rest);
is_ascii(_) ->
  false.

-spec encode_utf8_codepoint(byte()) -> iodata().
encode_utf8_codepoint(C) when
    C > $\s, C =< $~, C =/= $_, C =/= $=, C =/= $! ->
  [C];
encode_utf8_codepoint(C) ->
```

```erlang
% the License.

-module(cb_auth_info).

-export([get/0, trick_dialyzer/1]).

% This is a fake cb_auth_info service (provided by ns_server in couchbase stack)

get() ->
    % We can't just return `{auth, <<"admin_user">>, <<"admin_passwd">>}` as
    % the dialyzer would complain that it never returns
    % `{error, server_not_ready}`. Hence there's another function to trick the
    % dialyzer. As this module is *only* used to run couchdb without the full
    % stack, this is an acceptable trade-off.
```

```erlang
-spec warn(Msg) -> Json when Msg :: iodata(), Json :: binary().
warn(Msg) ->
    jsone:encode(#{
        text => iolist_to_binary(Msg),
        color => <<"red">>
    }).

-spec info(Msg) -> Json when Msg :: iodata(), Json :: binary().
info(Msg) ->
    jsone:encode(#{text => iolist_to_binary(Msg)}).
```

```erlang
%%%=============================================================================
%%% @copyright (C) 2017, Aeternity Anstalt
%%% @doc
%%%   Utils for (mocking tests).
%%% @end
%%%=============================================================================

-module(aec_test_utils).

-export([ running_apps/0
        , loaded_apps/0
        , restore_stopped_and_unloaded_apps/2
        , mock_time/0
        , unmock_time/0
        , mock_difficulty_as_target/0
        , unmock_difficulty_as_target/0
        , mock_governance/0
        , unmock_governance/0
        , mock_fast_cuckoo_pow/0
        , mock_fast_and_deterministic_cuckoo_pow/0
        , mock_prebuilt_cuckoo_pow/1
        , mock_genesis_and_forks/0
        , mock_genesis_and_forks/1
        , unmock_genesis_and_forks/0
        , wait_for_it/2
        , wait_for_it_or_timeout/3
        , wait_for_pred_or_timeout/3
        , exec_with_timeout/2
        , start_chain_db/0
        , stop_chain_db/0
        , extend_block_chain_with_key_blocks/2
        , extend_block_chain_with_key_blocks/5
        , extend_block_chain_with_micro_blocks/2
        , extend_block_chain_with_micro_blocks/3
        , extend_block_chain_with_state/2
        , aec_keys_setup/0
        , aec_keys_cleanup/1
        , aec_keys_bare_setup/0
        , aec_keys_bare_cleanup/1
        , gen_block_chain_with_state/1
        , gen_blocks_only_chain/1
        , gen_blocks_only_chain/2
        , gen_blocks_only_chain/3
        , gen_block_chain_with_state/2
        , blocks_only_chain/1
        , genesis_block/0
        , genesis_block_with_state/0
        , genesis_block_with_state/1
        , genesis_accounts/0
        , genesis_accounts_balances/1
        , create_keyblock_with_state/2
        , create_keyblock_with_state/3
        , create_keyblock_with_state/4
        , create_state_tree/0
        , create_state_tree_with_account/1
        , create_state_tree_with_accounts/1
        , create_state_tree_with_accounts/2
        , create_temp_key_dir/0
        , remove_temp_key_dir/1
        , copy_forks_dir/2
        , sign_micro_block/2
        , sign_tx/2
        , co_sign_tx/2
        , substitute_innermost_tx/2
        , sign_tx/3
        , sign_tx_hash/2
        , signed_spend_tx/1
        , wait_for_pubkey/0
        , min_gas_price/0
        , dev_reward_setup/3
        ]).

-include_lib("eunit/include/eunit.hrl").
-include_lib("aecontract/include/hard_forks.hrl").
-include("blocks.hrl").

-ifdef(DEBUG).
-define(ifDebugFmt(Str, Args), ?debugFmt(Str, Args)).
-else.
-define(ifDebugFmt(Str, Args), ok).
-endif.

-define(GENESIS_ACCOUNTS, [{<<"_________my_public_key__________">>, 100}]).

running_apps() ->
```

```erlang
%% Copyright (c) 2018-2020 Zachary N. Dean  All Rights Reserved.
%%
%% This file is provided to you under the Apache License,
%% Version 2.0 (the "License"); you may not use this file
%% except in compliance with the License.  You may obtain
%% a copy of the License at
%%
%%   http://www.apache.org/licenses/LICENSE-2.0
%%
%% Unless required by applicable law or agreed to in writing,
%% software distributed under the License is distributed on an
%% "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
%% KIND, either express or implied.  See the License for the
%% specific language governing permissions and limitations
%% under the License.
%%
%% -------------------------------------------------------------------

-include("xqerl.hrl").

%% node index module
%-define(INDEX, xqldb_idx_dets).
%-define(INDEX, xqldb_idx_ets).
-define(INDEX, xqldb_idx_mi).
-define(PINDEX, emojipoo).

% node kinds

% non-conformant xml
-define(fragment, 7).
-define(document, 0).
-define(element, 1).
-define(attribute, 2).
-define(namespace, 3).
-define(proc_inst, 4).
-define(comment, 5).
-define(text, 6).

-define(att_str, 0).
-define(att_id, 1).
-define(att_idref, 2).

-define(trace(A, B), io:format("~p: ~p~n", [A, B])).

-define(IS_LOCAL(Ref), erlang:node(Ref) == erlang:node()).

-define(TEXT, "text").
-define(NAME, "name").
-define(STRUCT, "struct").
-define(PATH, "path").
-define(JSON, json).
-define(RESOURCES, res).

-type res_type() :: xml | text | raw | item | link.

-type db() :: #{
    texts := pid(),
    names := pid(),
    namespaces := pid(),
    structure := pid(),
    paths := pid(),
    json := pid(),
    resources := pid(),
    db_uri := pid(),
    db_name := pid(),
    db_lock := pid(),
    _ => _
}.
```

```erlang
-module(cowboy_telemetry_h_SUITE).

-compile(export_all).
-compile(nowarn_export_all).

-include_lib("common_test/include/ct.hrl").
-include_lib("stdlib/include/assert.hrl").

all() ->
    [
     successful_request,
     failed_request,
     chunked_request,
     client_timeout_request,
     idle_timeout_request,
     chunk_timeout_request,
     bad_request
     ].

init_per_suite(Config) ->
    application:ensure_all_started(ranch),
    application:ensure_all_started(telemetry),
    Dispatch = cowboy_router:compile([{"localhost", [
                                      {"/success", test_h, success},
                                      {"/chunked", test_h, chunked},
                                      {"/chunked_slow", test_h, chunked_slow},
                                      {"/slow", test_h, slow},
                                      {"/failure", test_h, failure}
                                     ]}]),
    {ok, _} = cowboy:start_clear(http, [{port, 8080}], #{
                  env => #{dispatch => Dispatch},
                  stream_handlers => [cowboy_telemetry_h, cowboy_stream_h],
                  idle_timeout => 150
              }
    ),
    Config.

end_per_suite(_Config) ->
    application:stop(ranch),
    application:stop(telemetry).

successful_request(_Config) ->
    Events = [
        [cowboy, request, start],
        [cowboy, request, stop],
        [cowboy, request, exception]
    ],
    telemetry:attach_many(successful_request, Events, fun ?MODULE:echo_event/4, self()),
    {ok, {{_Version, 200, _ReasonPhrase}, _Headers, _Body}} =
        httpc:request(get, {"http://localhost:8080/success", []}, [], []),
    receive
        {[cowboy, request, start], StartMeasurements, StartMetadata} ->
            ?assertEqual([system_time], maps:keys(StartMeasurements)),
            ?assertEqual([req, streamid], maps:keys(StartMetadata))
    after
        1000 -> ct:fail(successful_request_start_event)
    end,
    receive
        {[cowboy, request, stop], StopMeasurements, StopMetadata} ->
            ?assert(is_map_key(duration, StopMeasurements)),
            ?assert(is_map_key(req_body_duration, StopMeasurements)),
            ?assert(is_map_key(req_body_length, StopMeasurements)),
            ?assert(is_map_key(resp_duration, StopMeasurements)),
            ?assert(is_map_key(resp_body_length, StopMeasurements)),
            %
            ?assert(is_map_key(streamid, StopMetadata)),
            ?assert(is_map_key(req, StopMetadata)),
            ?assert(is_map_key(ref, StopMetadata)),
            ?assert(is_map_key(pid, StopMetadata)),
            ?assert(is_map_key(resp_headers, StopMetadata)),
            ?assert(is_map_key(resp_status, StopMetadata))
    after
        1000 -> ct:fail(successful_request_stop_event)
    end,
    receive
```

```erlang
%% @author Couchbase <info@couchbase.com>
%% @copyright 2009-2019 Couchbase, Inc.
%%
%% Licensed under the Apache License, Version 2.0 (the "License");
%% you may not use this file except in compliance with the License.
%% You may obtain a copy of the License at
%%
%%      http://www.apache.org/licenses/LICENSE-2.0
%%
%% Unless required by applicable law or agreed to in writing, software
%% distributed under the License is distributed on an "AS IS" BASIS,
%% WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
%% See the License for the specific language governing permissions and
%% limitations under the License.
%%
%% ns_config_rep is a server responsible for all things configuration
%% synch related.
%%
%% NOTE: that this code tries to merge similar replication requests
%% before trying to perform them. That's beneficial because due to
%% some nodes going down some replications might take very long
%% time. Which will cause our mailbox to grow with easily mergable
%% requests.
%%
-module(ns_config_rep).

-behaviour(gen_server).

-include("ns_common.hrl").

-ifdef(TEST).
-include_lib("eunit/include/eunit.hrl").
-endif.

-define(PULL_TIMEOUT, ?get_timeout(pull, 10000)).
-define(SELF_PULL_TIMEOUT, ?get_timeout(self_pull, 30000)).
-define(SYNCHRONIZE_TIMEOUT, ?get_timeout(sync, 30000)).

-define(MERGING_EMERGENCY_THRESHOLD, ?get_param(merge_mailbox_threshold, 2000)).

% How to launch the thing.
-export([start_link/0, start_link_merger/0]).

% gen_server
-export([init/1, handle_call/3, handle_cast/2, handle_info/2,
         terminate/2, code_change/3]).

% API
-export([ensure_config_pushed/0,
         ensure_config_seen_by_nodes/0,
         ensure_config_seen_by_nodes/1, ensure_config_seen_by_nodes/2,
         pull_and_push/1, pull_from_one_node_directly/1]).

-export([get_remote/2, pull_remotes/1, pull_remotes/2, push_keys/1]).

-record(state, {}).

start_link() ->
    gen_server:start_link({local, ?MODULE}, ?MODULE, [], []).

start_link_merger() ->
    proc_lib:start_link(erlang, apply, [fun merger_init/0, []]).

init([]) ->
    Self = self(),
    ns_pubsub:subscribe_link(ns_config_events_local,
                             fun (Keys) ->
                                     Self ! {push_keys, Keys}
                             end),
    % Start with startup config sync.
    ?log_debug("init pulling", []),
    pull_random_node(),
    ?log_debug("init pushing", []),
    do_push(),
    % Have ns_config reannounce its config for any synchronization that
    % may have occurred.
    ?log_debug("init reannouncing", []),
    ns_config:reannounce(),
    % Schedule some random config syncs.
    schedule_config_sync(),
    ok = ns_node_disco_rep_events:add_sup_handler(),
    {ok, #state{}}.

merger_init() ->
    erlang:register(ns_config_rep_merger, self()),
    proc_lib:init_ack({ok, self()}),
    merger_loop().

merger_loop() ->
    EnterTime = os:timestamp(),
    receive
        {merge_compressed, Blob} ->
            WakeTime = os:timestamp(),
            KVList = misc:decompress(Blob),
            system_stats_collector:increment_counter(total_config_merger_sleep_time, timer:now_diff(WakeTime, EnterTime)),
            merge_one_remote_config(KVList),
            system_stats_collector:increment_counter(total_config_merger_run_time, timer:now_diff(os:timestamp(), WakeTime)),
            system_stats_collector:increment_counter(total_config_merger_runs, 1),
            {message_queue_len, QL} = erlang:process_info(self(), message_queue_len),
            system_stats_collector:set_counter(config_merger_queue_len, QL),
            case QL > ?MERGING_EMERGENCY_THRESHOLD of
                true ->
                    ?log_warning("Queue size emergency state reached. "
                                 "Will kill myself and resync"),
                    exit(emergency_kill);
                false -> ok
            end;
```

```erlang
try_token(TokenId, TokenSecret, Context) ->
    case m_oauth2:get_token_access(TokenId, Context) of
        {ok, #{ <<"secret">> := TokenSecret } = Token} ->
            #{
                <<"user_id">> := UserId,
                <<"user_groups">> := UserGroups,
                <<"is_read_only">> := IsReadOnly,
                <<"is_full_access">> := IsFullAccess
            } = Token,
            Options = case IsFullAccess of
                true ->
                    % No restriction on user groups
                    #{
                        is_read_only => IsReadOnly
                    };
                false ->
                    % Limited access, user groups will be filtered
                    #{
                        user_groups => UserGroups,
                        is_read_only => IsReadOnly
                    }
            end,
            case z_auth:is_enabled(UserId, Context) of
                true ->
                    % TODO: add a log entry for the request
                    z_acl:logon(UserId, Options, Context);
                false ->
                    % User is disabled, maybe throw a 403 here?
                    lager:info("Authenticated OAuth2 request for disabled user ~p with token ~p", [ UserId, TokenId ]),
                    Context
            end;
        {ok, _} ->
            % Mismatch on secret, maybe throw a 400 here?
            lager:info("Authenticated OAuth2 request with wrong secret ~p", [ TokenId ]),
            Context;
        {error, _} ->
            % Illegal token, maybe throw a 400 here?
            lager:info("Authenticated OAuth2 request for unknown token ~p", [ TokenId ]),
            Context
    end.


-spec manage_schema( z_module_manager:manage_schema(), z:context() ) -> ok.
manage_schema(Version, Context) ->
    m_oauth2:manage_schema(Version, Context).
```

```erlang
start_link() ->
    gen_server:start_link({local, ?SERVER}, ?MODULE, [], []).

ping_error() ->
    gen_server:cast(?SERVER, ping_error).

ping() ->
    gen_server:cast(?SERVER, ping).

init([]) ->
    process_flag(trap_exit, true),
    link_ex:start_link(),
    {ok, #state{}}.

handle_call(_Request, _From, State) ->
    Reply = ok,
    {reply, Reply, State}.

handle_cast(ping, State) ->
    link_ex:ping(),
    {noreply, State};
handle_cast(ping_error, State) ->
    link_ex ! a_message_i_dont_understand,    
    {noreply, State}.

handle_info({'EXIT', _Pid, _Reason}, State) ->
    io:format("Restarting link_ex~n"),
    link_ex:start_link(),
    {noreply, State}.

terminate(_Reason, _State) ->
    ok.

code_change(_OldVsn, State, _Extra) ->
    {ok, State}.
```

```erlang
contextValues,
  fallback = asn1_DEFAULT
}).

-record('EncryptedPrivateKeyInfo', {
  encryptionAlgorithm,
  encryptedData
}).

-record('EncryptedPrivateKeyInfo_encryptionAlgorithm', {
  algorithm,
  parameters = asn1_NOVALUE
}).

-record('Attributes_SETOF', {
  type,
  values,
  valuesWithContext = asn1_NOVALUE
}).

-record('Attributes_SETOF_valuesWithContext_SETOF', {
  value,
  contextList
}).

-record('PrivateKeyInfo', {
  version,
  privateKeyAlgorithm,
  privateKey,
  attributes = asn1_NOVALUE
}).

-record('PrivateKeyInfo_privateKeyAlgorithm', {
  algorithm,
  parameters = asn1_NOVALUE
}).

-define('rc5-CBC-PAD', {1,2,840,113549,3,9}).
-define('rc2CBC', {1,2,840,113549,3,2}).
-define('des-EDE3-CBC', {1,2,840,113549,3,7}).
-define('desCBC', {1,3,14,3,2,7}).
-define('id-hmacWithSHA1', {1,2,840,113549,2,7}).
-define('encryptionAlgorithm', {1,2,840,113549,3}).
-define('digestAlgorithm', {1,2,840,113549,2}).
-define('id-PBMAC1', {1,2,840,113549,1,5,14}).
-define('id-PBES2', {1,2,840,113549,1,5,13}).
-define('pbeWithSHA1AndRC2-CBC', {1,2,840,113549,1,5,11}).
-define('pbeWithSHA1AndDES-CBC', {1,2,840,113549,1,5,10}).
-define('pbeWithMD5AndRC2-CBC', {1,2,840,113549,1,5,6}).
-define('pbeWithMD5AndDES-CBC', {1,2,840,113549,1,5,3}).
-define('pbeWithMD2AndRC2-CBC', {1,2,840,113549,1,5,4}).
-define('pbeWithMD2AndDES-CBC', {1,2,840,113549,1,5,1}).
-define('id-PBKDF2', {1,2,840,113549,1,5,12}).
-define('pkcs-5', {1,2,840,113549,1,5}).
-define('pkcs', {1,2,840,113549,1}).
-define('rsadsi', {1,2,840,113549}).
-endif. %% _PKCS_FRAME_HRL_
```

```swift
//
//  ClubDetailViewController.swift
//  PMS-iOS-V2
//
//  Created by GoEun Jeong on 2021/05/19.
//

#if os(iOS)

import UIKit
import Reachability
import RxSwift
import RxCocoa

public final class ClubDetailViewController: UIViewController {
    @Inject internal var viewModel: ClubViewModel
    private let name: String
    private let activityIndicator = UIActivityIndicatorView()
    private let reachability = try! Reachability()
    private let disposeBag = DisposeBag()
    private let detailView = ClubDetailView()
    
    public init(name: String) {
        self.name = name
        super.init(nibName: nil, bundle: nil)
        self.bindInput()
    }
    
    required init?(coder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    
    public override func viewDidLoad() {
        navigationItem.largeTitleDisplayMode = .never
        self.navigationItem.title = name
        self.setupSubview()
        self.bindOutput()
    }
    
    private func setupSubview() {
        view.backgroundColor = Colors.white.color
        view.addSubview(detailView)
        
        detailView.snp.makeConstraints {
            $0.edges.equalTo(view.layoutMarginsGuide)
        }
    }
    
    public override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        try! reachability.startNotifier()
//        AnalyticsManager.view_club_detail.log(name: name)
    }
    
    public override func viewWillDisappear(_ animated: Bool) {
        super.viewWillDisappear(animated)
        reachability.stopNotifier()
    }
    
    private func bindInput() {
        self.rx.viewDidLoad
            .map { _ in return self.name }
            .bind(to: viewModel.input.getDetailClub)
            .disposed(by: disposeBag)
        
        reachability.rx.isDisconnected
            .bind(to: viewModel.input.noInternet)
            .disposed(by: disposeBag)
    }
    
    private func bindOutput() {
        viewModel.output.detailClub
            .subscribe { [weak self] club in
                self?.detailView.setupView(model: club)
            }.disposed(by: disposeBag)
        
        viewModel.output.isLoading
            .bind(to: activityIndicator.rx.isAnimating)
            .disposed(by: disposeBag)
    }
}

#endif
```

```swift
//
//  Expedition.swift
//  
//

import Fluent
import Vapor

final class Expedition: Model, Content {
    static let schema = "expeditions"
    
    @ID(key: "id", generatedBy: .random)
    var id: UUID?

    @Field(key: "area")
    var area: String?

    @Field(key: "name")
    var name: String

    @Field(key: "number")
    var number: Int

    @Field(key: "suffix")
    var suffix: String?

    @Field(key: "objective")
    var objective: String?

    @Siblings(through: ExpeditionCoChief.self, from: \.$expedition, to: \.$person)
    var coChiefs: [Person]
    
    @Siblings(through: ExpeditionLoggingStaffScientist.self, from: \.$expedition, to: \.$person)
    var loggingStaffScientists: [Person]
  
    @Siblings(through: ExpeditionStaffScientist.self, from: \.$expedition, to: \.$person)
    var staffScientists: [Person]

    init() { }

    init(id: UUID? = nil, area: String?, name: String, number: Int, suffix: String?, objective: String?) {
        self.id = id
        self.area = area
        self.name = name
        self.number = number
        self.suffix = suffix
        self.objective = objective
    }
}
```

```swift
let r = "4"
let b = "3"
let g = "2"
let count = Int(r + b + g)!

if (count / 4) == 0 {
    print(true)
} else {
    print(false)
}
```

```swift
/*
 Copyright (c) 2019 Bartosz Polaczyk
 
 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
 in the Software without restriction, including without limitation the rights
 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:
 
 The above copyright notice and this permission notice shall be included in
 all copies or substantial portions of the Software.
 
 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
```

```swift
import Foundation

public class AnalyticsAdBreak {
    var id: String
    var ads: Array<AnalyticsAd>
    var position: AdPosition?
    var offset: String?
    var scheduleTime: TimeInterval?
    var replaceContentDuration: TimeInterval?
    var preloadOffset: Int64?
    var tagType: AnalyticsAdTagType?
    var tagUrl: String?
    var persistent: Bool?
    var fallbackIndex: Int = 0
    
    init(id: String, ads: Array<AnalyticsAd>) {
        self.id = id
        self.ads = ads
    }
}
```

```swift
}
}

@objc protocol DebugHostsTableViewDataSourceDelegate: class, NSObjectProtocol {
    func useProdHost()
    func useTestHost()
}

class DebugHostsTableViewDataSource: NSObject {
    weak var delegate: DebugHostsTableViewDataSourceDelegate?
}

// MARK: UITableViewDataSource

extension DebugHostsTableViewDataSource: UITableViewDataSource {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return DebugHostsTableViewCells.caseCount
    }

    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = UITableViewCell(style: .value1, reuseIdentifier: "value1")
        cell.textLabel?.text = DebugHostsTableViewCells(rawValue: indexPath.row)!.name
        return cell
    }
}

// MARK: UITableViewDelegate

extension DebugHostsTableViewDataSource: UITableViewDelegate {
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        let _ = delegate?.perform(DebugHostsTableViewCells(rawValue: indexPath.row)!.selector)
    }
}
```

```swift
public class PreviewKeyboardLayoutProvider: KeyboardLayoutProvider {
    
    public init(context: KeyboardContext = .preview) {
        let inputProvider = StandardKeyboardInputSetProvider(context: context)
        provider = StandardKeyboardLayoutProvider(inputSetProvider: inputProvider)
    }
    
    private let provider: KeyboardLayoutProvider
    
    public func keyboardLayout(for context: KeyboardContext) -> KeyboardLayout {
        provider.keyboardLayout(for: context)
    }
    
    public func register(inputSetProvider: KeyboardInputSetProvider) {
        provider.register(inputSetProvider: inputSetProvider)
    }
}
```

```swift
// FrameTests.swift
//
// Copyright (c) 2014 Josip Cavar
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

import UIKit
import XCTest

class FrameTests: XCTestCase {
    
    override func setUp() {
        super.setUp()
    }
    
    override func tearDown() {
        super.tearDown()
    }
    
    func testPullToRefreshViewFrame() {
        let scrollView = UIScrollView(frame: CGRect(x: 0, y: 0, width: 100, height: 500))
        scrollView.addPullToRefreshWithAction { }
        XCTAssertNotNil(scrollView.pullToRefreshView, "pullToRefreshView should not be nil")
        XCTAssertEqual(scrollView.pullToRefreshView!.frame.width, scrollView.frame.width, "scrollView and pullToRefreshView should have same width")
        XCTAssertGreaterThan(scrollView.pullToRefreshView!.frame.height, CGFloat(0), "height should be grater than zero")
    }
    
    func testPullToRefreshViewFrameWithInsets() {
        let scrollView = UIScrollView(frame: CGRect(x: 0, y: 0, width: 100, height: 500))
        scrollView.contentInset = UIEdgeInsets(top: 40, left: 0, bottom: 0, right: 0)
        scrollView.addPullToRefreshWithAction { }
        XCTAssertNotNil(scrollView.pullToRefreshView, "pullToRefreshView should not be nil")
        XCTAssertEqual(scrollView.pullToRefreshView!.frame.width, scrollView.frame.width, "scrollView and pullToRefreshView should have same width")
        XCTAssertGreaterThan(scrollView.pullToRefreshView!.frame.height, CGFloat(0), "height should be grater than zero")
    }
    
    func testPullToRefreshViewFrameWhenStarted() {
        let scrollView = UIScrollView(frame: CGRect(x: 0, y: 0, width: 100, height: 500))
        scrollView.addPullToRefreshWithAction { }
        scrollView.startPullToRefresh()
        XCTAssertNotNil(scrollView.pullToRefreshView, "pullToRefreshView should not be nil")
        XCTAssertEqual(scrollView.pullToRefreshView!.frame.height, scrollView.contentInset.top, "height should be equal to inset when animating")
    }
    
    func testPullToRefreshViewOffsetWhenStarted() {
        let scrollView = UIScrollView(frame: CGRect(x: 0, y: 0, width: 100, height: 500))
        scrollView.addPullToRefreshWithAction { }
        scrollView.startPullToRefresh()
        XCTAssertNotNil(scrollView.pullToRefreshView, "pullToRefreshView should not be nil")
        XCTAssertEqual(-scrollView.contentInset.top, scrollView.contentOffset.y, "content offset should be equal to content inset")
    }
}
```

```swift
//
//  LiveAudioDecoder.swift
//  VoodooLivePlayer
//
//  Created by voodoo on 2019/12/10.
//  Copyright © 2019 Voodoo-Live. All rights reserved.
//

import Foundation

class LiveAudioDecoder : LiveDecoder {

}
```

```swift
/*
 MIT License
 
 Copyright (c) 2018 NUM Technology Ltd
 
 Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
 documentation files (the "Software"), to deal in the Software without restriction, including without limitation
 the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and
 to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 
 The above copyright notice and this permission notice shall be included in all copies or substantial portions of
 the Software.
 
 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
 WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS
 OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
 OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

//
//  StringEscapeReplacer.swift
//  MODL-Swift
//
//  Created by Nicholas Jones on 14/05/2019.

import Foundation

internal struct StringEscapeReplacer {
    private static let replacements: [String: String] = [
        "~\\" : "\\",
        "\\\\" : "\\",
        "~~" : "~",
        "\\~" : "~",
        "~(" : "(",
        "\\(" : "(",
        "~)" : ")",
        "\\)" : ")",
        
        "~[" : "[",
        "\\[" : "[",
        "~]" : "]",
        "\\]" : "]",
        
        "~{" : "{",
        "\\{" : "{",
        "~}" : "}",
        "\\}" : "}",
        
        "~;" : ";",
        "\\;" : ";",
        "~:" : ":",
        "\\:" : ":",
        
        "~\"" : "\"",
        "\\\"" : "\"",
        
        "~=" : "=",
        "\\=" : "=",
        "~/" : "/",
        "\\/" : "/",
        
        "<" : "<",
        "\\<" : "<",
        "~>" : ">",
        "\\>" : ">",
        
        "~&" : "&",
        "\\&" : "&",
        
        "!" : "!",
        "\\!" : "!",
        "~|" : "|",
        "\\|" : "|",
        
        //TODO: check these and all other replacements make sense with Swift strings
        //        "\\t" : "\t",
//        "\\n" : "\n",
//        "\\b" : "\b",
//        "\\f" : "\f",
//        "\\r" : "\r"
    ]
    
    private static let graveReplacements = [
                "~`" : "`",
                "\\`" : "`"
    ]
    
    func replace(_ inputString: String) -> String {
        var output = inputString
        for (key, value) in StringEscapeReplacer.replacements {
                output = output.replacingOccurrences(of: key, with: value)
        }
        return output
    }
    
    func replaceGraves(_ inputString: String) -> String
    {
        var output = inputString
        for (key, value) in StringEscapeReplacer.graveReplacements {
            output = output.replacingOccurrences(of: key, with: value)
        }
        return output
    }
}
```

```swift
/*   Copyright 2018-2021 Prebid.org, Inc.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 */

import Foundation
import UIKit

@objcMembers
public class MediationInterstitialAdUnit : MediationBaseInterstitialAdUnit {
    
    // MARK: - Public Properties
    
    public var adFormat: AdFormat {
        get { adUnitConfig.adFormat }
        set { adUnitConfig.adFormat = newValue }
    }
    
    public var additionalSizes: [CGSize]? {
        get { adUnitConfig.additionalSizes }
        set { adUnitConfig.additionalSizes = newValue }
    }
    
    // MARK: - Public Methods
    
    public override convenience init(configId: String, mediationDelegate: PrebidMediationDelegate) {
        self.init(configId: configId, minSizePercentage: nil, mediationDelegate: mediationDelegate)
    }
    
    public init(configId: String, minSizePercentage: CGSize?, mediationDelegate: PrebidMediationDelegate) {
        super.init(configId: configId, mediationDelegate: mediationDelegate)
        
        if let size = minSizePercentage {
            adUnitConfig.minSizePerc = NSValue(cgSize: size)
        }
    }
    
    // MARK: - Computed Properties
    
    public override var configId: String {
        adUnitConfig.configID
    }
}
```

```lua
---------------------------------------------------------------------
-- Selected v1.3 - code library
--[[-----------------------------------------------------------------
	needs to be loaded to function.
]]
```

```lua
local Over = Game:addState('Over')
local healthBarStencil = require('health_bar_stencil')
local MOVE_TO_ELLIPSE_TIME = 4

local function lerp(t, v0, v1, d)
  t = math.clamp(0, t / d, 1)
  return v0 + math.pow(t, 2) * (v1 - v0)
end

function Over:enteredState()
  self.winner = self.players[1]
  self.loser = self.players[2]
  for i,player in ipairs(self.players) do
    if #player.defenders > 0 then
      self.winner = player
    else
      self.loser = player
    end
  end
  self.t = 0

  local attacker = self.winner.attackers[1]
  attacker.start_x = attacker.x
  attacker.start_y = attacker.y
  local defender = self.winner.defenders[1]
  defender.start_x = defender.x
  defender.start_y = defender.y
end

function Over:update(dt)
  self.t = self.t + dt
  local ox, oy = push:getWidth() / 2, push:getHeight() / 2
  local ex1, ey1 = math.cos(self.t) * 200 + ox, math.sin(self.t) * 100 + oy
  local ex2, ey2 = math.cos(self.t - math.pi) * 200 + ox, math.sin(self.t - math.pi) * 100 + oy

  local attacker = self.winner.attackers[1]
  local defender = self.winner.defenders[1]
  attacker.x = lerp(self.t, attacker.start_x, ex1, MOVE_TO_ELLIPSE_TIME)
  attacker.y = lerp(self.t, attacker.start_y, ey1, MOVE_TO_ELLIPSE_TIME)
```

```lua
local eyeicon = Material( "golden_hud_v3/eye.png" )
hook.Add("HUDPaint", "GoldenHudV3.wanted", function()
	local wanted = LocalPlayer():getDarkRPVar( "wanted" )
	if wanted and GoldenHUDV3.EnableWanted then
        local y = ScrW() / 2
        local x = ScrH() - 50

        draw.RoundedBox(0, ScrW() / 2 - 200 , x, 345, 40, GoldenHUDV3.BackgroundColor)

        draw.RoundedBox(0, ScrW() / 2 - 195 , x + 5, 30, 30, GoldenHUDV3.HeaderColor)
        draw.RoundedBox(0, ScrW() / 2 - 160 , x + 5, 300, 30, GoldenHUDV3.HeaderColor)

        draw.SimpleText(GoldenHUDV3.Language[ GoldenHUDV3.ConfigLanguage ][ "wanted" ], "GoldenHudV3Font", ScrW() / 2 - 155, y + 77, GoldenHUDV3.HeaderTextColor, TEXT_ALIGN_LEFT)

        surface.SetMaterial( eyeicon )
        surface.SetDrawColor(GoldenHUDV3.IconColor) 
        surface.DrawTexturedRect( ScrW() / 2 - 191, y + 79, 22, 22 )

    end
end)
```

```lua
--[[ Netherstorm -- Ambassador's Honor Guard.lua

This script was written and is protected
by the GPL v2. This script was released
by BlackHer0  of the BLUA Scripting
Project. Please give proper accredidations
when re-releasing or sharing this script
with others in the emulation community.

~~End of License Agreement
-- BlackHer0, July, 21th, 2008. ]]

function Honor_OnEnterCombat(Unit, Event)
    Unit:RegisterEvent("Honor_Cleave",1000,0)
end

function Honor_Cleave(Unit, Event)
    Unit:FullCastSpellOnTarget(15284,Unit:GetClosestPlayer())
end

function Honor_OnLeaveCombat(Unit,Event)
	Unit:RemoveEvents()
end

function Honor_OnDied(Unit,Event)
    Unit:RemoveEvents()
end

RegisterUnitEvent (20199, 1, "Honor_OnEnterCombat")
RegisterUnitEvent (20199, 2, "Honor_OnLeaveCombat")
RegisterUnitEvent (20199, 4, "Honor_OnDied")
```

```lua
rc = stmt:exec()
    if(rc ~= 0) then
        return -202, "Error executing selectv statement"
    end

    local a = stmt:fetch()

    if(a == nil) then
        return -203, "No record found"
    end

    stmt:fetch()

    local update_stmt = "update commitsp set a = " .. a.a + 1 .. " where a = " .. a.a
    stmt, rc = db:prepare(update_stmt)
    if(rc ~= 0) then
        return -204, "Error preparing update statement"
    end

    rc = stmt:exec()
    if(rc ~= 0) then
        return -205, "Error executing update statement"
    end

    rc = db:commit()
    return 0
end
```

```lua
function main()
  local input = string.gmatch(io.read(), "[^ ]+")
  local n = tonumber(input())
  local m = tonumber(input())

  local ans
  if n < 2*m then
    ans = n
  else
    ans = math.floor(m/2)
  end

  m = m - 2*ans

  ans = ans + math.floor(m/4)

  print(ans)
end

main()
```

```lua
require("toggleterm").setup{
  open_mapping = [[<c-\>]],
  direction = 'float',
  close_on_exit = true, -- close the terminal window when the process exits
  shell = vim.o.shell, -- change the default shell
  shade_terminals = false,
  float_opts = {
    border = 'single',
    width = 140,
    height = 35,
    winblend = 3,
    highlights = {
      border = "Normal",
      background = "Normal",
    }
  }
}
```

```lua
--- Spotify.loop(enabled)
--- Function
--- Sets repeat on/off. Repeat is Lua keyword, hence "loop".
---
--- Parameters:
---  * enabled - boolean, set repeat on (true) or off (false)
---
--- Returns:
---  * None
module.loop = function(enabled)
    local state = "false"
    if enabled then
        state = "true"
    end

    module._runApplescript("tell application \"Spotify\" to set repeating to ".. state)
end

module._runApplescript = function(script)
    module._logger.d(script)
    return hs.osascript.applescript(script)
end

return module
```

```lua
local Util = require(script.Parent.Parent.Shared.Util)

local stringType = {
	Validate = function (value)
		return value ~= nil
	end;

	Parse = function (value)
		return tostring(value)
	end;
}

local numberType = {
	Transform = function (text)
		return tonumber(text)
	end;

	Validate = function (value)
		return value ~= nil
	end;

	Parse = function (value)
		return value
	end;
}

local intType = {
	Transform = function (text)
		return tonumber(text)
	end;

	Validate = function (value)
		return value ~= nil and value == math.floor(value), "Only whole numbers are valid."
	end;

	Parse = function (value)
		return value
	end
}

local boolType do
	local truthy = Util.MakeDictionary({"true", "t", "yes", "y", "on", "enable", "enabled", "1", "+"});
	local falsy = Util.MakeDictionary({"false"; "f"; "no"; "n"; "off"; "disable"; "disabled"; "0"; "-"});

	boolType = {
		Transform = function (text)
			return text:lower()
		end;

		Validate = function (value)
			return truthy[value] ~= nil or falsy[value] ~= nil, "Please use true/yes/on or false/no/off."
		end;

		Parse = function (value)
			if truthy[value] then
				return true
			elseif falsy[value] then
				return false
			else
				error("Unknown boolean value.")
			end
		end;
	}
end

return function (cmdr)
	cmdr:RegisterType("string", stringType)
	cmdr:RegisterType("number", numberType)
	cmdr:RegisterType("integer", intType)
	cmdr:RegisterType("boolean", boolType)
end
```

```lua
require("scripts/globals/bcnm");
require("scripts/globals/missions");

function onTrade(player,npc,trade)
    TradeBCNM(player,npc,trade);
end;

function onTrigger(player,npc)

    if (EventTriggerBCNM(player,npc)) then
        return 1;
    end

end;

function onEventUpdate(player,csid,option,extras)
    EventUpdateBCNM(player,csid,option,extras);
end;

-----------------------------------
-- onEventFinish Action
-----------------------------------

function onEventFinish(player,csid,option)
    -- printf("onFinish CSID: %u",csid);
    -- printf("onFinish RESULT: %u",option);

    if (EventFinishBCNM(player,csid,option)) then
        return;
    end

end;
```

```lua
local h = io.read("*number")
local w = io.read("*number")
local black = 0
local white = 0

for i=1, h do
	for j=1, w do
		local t = io.read()
		if t == "." then
			white = white + 1
		elseif t == "#" then
			black = black + 1
		end
	end
end

local function getABC()
	local n = h + w - 1
	if white < n then
		print(-1)
		return
	end
	local sum = h*w
	local num = sum - n - black
	if num < 0 then
		print(-1)
		return
	end
	print(num)
end

getABC()
```

```lua
if debug_msg then
                naughty.notify({title=string.format("k: %d", k), text=string.format("r: %d, c: %d, y: %d, x: %d, h: %d, w: %d", row, col, g.y, g.x, g.height, g.width)})
            end

            p.geometries[c] = g
        end
    end
end

layout.name = "basl"
function layout.arrange(p)
    return do_basl(p)
end

return layout
```

```clojure
{:produces       ["application/json" "application/transit+json" "application/edn"]
   :consumes       ["application/json" "application/transit+json" "application/edn"]
   :access-control {:roles authorized_roles :headers (->access-control allow-origin)}
   :handler handler})


(defn options_request [allow-origin type]
  {:produces       ["application/json" "application/transit+json" "application/edn"]
   :consumes       ["application/json" "application/transit+json" "application/edn" "*/*"]
   :access-control {:roles [] :headers (->access-control allow-origin)}
   :handler (fn [req]
              (let [query (->query (ring-extract-account-data req) type)]
                {:body {} :status  200}))})
```

```clojure
(let [N (read-line)
      Ni (map #(Character/digit % 10) N)
      Nif (first Ni)] 
  (-> Ni 
      distinct 
      count 
      ( #(cond
          (= 1 %) N 
          (= Nif (apply max Ni)) (apply str (repeat 3 Nif))
          :else (apply str (repeat 3 (inc Nif)))))
      println))
```

```clojure
:watdiv (fn [nodes _]
             (bench/with-nodes [node nodes]
               (let [[ingest-results query-results] (->> (watdiv-crux/run-watdiv-bench node {:test-count 100})
                                                         (split-at 2))]
                 (-> (concat (->> ingest-results (map watdiv-crux/render-comparison-durations))
                             (watdiv-crux/summarise-query-results query-results))
                     (bench/with-comparison-times)
                     (doto post-to-slack)))))

   :tpch-stress (fn [nodes {:keys [tpch-query-count tpch-field-count] :as opts}]
                  (bench/with-nodes [node nodes]
                    (-> (bench/with-comparison-times
                          (tpch-stress/run-tpch-stress-test node {:query-count tpch-query-count
                                                                  :field-count tpch-field-count}))
                        (doto post-to-slack))))

   :tpch (fn [nodes {:keys [tpch-scale-factor] :as opts}]
           (bench/with-nodes [node nodes]
             (-> (bench/with-comparison-times
                   (tpch/run-tpch-test node {:scale-factor tpch-scale-factor}))
                 (doto post-to-slack))))
   :lmdb-tpch-test (fn [_ _]
                     (bench/with-nodes [node (select-keys bench/nodes ["standalone-lmdb" "kafka-lmdb"])]
                       (-> (bench/with-comparison-times
                             (tpch/run-tpch-test node {:scale-factor 0.01}))
                           (doto post-to-slack))))})

(defn parse-args [args]
  (let [{:keys [options summary errors]}
        (cli/parse-opts args
                        [[nil "--nodes node1,node2" "Node types"
                          :id :selected-nodes
                          :default (set (keys (dissoc bench/nodes "standalone-lmdb" "kafka-lmdb")))
                          :parse-fn #(set (string/split % #","))]

                         [nil "--tests test1,test2" "Tests to run"
                          :id :selected-tests
                          :default (set (keys (dissoc bench-tests :tpch-stress)))
                          :parse-fn #(into #{} (map keyword (set (string/split % #","))))]

                         [nil "--tpch-query-count 20" "Number of queries to run on TPCH stress"
                          :id :tpch-query-count
                          :default 35
                          :parse-fn #(Long/parseLong %)]

                         [nil "--tpch-field-count 10" "Number of fields to run queries with on TPCH stress"
                          :id :tpch-field-count
                          :default (count tpch-stress/fields)
                          :parse-fn #(Long/parseLong %)]

                         [nil "--tpch-scale-factor 0.01" "Scale factor for regular TPCH test"
                          :id :tpch-scale-factor
                          :default 0.01
                          :parse-fn #(Double/parseDouble %)]

                         [nil "--repeat 10" "Number of times to repeat the current bench run"
                          :id :repetitions
                          :default 1
                          :parse-fn #(Long/parseLong %)]])]
    (if errors
      (binding [*out* *err*]
        (run! println errors)
        (println summary))

      options)))

(defn run-benches [{:keys [selected-nodes selected-tests repetitions] :as opts}]
  (let [nodes (select-keys bench/nodes selected-nodes)]
    (bench/with-embedded-kafka
      (->> (for [n (range repetitions)
                 test-fn (vals (select-keys bench-tests selected-tests))]
             (test-fn nodes opts))
           (into [] (mapcat identity))))))

(defn -main [& args]
  (bench/post-to-slack (format "*Starting Benchmark*, Crux Version: %s, Commit Hash: %s\n"
                               bench/crux-version bench/commit-hash))

  (let [bench-results (run-benches (-> (or (parse-args args)
                                           (System/exit 1))
                                       (update :selected-nodes disj "h2-rocksdb" "sqlite-rocksdb")))]

    (bench/post-to-slack (format "*Finished Benchmark*, Crux Version: %s, Commit Hash: %s\n"
                                 bench/crux-version bench/commit-hash))
    (bench/send-email-via-ses (bench/results->email bench-results)))

  (shutdown-agents))
```

```clojure
include Makefile.config

FSTAR_HOME ?= ..

include Makefile.boot.common  #provides variables INCLUDE_PATHS, FSTAR_BOOT_OPTIONS, and CACHE_DIR, shared with interactive mode targets

FSTAR_BOOT ?= $(FSTAR)

# FSTAR_C: This is the way in which we invoke F* for boostrapping
#   -- we use automatic dependence analysis based on files in ulib, src/{basic, ...} and boot
#   -- MLish and lax tune type-inference for use with unverified ML programs
FSTAR_C=$(FSTAR_BOOT) $(FSTAR_BOOT_OPTIONS) --cache_checked_modules --odir ocaml-output

# Each "project" for the compiler is in its own namespace.  We want to
# extract them all to OCaml.  Would be more convenient if all of them
# were within, say, FStar.Compiler.*
EXTRACT_NAMESPACES=FStar.Extraction FStar.Fsdoc FStar.Parser		\
		   FStar.Reflection FStar.SMTEncoding FStar.Syntax	\
		   FStar.Tactics FStar.Tests FStar.ToSyntax		\
		   FStar.TypeChecker FStar.Profiling

# Except some files that want to extract are not within a particularly
# specific namespace. So, we mention extracting those explicitly.
EXTRACT_MODULES=FStar.Pervasives FStar.Common FStar.Range FStar.Thunk		\
		FStar.Options FStar.Ident FStar.Errors FStar.Const	\
		FStar.Order FStar.Dependencies		\
		FStar.Interactive.CompletionTable			\
		FStar.Interactive.JsonHelper FStar.Interactive.QueryHelper \
		FStar.Interactive.PushHelper FStar.Interactive.Lsp	\
		FStar.Interactive.Ide FStar.Interactive.Legacy		\
		FStar.CheckedFiles FStar.Universal FStar.Prettyprint    \
		FStar.Main

# And there are a few specific files that should not be extracted at
# all, despite being in one of the EXTRACT_NAMESPACES
NO_EXTRACT=FStar.Tactics.Native FStar.Tactics.Load	\
	   FStar.Extraction.ML.PrintML

EXTRACT = $(addprefix --extract_module , $(EXTRACT_MODULES))		\
	  $(addprefix --extract_namespace , $(EXTRACT_NAMESPACES))	\
	  $(addprefix --no_extract , $(NO_EXTRACT))

# We first lax type-check each file, producing a .checked.lax file
# We touch the file, because if F* determined that the .checked.lax
# file was already up to date, it doesn't touch it. Touching it here
# ensures that if this rule is successful then %.checked.lax is more
# recent than its dependences.
%.checked.lax:
	$(FSTAR_C) $< --already_cached "* -$(basename $(notdir $<))"
	touch $@

# And then, in a separate invocation, from each .checked.lax we
# extract an .ml file
ocaml-output/%.ml:
	$(BENCHMARK_PRE) $(FSTAR_C) $(notdir $(subst .checked.lax,,$<)) \
                   --codegen OCaml \
                   --extract_module $(basename $(notdir $(subst .checked.lax,,$<)))

# --------------------------------------------------------------------
# Dependency analysis for bootstrapping
# --------------------------------------------------------------------

# The dependence analysis starts from the main file and the unit-tests
# file as the roots, mentioning the the modules that are to be
# extracted. This emits dependences for each of the ML files we want
# to produce.
#
# We do an indirection via ._depend so we don't write an empty file if
# the dependency analysis failed.

.depend:
	$(FSTAR_C) --dep full                 \
		   fstar/FStar.Main.fs	      \
		   boot/FStar.Tests.Test.fst  \
		   $(EXTRACT)		      > ._depend
	mv ._depend .depend
	mkdir -p $(CACHE_DIR)

depend: .depend

include .depend

all-ml: $(ALL_ML_FILES)
```

```clojure
(ns sudoku.subs
  (:require [re-frame.core :refer [reg-sub]]))

(reg-sub
 :db/old-board
 (fn [db _]
```

```clojure
(loop [out "", txt txt, delim-count 0] ; delim-count is needed to handle nested comments
      (let [[hdtxt resttxt] (split-at (count opener) txt)] ; This splits "/* blah blah */" into hdtxt="/*" and restxt="blah blah */"	
	(printf "hdtxt=%8s resttxt=%8s out=%8s txt=%16s delim-count=%s\n" (apply str hdtxt) (apply str resttxt) out (apply str txt) delim-count)
	(cond
	 (empty? hdtxt)    (str out (apply str txt))
	 (= (apply str hdtxt) opener) (recur out resttxt (inc delim-count))
	 (= (apply str hdtxt) closer) (recur out resttxt (dec delim-count))
	 (= delim-count 0)(recur (str out (first txt)) (rest txt) delim-count)
	 true             (recur out (rest txt) delim-count))))))
```

```clojure
(set! *unchecked-math* true)


(defn input []
  (->> (clojure.string/split (read-line) #"\s")
    (map #(bigint %))))

(defn ProductandGCD [[N P]]
  (nth
    (->> (range 1 (inc P))
      (map #(vector (Math/pow % N) %))
      (take-while #(<= (nth % 0)  P))
      (filter #(zero? (rem P (nth % 0))))
      (apply max-key #(nth % 0)))
    1))



(->> (input)
  ProductandGCD
  println)
```

```clojure
[ring.util.response :as rr]
            [ring.middleware.anti-forgery :as af]
            [training-plan-heroku-app.db :as db]))

(defn jsend-response
  "Use JSend as a application format for all service endpoints."
  [data]
  (rr/response {:status "success"
                :data data}))

;; https://github.com/weavejester/compojure/wiki/Routes-In-Detail
;; https://github.com/weavejester/compojure-example
(defroutes app-routes
  "The defroutes macro returns a Ring handler based on a list of routes."
  (GET "/" [] "Hello World")

  ;; Services
  (GET "/location" []
    (jsend-response (db/get-locations)))

  (GET "/location/:id" [id :<< as-int]
    (jsend-response (db/find-location-by-id id)))

  (POST "/location/:id" [id :<< as-int :as request]
    (let [loc (merge {:id id} (:body request))]
      (jsend-response (db/update-location! loc))))

  (DELETE "/location/:id" [id :<< as-int]
    (jsend-response (db/delete-location! id)))

  (POST "/location" {body :body}
    (jsend-response (db/insert-location! body)))

  ;; This line will serve static requrests out of public directory
  (route/resources "/")

  ;; Not found for all other requests.
  (route/not-found "Not Found"))

(def app
  "app-routes is a Ring handler that handles our desired routes.
  wrap-json-response will convert responses to JSON.
  wrap-defaults uses app-routes as a handler and site-defaults as a config."
  (let [defaults (assoc-in site-defaults [:security :anti-forgery] false)]
    (-> app-routes
        (ring-json/wrap-json-response)
        (ring-json/wrap-json-body {:keywords? true :bigdecimals? true})
        (wrap-defaults defaults))))
```

```clojure
(ns phzr.impl.accessors.game-objects.bob)

(def bob-get-properties
  {:alpha "alpha"
   :data "data"
   :flip-x "flipX"
   :flip-y "flipY"
   :parent "parent"
   :tint "tint"
   :visible "visible"
   :x "x"
   :y "y"})

(def bob-set-properties
  {:alpha "alpha"
   :data "data"
   :flip-x "flipX"
   :flip-y "flipY"
   :parent "parent"
   :tint "tint"
   :visible "visible"
   :x "x"
   :y "y"})
```

```clojure
[rems.db.entitlements :as entitlements]
            [ring.util.http-response :refer :all]
            [schema.core :as s]))

(s/defschema GetEntitlementsResponse
  [schema/Entitlement])

(def entitlements-api
  (context "/entitlements" []
    :tags ["entitlements"]

    (GET "/" []
      :summary "With proper privileges gets all entitlements, otherwise returns user's own entitlements."
      :roles #{:logged-in}
      :query-params [{user :- (describe s/Str "return entitlements for this user (optional), ignored if the user doesn't have appropriate privileges") nil}
                     {resource :- (describe s/Str "return entitlements for this resource (optional)") nil}
                     {expired :- (describe s/Bool "whether to include expired entitlements") false}]
      :return GetEntitlementsResponse
      (ok (entitlements/get-entitlements-for-api user resource expired)))))
```

```clojure
;; Copyright 2020 The Defold Foundation
;; Licensed under the Defold License version 1.0 (the "License"); you may not use
;; this file except in compliance with the License.
;; 
;; You may obtain a copy of the License, together with FAQs at
;; https://www.defold.com/license
;; 
;; Unless required by applicable law or agreed to in writing, software distributed
;; under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
;; CONDITIONS OF ANY KIND, either express or implied. See the License for the
;; specific language governing permissions and limitations under the License.

(ns integration.save-test
  (:require [clojure.data :as data]
            [clojure.java.io :as io]
            [clojure.string :as str]
            [clojure.test :refer :all]
            [dynamo.graph :as g]
            [editor.asset-browser :as asset-browser]
            [editor.defold-project :as project]
            [editor.disk :as disk]
            [editor.fs :as fs]
            [editor.git :as git]
            [editor.git-test :refer [with-git]]
            [editor.progress :as progress]
            [editor.protobuf :as protobuf]
            [editor.resource :as resource]
            [editor.workspace :as workspace]
            [integration.test-util :as test-util]
            [service.log :as log]
            [support.test-support :refer [spit-until-new-mtime touch-until-new-mtime with-clean-system]]
            [util.text-util :as text-util])
  (:import [com.dynamo.atlas.proto AtlasProto$Atlas]
           [com.dynamo.gameobject.proto GameObject$CollectionDesc GameObject$PrototypeDesc]
           [com.dynamo.gui.proto Gui$SceneDesc]
           [com.dynamo.label.proto Label$LabelDesc]
           [com.dynamo.model.proto ModelProto$ModelDesc]
           [com.dynamo.particle.proto Particle$ParticleFX]
           [com.dynamo.render.proto Font$FontDesc]
           [com.dynamo.spine.proto Spine$SpineModelDesc Spine$SpineSceneDesc]
           [com.dynamo.tile.proto Tile$TileSet]
           [java.io StringReader File]
           [org.apache.commons.io FileUtils]
           [org.eclipse.jgit.api Git ResetCommand$ResetType]))

(def ^:private ext->proto {"atlas" AtlasProto$Atlas
                           "font" Font$FontDesc
                           "go" GameObject$PrototypeDesc
                           "collection" GameObject$CollectionDesc
                           "gui" Gui$SceneDesc
                           "label" Label$LabelDesc
                           "model" ModelProto$ModelDesc
                           "particlefx" Particle$ParticleFX
                           "spinescene" Spine$SpineSceneDesc
                           "spinemodel" Spine$SpineModelDesc
                           "tileset" Tile$TileSet
                           "tilesource" Tile$TileSet})

(deftest save-all
  (let [queries ["**/env.cubemap"
                 "**/switcher.atlas"
                 "**/atlas_sprite.collection"
                 "**/props.collection"
                 "**/sub_props.collection"
```

```clojure
(defproject com.wsscode/pathom "2.3.0-alpha17"
  :description "A Clojure library designed to provide a collection of helper functions to support Clojure(script) graph parsers using\nom.next graph syntax."
  :url "https://github.com/wilkerlucio/pathom"
  :license {:name "MIT"
            :url  "https://opensource.org/licenses/MIT"}

  :source-paths ["src"]

  :dependencies [[camel-snake-kebab "0.4.0"]
                 [com.wsscode/async "1.0.12"]
                 [com.wsscode/spec-inspec "1.0.0-alpha2"]
                 [edn-query-language/eql "1.0.0"]
                 [org.clojure/data.json "0.2.6"]

                 [com.cognitect/transit-clj "1.0.324" :scope "test"]
                 [com.cognitect/transit-cljs "0.8.256" :scope "test"]

                 [com.fulcrologic/guardrails "0.0.12"]

                 ; provided

                 [org.clojure/test.check "1.0.0" :scope "provided"]
                 [cheshire/cheshire "5.8.1" :scope "provided"]
                 [clj-http "3.8.0" :scope "provided"]
                 [fulcrologic/fulcro "2.6.0" :scope "provided"]
                 [org.clojure/clojure "1.10.0" :scope "provided"]
                 [org.clojure/clojurescript "1.9.946" :scope "provided"]]

  :plugins [[lein-cljsbuild "1.1.7"]]

  :cljsbuild {:builds [{:id           "sanity"
                        :source-paths ["src"]
                        :compiler     {:optimizations :whitespace
                                       :verbose       true
                                       :main          com.wsscode.pathom.connect}}]}

  :jar-exclusions [#"src-docs/.*" #"docs/.+" #"node-modules/.+"]

  :deploy-repositories [["clojars" {:url   "https://clojars.org/repo/"
                                    :creds :gpg :checksum :ignore}]
                        ["releases" :clojars]
                        ["snapshots" :clojars]]

  :aliases {"pre-release"  [["vcs" "assert-committed"]
                            ["change" "version" "leiningen.release/bump-version" "release"]
                            ["vcs" "commit"]
                            ["vcs" "tag" "v"]]

            "post-release" [["change" "version" "leiningen.release/bump-version"]
                            ["vcs" "commit"]
                            ["vcs" "push"]]}

  :profiles {:dev {:source-paths ["src" "src-docs" "workspaces/src"]
                   :dependencies [[criterium "0.4.4"]
                                  [nubank/workspaces "1.0.0-preview7"]
                                  [com.cognitect/transit-clj "0.8.313"]
                                  [com.cognitect/transit-cljs "0.8.256"]]}})
```

```perl
#!/usr/bin/perl
# for education purpose only
# NEVER use this script in productive environments
# accept the law
# do NOT hack
# more about professional IT security training at
# www.itconsulting-wolfinger.de
#



use Net::RawIP qw(:pcap);
my($destination) = @ARGV;
if(@ARGV < 1) {
 die"\nUsage $0 <destination ip>\n\n";
}
#Find the Device eth0,eth1,eth2 that the packet needs to be sent over and received.
$dev = rdev($destination);

#Whats the IP address of this interface, used to specify the return address.
$ip_addr = ${ifaddrlist()}{$dev};

#New Raw Class packet type.
$a = new Net::RawIP ({icmp =>{}});

#Set Source and Destination IP header and tell $a its a ICMP packet.
$a->set({ip => { saddr => $ip_addr, daddr => $destination},
	 icmp => {type => 20, id => $$}
	 });  

#Set the options for pcap Tcpdump.
$filt = "ip proto \\icmp and src host $destination";
$size = 1500;
$tout = 30;
$pcap = $a->pcapinit($dev,$filt,$size,$tout);
$i =0;

#Fork into two parts, one listens for the ICMP packets and the other sends them.
if(fork){
	loop $pcap,-1,\&dmp,\@a; 
}
else{
	# Read STDIN AKA your terminal and send after each return/enter.
	while(<STDIN>) {
		if (length($_) > 1400) {
			print "Line too large\n";
		} else { 
			$a->set({icmp => {sequence => $i,data => $_}});
			$a->send(1,1);
			$i++
		}
	}

}

#This is called from the loop function above.
sub dmp{
	$a->bset(substr($_[2],14));
	my @ar = $a->get({ip => [qw(ttl)], icmp=>[qw(sequence data)]});
	printf("%u: %s\n",length($ar[2])+8,$ar[2]);
 }
```

```perl
my $line = <STDIN>;
chomp($line);
@data = split(/ /, $line);

if($data[1] % $data[0] == 0){
  $result = $data[1] + $data[0];
}else {
  $result = $data[1] - $data[0];
}
print($result)
```

```perl
# Generated by default/object.tt
package Paws::KinesisAnalytics::CloudWatchLoggingOptionDescription;
  use Moose;
  has CloudWatchLoggingOptionId => (is => 'ro', isa => 'Str');
  has LogStreamARN => (is => 'ro', isa => 'Str', required => 1);
  has RoleARN => (is => 'ro', isa => 'Str', required => 1);

1;

### main pod documentation begin ###

=head1 NAME

Paws::KinesisAnalytics::CloudWatchLoggingOptionDescription

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::KinesisAnalytics::CloudWatchLoggingOptionDescription object:

  $service_obj->Method(Att1 => { CloudWatchLoggingOptionId => $value, ..., RoleARN => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::KinesisAnalytics::CloudWatchLoggingOptionDescription object:

  $result = $service_obj->Method(...);
  $result->Att1->CloudWatchLoggingOptionId

=head1 DESCRIPTION

Description of the CloudWatch logging option.

=head1 ATTRIBUTES


=head2 CloudWatchLoggingOptionId => Str

ID of the CloudWatch logging option description.


=head2 B<REQUIRED> LogStreamARN => Str

ARN of the CloudWatch log to receive application messages.


=head2 B<REQUIRED> RoleARN => Str

IAM ARN of the role to use to send application messages. Note: To write
application messages to CloudWatch, the IAM role used must have the
C<PutLogEvents> policy action enabled.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::KinesisAnalytics>
```

```perl
use v5.18;
use warnings;
sub read_line { chomp(my $s = <>); $s }
use List::Util qw( sum0 );
sub splited_read_line { split / /, read_line }

my $N = read_line;
say sum0 map {
  my ($x, $u) = splited_read_line;
  $u eq 'BTC' ? $x * 380000 : $x;
} 0 .. $N - 1;
```

```perl
use strict;
use warnings;
package CPAN::Meta::Requirements;
# ABSTRACT: a set of version requirements for a CPAN dist

our $VERSION = '2.131';

#pod =head1 SYNOPSIS
#pod
#pod   use CPAN::Meta::Requirements;
#pod
#pod   my $build_requires = CPAN::Meta::Requirements->new;
#pod
#pod   $build_requires->add_minimum('Library::Foo' => 1.208);
#pod
#pod   $build_requires->add_minimum('Library::Foo' => 2.602);
#pod
#pod   $build_requires->add_minimum('Module::Bar'  => 'v1.2.3');
#pod
#pod   $METAyml->{build_requires} = $build_requires->as_string_hash;
#pod
#pod =head1 DESCRIPTION
#pod
#pod A CPAN::Meta::Requirements object models a set of version constraints like
#pod those specified in the F<META.yml> or F<META.json> files in CPAN distributions,
#pod and as defined by L<CPAN::Meta::Spec>;
#pod It can be built up by adding more and more constraints, and it will reduce them
```

```perl
#!/usr/bin/perl
use 5.010;

say("Hello World!");
```

```perl
chomp (my ($n, $h) = split / /, readline ARGV);
my @s;
my $max_r = 0;
for (1..$n) {
  chomp (my ($r, $c) = split / /, readline ARGV);
  push @s, [$r, $c];
  $max_r = $r if $r > $max_r;
}
my @sorted = reverse sort { $a->[1] <=> $b->[1] } @s;

my $hp = $h;
my $cnt = 0;
for my $i (@sorted) {
  last if $i->[1] <= $max_r;
  $hp -= $i->[1];
  $cnt++;
  print "$cnt\n" and exit if $hp <= 0;
}

$cnt += int($hp / $max_r);
$cnt++ unless int($hp / $max_r) == $hp / $max_r;

print "$cnt\n" and exit;
```

```perl
1	56	123	137	199	225
2	3	112	116	125	247	260
3	60	71	78	90	93	140	167	187	215	241
4	20	132	146
5	91	123	220
6	5	59	96	187	242
7	17	256
8	2	40	129	154
9	18	52	143	212
10	82	158	177
11	195	214
12	1	25	26	73	132	166	220
13	65	78	91	162	180	205
14	29	46	47	58	113	146	174
15	117
16	55	91	128	164	190
17	63	65	158	215
18	25	60	143	241	253
19	18	49	73	96	123	153	172	183	204
20	7	140	176	184	249
21	119	136	227
22	9	48	128	139	149	190	197	202	236
23	34	52	56	72	188	258	260
24	38	60	93	197
25	89	234	236
26	94	134	223
27	194	228
28	102	140
29	81	111	174	222	236	250
30	1	103	245
31	38	87	101
32	120	139	239
33	164	210	221	249
34	67	71	122	172	210	259
35	17	123	136
36	44	112	165	168	245
37	41	95	129	142
38	95	110	211	242
39	1	91	110	206
40	73	119	130	188	197	221
41	60	87	97	104	121	125	144
42	28	92	196	199	220	227	233
43
44	16	131	141	160	217	227
45	6	95	140
46	215	243
47	9	53	79	80	128
48	63	69	84	126	128	133	155	179
49	77	101	193
50	30	240
51	30	58	153	243	244
52	62	125	173	177	180
53	153
54	2	18	42	87	167	233	249	255
55	76	124	144	219	223
56	33	102	162	176	200
57	78	128	157	158
58	27	36	71	171	198	250
59	89	169	232
60	1	89	113	189	249
61	159
62	17	37	109	133	195	197	210	226
63	54	57
64	46	50	97	174	259
65	23	68	74	200	204
66	7	28	34	219
67	13	15	16	92	186	207	209	233	242	247	260
68	19
69	14	54	68	87	145	161	186	257
70	32	67	72	79	222
71	221
72	31	55	175	226	253
73	4	35	37	115	153	184	245	247	252
74	18	124	152	158	254	259
75	39	155
76	63	96	130	171
77	42	106	136	208
78	58	64	104	184	217
79	72	116	135	139	140	160	202
80	59	109	146	214	218
```

```perl
my $line = <STDIN>;
    chomp($line);
    my @strlist = split(/ /, $line);
    my $a = strlist[0];
    my $b = strlist[1];
     
    my $c = $a + $b;
     
    if (($a + $b) < ($a - $b)) {
      $c = $a - $b;
    } elsif ( ($a + $b) < ($a * $b)) {
      $c = $a * $b;
    }
    print $c;
```

```perl
use POSIX 'ceil';
my($H,$A) = glob<>;
print ceil($H/$A);
```

```perl
# -*-Perl-*-
## Bioperl Test Harness Script for Modules
##

my $error;
use strict;
BEGIN { 
    # to handle systems with no installed Test module
    # we include the t dir (where a copy of Test.pm is located)
    # as a fallback
    $error = 0; 
    eval { require Test; };
    if( $@ ) {
	use lib 't';
    }
    use Test;
    plan tests => 17;
}

use Bio::Tree::Node;
use Bio::Tree::AlleleNode;

ok(1);

my $node1 = new Bio::Tree::Node();
my $node2 = new Bio::Tree::Node();
ok($node1->is_Leaf() );
ok($node1->ancestor, undef);

my $pnode = new Bio::Tree::Node();
$pnode->add_Descendent($node1);
ok($node1->ancestor, $pnode);
$pnode->add_Descendent($node2);
ok($node2->ancestor, $pnode);

ok(! $pnode->is_Leaf);

my $phylo_node = new Bio::Tree::Node(-bootstrap => 0.25,
				     -id => 'ADH_BOV',
				     -desc => 'Taxon 1');
$node1->add_Descendent($phylo_node);
ok(! $node1->is_Leaf);
ok($phylo_node->ancestor, $node1);
ok($phylo_node->id, 'ADH_BOV');
ok($phylo_node->bootstrap, 0.25);
ok($phylo_node->description, 'Taxon 1');

my $allele_node = new Bio::Tree::AlleleNode(-alleles => { 'm1' => [ 0 ],
							  'm2' => [ 1 ],
							  'm3' => [ 0,4] });
ok($allele_node);
my @mkrs = $allele_node->get_marker_names;

ok(@mkrs, 3);
ok($allele_node->get_alleles('m3'), 2);
my ($a1) = $allele_node->get_alleles('m1');
ok($a1, 0);

my ($a2,$a3) = $allele_node->get_alleles('m3');
ok($a2, 0);
ok($a3, 4);
```

```perl
my $n=get;
if $n==1 {say "Hello World";}
else {
  $n=get;
  say $n+get;
}
```

```perl
$a = "k";
@b = split(//, "eyence");

chomp($s = <>);
if($s =~ /keyence$/){
	$r = "YES";
}elsif($s =~ /^k/){
	if($s =~ /^keyence/){
		$r = "YES";
	}else{
		for (1 .. 5){
			$a .= shift(@b);
			$str = join("", @b);
			if($s =~ /^$a.*$str$/){
				$r = "YES";
				last;
			}
		}
	}
}else{
	$r = "NO";
}

print "$r\n";
```

```perl
use strict;
my($x,$n)=glob <>;
if($n!=0){
my @p = <>;
my $t;
my $c;
my $a;
my $b;
my $h;
$h=0;
$a = $x-$t;
$b = $x+$t;
for($t=0;$h!=0;$t++){
for($c=0;$c<=100;$c++){
if($a==$p[$c]){
$h = $a;$c=$c+100;}
elsif($b==$p[$c]){$h=$b;$c=$c+100;}
}}
print $h;
}
else{print $x;}
```

```perl
package MIP::Recipes::Download::Cadd_gnomad_genomes;

use 5.026;
use Carp;
use charnames qw{ :full :short };
use English qw{ -no_match_vars };
use File::Basename qw{ dirname };
use File::Spec::Functions qw{ catfile };
use open qw{ :encoding(UTF-8) :std };
use Params::Check qw{ allow check last_error };
use strict;
use utf8;
use warnings;
use warnings qw{ FATAL utf8 };

## CPANM
use autodie qw{ :all };
use Readonly;

## MIPs lib/
use MIP::Constants qw{ $NEWLINE $SPACE $UNDERSCORE };

BEGIN {

    require Exporter;
    use base qw{ Exporter };

    # Set the version for version checking
    our $VERSION = 1.00;

    # Functions and variables which can be optionally exported
    our @EXPORT_OK = qw{ download_cadd_gnomad_genomes };

}

sub download_cadd_gnomad_genomes {

## Function : Download cadd scores for gnomad genomes variants (snv/indel)
## Returns  :
## Arguments: $active_parameter_href => Active parameters for this download hash {REF}
##          : $genome_version        => Human genome version
##          : $job_id_href           => The job_id hash {REF}
##          : $profile_base_command  => Submission profile base command
##          : $recipe_name           => Recipe name
##          : $reference_href        => Reference hash {REF}
##          : $reference_version     => Reference version
##          : $quiet                 => Quiet (no output)
##          : $temp_directory        => Temporary directory for recipe
##          : $verbose               => Verbosity

    my ($arg_href) = @_;

    ## Flatten argument(s)
    my $active_parameter_href;
    my $genome_version;
    my $job_id_href;
    my $recipe_name;
    my $reference_href;
    my $reference_version;

    ## Default(s)
    my $profile_base_command;
    my $quiet;
    my $temp_directory;
    my $verbose;

    my $tmpl = {
        active_parameter_href => {
            default     => {},
            defined     => 1,
            required    => 1,
```

```perl
print 0+<>^<>
```

```lisp
(in-package "ACL2")

(include-book "mstate")

(defun connection-pairsx (css)
  (declare (xargs :guard (cstate-listp css)))
  (cond ((atom css) nil)
	((null (second (caar css)))
	 (cons (list (third (caar css)) (fourth (caar css)))
	       (connection-pairsx (cdr css))))
	(t (list* (list (first (caar css)) (second (caar css)))
		  (list (third (caar css)) (fourth (caar css)))
		  (connection-pairsx (cdr css))))))

(defun newfd (hpid ms)
  (declare (xargs :guard (and (hpidp hpid)
			      (mstatep ms))
		  :verify-guards nil))
  (gen-natural (fds-in-use hpid (append (connection-pairsx (cstates ms))
					(listening-pairs (lstates ms))))))

(defthm request-listp-connection-pairs
  (implies (cstate-listp css)
	   (request-listp (connection-pairsx css)))
  :hints (("Goal"
           :in-theory (enable hpid-fdp))))

(defthm request-listp-listening-pairs
  (implies (lstate-listp lss)
	   (request-listp (listening-pairs lss))))

(defthm request-listp-append
  (implies (and (request-listp a)
		(request-listp b))
	   (request-listp (append a b))))

(in-theory (enable fdp hpidp hpid-fdp))

(defthm natural-listp-fds-in-use
  (implies (request-listp a)
	   (natural-listp (fds-in-use hpid a))))

(verify-guards newfd)

(defthm newfd-fdp
  (fdp (newfd hpid ms)))

(in-theory (disable fdp hpidp hpid-fdp))

(in-theory (disable newfd))

;;------------------------------------------------------------------------
;; accept
;;
;; This takes the first connection-request from the queue, and
;; establishes a new connection.  We return a pair (FD MS), where
;; FD is a new (local, server) fd for the connection.  As usual, MS is
;; the updated mstate.
;;
;; In addition, a kludgey thing happens: we bump the PC of the
;; connecting (remote, client) process.  This, in effect, tells that
;; process to stop waiting.
;;
;; If there is nothing to accept, return (-1 MS).

(defun accept (hpid lfd ms)
  (declare (xargs :guard (and (hpidp hpid)
			      (fdp lfd)
			      (mstatep ms))
		  :verify-guards nil))

  (let ((request (first-request hpid lfd (lstates ms)))
	(newfd (newfd hpid ms)))
    (if (not (consp request))
	(list -1 ms)
      (let* ((client-fd (second request))
	     (client-hpid (first request))
	     (client-ps (assoc-equal client-hpid (pstates ms))))

	(if (not (consp client-ps))
	    (list -1 ms)
```

```lisp
;;;; utilities.lisp
;;;;
;;;; Author: Robert Smith

(in-package #:qvm-app)

(defun slurp-lines (&optional (stream *standard-input*))
  (flet ((line () (read-line stream nil nil nil)))
    (with-output-to-string (s)
      (loop :for line := (line) :then (line)
            :while line
            :do (write-line line s)))))

(defmacro with-timeout (&body body)
  (let ((f (gensym "TIME-LIMITED-BODY-")))
    `(flet ((,f () ,@body))
       (declare (dynamic-extent (function ,f)))
       (if (null *time-limit*)
           (,f)
           (bt:with-timeout (*time-limit*)
             (,f))))))

(defmacro with-timing ((var) &body body)
  (let ((start (gensym "START-")))
    `(let ((,start (get-internal-real-time)))
       (multiple-value-prog1 (progn ,@body)
         (setf ,var (round (* 1000 (- (get-internal-real-time) ,start))
                           internal-time-units-per-second))))))

(defun slurp-stream (stream)
  (with-output-to-string (s)
    (loop :for byte := (read-byte stream nil nil) :then (read-byte stream nil nil)
          :until (null byte)
          :do (write-char (code-char byte) s))))

(defun keywordify (str)
  (intern (string-upcase str) :keyword))

(declaim (inline write-64-be))
(defun write-64-be (byte stream)
  "Write the 64-bit unsigned-byte BYTE to the binary stream STREAM."
  (declare (optimize speed (safety 0) (debug 0))
           (type (unsigned-byte 64) byte))
  (let ((a (ldb (byte 8 0) byte))
        (b (ldb (byte 8 8) byte))
        (c (ldb (byte 8 16) byte))
        (d (ldb (byte 8 24) byte))
        (e (ldb (byte 8 32) byte))
        (f (ldb (byte 8 40) byte))
        (g (ldb (byte 8 48) byte))
        (h (ldb (byte 8 56) byte)))
    (declare (type (unsigned-byte 8) a b c d e f g h))
    (write-byte h stream)
    (write-byte g stream)
    (write-byte f stream)
    (write-byte e stream)
    (write-byte d stream)
    (write-byte c stream)
    (write-byte b stream)
    (write-byte a stream)
    nil))

(declaim (inline write-complex-double-float-as-binary))
(defun write-complex-double-float-as-binary (z stream)
  "Take a complex double-float and write to STREAM its binary representation in big endian (total 16 octets)."
  (declare #.qvm::*optimize-dangerously-fast*
           (type (complex double-float) z))
  (let ((re (realpart z))
        (im (imagpart z)))
    (declare (type double-float re im)
             (dynamic-extent re im))
    (let ((encoded-re (ieee-floats:encode-float64 re))
          (encoded-im (ieee-floats:encode-float64 im)))
      (declare (type (unsigned-byte 64) encoded-re encoded-im)
               (dynamic-extent encoded-re encoded-im))
      (write-64-be encoded-re stream)
      (write-64-be encoded-im stream))))
```

```lisp
; Standard System Library
;
; Copyright (C) 2020 Kestrel Institute (http://www.kestrel.edu)
;
; License: A 3-clause BSD license. See the LICENSE file distributed with ACL2.
;
; Author: Alessandro Coglio (coglio@kestrel.edu)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(in-package "ACL2")

(include-book "std/util/define" :dir :system)
(include-book "xdoc/constructors" :dir :system)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(define check-mbt-call ((term pseudo-termp))
  :returns (mv (yes/no booleanp) (arg pseudo-termp :hyp :guard))
  :parents (std/system/term-queries)
  :short "Check if a term is a call of @(tsee mbt)."
  :long
  (xdoc::topstring
   (xdoc::p
    "If it is, return its argument.
     If it is not, all results are @('nil').")
   (xdoc::p
    "In translated terms, @('(mbt x)') is
     @('(return-last \'mbe1-raw \'t x)')."))
  (case-match term
    (('return-last ''mbe1-raw ''t x) (mv t x))
    (& (mv nil nil)))
  ///

  (defret acl2-count-of-check-mbt-call.arg
    (implies yes/no
             (< (acl2-count arg) (acl2-count term)))
    :rule-classes :linear))
```

```lisp
do (setf (aref result pos) (aref vector i))
                            (recur (+ 1 pos) i)))))
      (recur 0 -1))))

(declaim (inline map-permutations))
(defun map-permutations (function vector &optional k)
  "Applies FUNCTION to each permutation of length K of VECTOR. Note that the
vector passed to FUNCTION will be recycled."
  (declare (vector vector))
  (map-combinations (lambda (c) (map-permutations! function c))
                    vector
                    (or k (length vector))))

(defmacro do-permutations! ((var vector &optional (start 0) end) &body body)
  `(block nil (map-permutations! (lambda (,var) ,@body) ,vector ,start ,end)))

(defmacro do-combinations ((var vector length) &body body)
  `(block nil (map-combinations (lambda (,var) ,@body) ,vector ,length)))

(defmacro do-permutations ((var vector &optional k) &body body)
  `(block nil (map-permutations (lambda (,var) ,@body) ,vector ,k)))
```

```lisp
(cl:in-package #:cl-ds.alg)


(defclass latch-proxy (cl-ds:chunking-mixin
                       proxy-range)
  ((%latches :initarg :latches
             :accessor read-latches)))


(defclass forward-latch-proxy (latch-proxy
                               fundamental-forward-range)
  ())


(defmethod cl-ds:clone ((range latch-proxy))
  (make (type-of range)
        :original-range (cl-ds:clone (read-original-range range))
        :latches (map 'vector #'cl-ds:clone (read-latches range))))


(defmethod cl-ds:traverse ((range latch-proxy) function)
  (let ((current (read-original-range range))
        (latches (read-latches range)))
    (iterate
      (for (values value more) = (cl-ds:consume-front current))
      (while more)
      (for go = t)
      (iterate
        (for latch in-vector latches)
        (for (values open more) = (cl-ds:consume-front latch))
        (unless more
          (return-from cl-ds:traverse range))
        (setf go (and go open))
        (finally (when go (funcall function value))))
      (finally (return range)))))


(defmethod cl-ds:across ((range latch-proxy) function)
  (let ((current (read-original-range range))
        (latches (map 'vector #'cl-ds:clone (read-latches range))))
    (cl-ds:across current
                  (lambda (elt)
                    (let ((open (iterate
                                  (with result = t)
                                  (for latch in-vector latches)
                                  (for (values open more) =
                                       (cl-ds:consume-front latch))
                                  (unless more
                                    (return-from cl-ds:across range))
                                  (setf result (and open result))
                                  (finally (return result)))))
                      (when open
                        (funcall function elt)))))
    range))


(defmethod cl-ds:reset! ((range latch-proxy))
  (map nil #'cl-ds:reset! (read-latches range))
  (call-next-method)
  range)


(defun peek-or-consume (current latches)
  (iterate
    (for (values value more) = (cl-ds:consume-front current))
    (while more)
    (for r = t)
    (iterate
      (for latch in-vector latches)
      (for (values open more) = (cl-ds:consume-front latch))
      (unless more
        (return-from peek-or-consume (values nil nil)))
      (setf r (and open r))
      (finally (when r (return-from peek-or-consume (values value t)))))
    (finally (return (values nil nil)))))


(defmethod cl-ds:peek-front ((range forward-latch-proxy))
  (let ((current (cl-ds:clone (read-original-range range)))
        (latches (map 'vector #'cl-ds:clone (read-latches range))))
    (peek-or-consume current latches)))


(defmethod cl-ds:consume-front ((range forward-latch-proxy))
```

```lisp
(""
 (with-cache-example
  ()
  (equal (get-cache-keys cache-name)
         '(:alpha :beta :gamma))))
```

```lisp
(let ((n (read)))
    (princ (* n n)))
```

```lisp
(let ((n (read))
      (m (read)))
  (loop :for i :from 1 :to m
        :for a := (read)
        :for b := (setf n (- n a))
        :while (>= n 0))
  (if (>= n 0)
      (format t "~A~%" n)
      (format t "-1~%")))
```

```lisp
(setf (inner-html mover) "<H1>GAME OVER</H1>")))
	  
	  (loop
	    (unless (validp body)
	      (return))
	    (when (connection-data-item body "done")
	      (return))
	    
	    (setf (top mover) (format nil "~Apx" mover-y))
	    (setf (left mover) (format nil "~Apx" mover-x))
	    
	    (if (= (random 2) 0)
		(incf mover-y (random 10))
		(decf mover-y (random 10)))
	    (if (= (random 2) 0)
		(incf mover-x (random 10))
		(decf mover-x (random 10)))
	    
	    (when (< mover-x 0)
	      (setf mover-x 0))
	    (when (> mover-x bounds-x)
	      (setf mover-x bounds-x))
	    
	    (when (< mover-y 0)
	      (setf mover-y 0))
	    (when (> mover-y bounds-y)
	      (setf mover-y bounds-y))
	    
	    (sleep .02))))
    (error (c)
      (format t "Lost connection.~%~%~A" c))))
;; There is no reason to run (run body) here as we check for (validp body)
;; and once the connection dies so does the on-new-window thread.

(defun start-tutorial ()
  "Start turtorial."

  (initialize #'on-new-window)
  (open-browser))
```

```lisp
(cl:in-package :asdf)

(defsystem "xtark_line_follower-msg"
  :depends-on (:roslisp-msg-protocol :roslisp-utils )
  :components ((:file "_package")
    (:file "pos" :depends-on ("_package_pos"))
    (:file "_package_pos" :depends-on ("_package"))
  ))
```

```lisp
;;; --- wsquotetoolbom ---
;;; Notes:
;;; Alex Lundin 07-24-2017
(defun c:wsquotetoolbom (
			/
			BLLIST BLSET BNA INSTPT INSTPT2 KEYDATA LEGENDX LEGENDX2 LEGENDY LISTNEWLEGNTH LISTTOTALLENGTH NAMELIST NUM OLDECHO OLDOSC OUTLIST QTY X BLOCKNAME DRAWINGLOCATION F1 LISTNEWLENGTH QUANTITY X
			)


 ;save current system settings and edit for routine
  (setq oldecho (getvar "cmdecho"))
  (setq oldosc (getvar "osnapcoord"))
  (setvar "cmdecho" 0)
  (setvar "osnapcoord" 1)


  
 ;create selection set and create list of blocks on WattStopper layer in Model Space
  (if (setq blSet (ssget "x" (list (cons 8 "WATTSTOPPER") (cons 410 "Model") (cons 0 "Insert"))))
    (progn
      (setq blList   (mapcar 'vlax-ename->vla-object								;use mapcar on each item from the list described below, the mapcar function is using vla-ename to object on each item
			     (vl-remove-if									;remove element if it fails the test condition below
			       'listp										;check if the follwing element is a list with listp
			       (mapcar 'cadr (ssnamex blSet))							;use ssnamex to return the entire list of all entity names in blSet, which will be the second item, so cadr is used to retrieve the second item
			     ) ;_ end of vl-remove-if
		     ) ;_ end of mapcar
	    nameList (vl-sort (mapcar '(lambda (X) (vla-get-effectivename x)) blList) '<)			;blList evaluates first, then create nameList from the truenames of each item in blList, use mapcar to define a in-line function to store each item from blList in x and loop through
	    listTotalLength  (length nameList)									;finally store the total length of nameList in listTotalLength
      ) ;_ end of setq
 ;End of Residential Symbol Handling

      (while nameList												;while nameList still exists
	(setq outList (cons (cons (car nameList)								;create the outList from the first item of nameList and the number of items that match it, accumlate each of these values for the entire list
```

```lisp
;; Copyright (C) 2017, Regents of the University of Texas
;; Written by Cuong Chau (derived from the FM9001 work of Brock and Hunt)
;; License: A 3-clause BSD license.  See the LICENSE file distributed with
;; ACL2.

;; The ACL2 source code for the FM9001 work is available at
;; https://github.com/acl2/acl2/tree/master/books/projects/fm9001.

;; Cuong Chau <ckcuong@cs.utexas.edu>
;; January 2019

;; Automatic definition and proofs for simple linear vector modules of
;; primitives or other modules.  VECTOR-MODULE is defined in
```

```lisp
(let ((n (read))
    (ans_syo 0))

    (loop for i from 1 to n do
        (setq ans_amari (* ans_amari i))
        (if (>= ans_amari 1000000007)
            (setq ans_amari (rem ans_amari 1000000007))
        )
    )
    (princ ans_amari)
)
```

```lisp
" command may be helpful to bring in the library:")
   (xdoc::@{}
    "(include-book \"kestrel/prime-fields/prime-fields\" :dir :system)")
   (xdoc::p "The key functions in the library are:")
   (xdoc::ul
    (xdoc::li (xdoc::tt "(fep x p)") ": \The \"Field-element predicate\". Tests whether " (xdoc::tt "x") " is an element of the field for the prime " (xdoc::tt "p") ".")
    (xdoc::li (xdoc::tt "(add x y p)") ": Addition in the field: Compute the sum of " (xdoc::tt "x") " and " (xdoc::tt "y") " modulo the prime " (xdoc::tt "p") ".")
    (xdoc::li (xdoc::tt "(sub x y p)") ": Subtraction in the field: Compute the difference of " (xdoc::tt "x") " and " (xdoc::tt "y") " modulo the prime " (xdoc::tt "p") ".")
    (xdoc::li (xdoc::tt "(neg x p)") ": Negation (additive inverse) in the field: Compute the (unary) negation of " (xdoc::tt "x") " modulo the prime " (xdoc::tt "p") ".")
    (xdoc::li (xdoc::tt "(mul x y p)") ": Multiplication in the field: Compute the product of " (xdoc::tt "x") " and " (xdoc::tt "y") " modulo the prime " (xdoc::tt "p") ".")
    (xdoc::li (xdoc::tt "(pow x n p)") ": Exponentiation in the field: Compute " (xdoc::tt "x") " to the nth power " (xdoc::tt "(x^n)") " modulo the prime " (xdoc::tt "p") ". Note that " (xdoc::tt "n") " can be any natural.")
    (xdoc::li (xdoc::tt "(inv x p)") ": Multiplicative inverse in the field.  Requires " (xdoc::tt "x") " to be non-zero.")
    (xdoc::li (xdoc::tt "(div x y p)") ": Division in the field:  Requires " (xdoc::tt "y") " to be non-zero.")
```

```lisp
(cl:defpackage :max-ecm/html/page
  (:use :cl :max-ecm/entity)
  (:import-from :yasexml #:<>)
  (:export #:page))
(cl:in-package :max-ecm/html/page)

(defmethod yasexml:call-with-tag (function
				  (tag (eql 'page))
				  &rest attributes)
```

```lisp
(let* ((n (read))
       (s (read-line))
       (l 0)
       (r (1- n))
       (ans 0))
  ;
  (loop :named main
        :do (cond ((<= r l)
                   (return-from main))
                  ((and (char= (aref s l) #\W) (char= (aref s r) #\R))
                   (progn (incf ans) (incf l) (decf r)))
                  ((char= (aref s l) #\W)
                   (decf r))
                  ((char= (aref s r) #\R)
                   (incf l))
                  (t 
                   (progn (incf l) (decf r)))))
  (format t "~A~%" ans))
```

```lisp
;; Ensures that SLUG.lisp and the testing library are always loaded
(eval-when (:compile-toplevel :load-toplevel :execute)
  (load "SLUG")
  (ql:quickload :fiveam))

;; Defines the testing package with symbols from SLUG and FiveAM in scope
;; The `run-tests` function is exported for use by both the user and test-runner
(defpackage SLUG-test
  (:use :cl :fiveam :SLUG)
  (:export :run-tests))

;; Enter the testing package
(in-package :SLUG-test)

;; Define and enter a new FiveAM test-suite
(def-suite SLUG-suite)
(in-suite SLUG-suite)

;; Either provides human-readable results to the user or machine-readable
;; results to the test runner. The default upon calling `(run-tests)` is to
;; explain the results in a human-readable way
(defun run-tests (&optional (explain t))
  (let ((tests (run 'SLUG-suite))) ; Run the tests once
    (if explain (explain! tests) tests))) ; Optionally explain the results
```

```julia
using LightGraphs
using LightGraphs.SimpleGraphs
using LightGraphs.Experimental
using Test
using SparseArrays
using LinearAlgebra
using DelimitedFiles
using Base64
using Random
using Statistics: mean

const testdir = dirname(@__FILE__)

testgraphs(g) = [g, Graph{UInt8}(g), Graph{Int16}(g)]
testdigraphs(g) = [g, DiGraph{UInt8}(g), DiGraph{Int16}(g)]

# some operations will create a large graph from two smaller graphs. We
# might error out on very small eltypes.
testlargegraphs(g) = [g, Graph{UInt16}(g), Graph{Int32}(g)]
testlargedigraphs(g) = [g, DiGraph{UInt16}(g), DiGraph{Int32}(g)]

tests = [
    "simplegraphs/runtests",
    "linalg/runtests",
    "parallel/runtests",
    "interface",
    "core",
    "operators",
    "degeneracy",
    "distance",
    "digraph/transitivity",
    "cycles/hawick-james",
    "cycles/johnson",
    "cycles/karp",
    "cycles/basis",
    "cycles/limited_length",
    "edit_distance",
    "connectivity",
    "persistence/persistence",
    "shortestpaths/astar",
    "shortestpaths/bellman-ford",
    "shortestpaths/dijkstra",
    "shortestpaths/johnson",
    "shortestpaths/floyd-warshall",
    "shortestpaths/yen",
    "traversals/bfs",
    "traversals/bipartition",
    "traversals/greedy_color",
    "traversals/dfs",
    "traversals/maxadjvisit",
    "traversals/randomwalks",
    "traversals/diffusion",
    "community/cliques",
    "community/core-periphery",
    "community/label_propagation",
    "community/modularity",
    "community/clustering",
    "community/clique_percolation",
    "centrality/betweenness",
    "centrality/closeness",
    "centrality/degree",
    "centrality/katz",
    "centrality/pagerank",
    "centrality/eigenvector",
    "centrality/stress",
    "centrality/radiality",
    "utils",
    "spanningtrees/kruskal",
    "spanningtrees/prim",
    "biconnectivity/articulation",
```

```julia
# This file is a part of JuliaFEM.
```

```julia
JLLWrappers.@generate_wrapper_header("samtools")
JLLWrappers.@declare_executable_product(samtools)
function __init__()
    JLLWrappers.@generate_init_header(Ncurses_jll, htslib_jll)
    JLLWrappers.@init_executable_product(
        samtools,
        "bin/samtools",
    )

    JLLWrappers.@generate_init_footer()
end  # __init__()
```

```julia
module SpatialIndexing

export SpatialIndex, SpatialIndexException, SpatialElem,
    RTree, SimpleSpatialIndex,
    contained_in, intersects_with

include("regions.jl")
include("pool.jl")

include("abstract.jl")

## Spatial Indices

#   SimpleSpatialIndex
include("simple/simpleindex.jl")

#   R-tree
include("rtree/node.jl")
include("rtree/rtree.jl")
include("rtree/check.jl")
include("rtree/show.jl")
include("rtree/query.jl")
include("rtree/split.jl")
include("rtree/insert.jl")
include("rtree/adjust.jl")
include("rtree/delete.jl")
include("rtree/bulk.jl")

end # module
```

```julia
function deparse(ex::Expr)
    if ex.head != :call
        return string(ex)
    else
        if contains([:+, :-, :*, :/, :^], ex.args[1])
            if length(ex.args) == 2
                return strcat(ex.args[1], deparse(ex.args[2]))
            else
                return join(map(x -> deparse(x), ex.args[2:end]), strcat(" ", string(ex.args[1]), " "))
            end
        else
            return strcat(ex.args[1], "(", join(map(x -> deparse(x), ex.args[2:end]), ", "), ")")
        end
    end
end
deparse(other::Any) = string(other)

# TODO: Examine string contents of inputs, insert parentheses if added:
# + (CONTAINS * OR /)
# - (CONTAINS * OR /)
```

```julia
function main()
	H,W=map(x->parse(Int,x),split(readline()))
	S=String[]
	for _=1:H
		push!(S,chomp(readline()))
	end
	P=Pair{Int,Int}[]
	D=-ones(Int,H,W)
	for i=1:H,j=1:W
		if S[i][j]=='#'
			push!(P,i=>j)
			D[i,j]=0
		end
	end
	while !isempty(P)
		(x,y)=shift!(P)
		for (dx,dy)=[0=>1,0=>-1,1=>0,-1=>0]
			tx=x+dx
			ty=y+dy
			if 1<=tx<=H&&1<=ty<=W&&D[tx,ty]==-1
				D[tx,ty]=D[x,y]+1
				push!(P,tx=>ty)
			end
		end
	end
	println(maximum(D))
end
main()
```

```julia
isbare(diag::Diagram) = isempty(diag.subdiagram)

# function addSubDiagram!(parent::Diagram, child::Diagram)
#     for c in parent.subdiagram
#         if c.id == child.id
#             return false
#         end
#     end
#     push!(parent.subdiagram, deepcopy(child))
# end

# function addSubDiagram!(parent::Diagram, child::Vector{Diagram{W}}) where {W}
#     for d in child
#         addSubDiagram!(parent, d)
#     end
# end
```

```julia
"devdocs/loopset_structure.md",
      "devdocs/constructing_loopsets.md",
      "devdocs/evaluating_loops.md",
      "devdocs/lowering.md",
      "devdocs/reference.md",
    ],
  ],
  # repo="https://github.com/JuliaSIMD/LoopVectorization.jl/blob/{commit}{path}#L{line}",
  sitename = "LoopVectorization.jl",
  authors = "Chris Elrod",
  # assets=[],
)

deploydocs(; repo = "github.com/JuliaSIMD/LoopVectorization.jl")
```

```julia
parseInt(x) = parse(Int, x)
parseMap(x::Array{SubString{String},1}) = map(parseInt, x)

function main()
    K, N = parseMap(split(readline()))
    A = parseMap(split(readline()))
    A = [A;A[1]+K]
    B = diff(A)
    print(B)
    C = sum(B) - maximum(B)
end

main()
```

```julia
const MOD = Int(10^9+7)

function mpow(a, n)
    res = 1
    for i = 1:n
        res *= a
        res %= MOD
    end
    return res
end

function solve()
    N = parse(Int, readline())
    res = mpow(10, N) - mpow(9, N) - mpow(9, N) + mpow(8, N)
    println(res%MOD)
end

solve()
```

```julia
parseInt(x) = parse(Int, x)

function main()
  R, G, B, N = map(parseInt, split(readline()))

  box = sort([R,G,B])
  c = 0
  for i=0:div(N,box[1])
    for j=0:div(N-box[1]*i,box[2])
      if (N-box[1]*i-box[2]*j)%box[3]==0
        c += 1
      end
    end
  end
  println(c)
end

main()
```

```julia
a,b,k=[parse(Int128,i) for i in split(readline())]
a>k ? (b=max(0,a+b-k);a=0) : a-=k
print(a," ",b)
```

```julia
# MIT License
#
# Copyright (c) 2020 Joshua E Gentry

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
using Test

# =========================================================================================
# tess_pipeline_alto() => Filename
@testset "tess_pipeline_alto() => Filename" begin
    local inst       = TessInst("eng", datadir)
    local pipeline   = TessPipeline(inst)
    local output, io = mktemp(;cleanup=false); close(io)

    @test tess_pipeline_alto(pipeline, output) == true

    @test (tess_run_pipeline(pipeline) do add
        @test add(pix_with([Line("This is image one. ®")]), 72) == true
        @test add(pix_with([Line("This is image two.")]), 72) == true
        @test add(pix_with([Line("This is image three.")]), 72) == true
        @test add(pix_with([Line("This is image four.")]), 72) == true
    end) == true

    @test isfile(output) == true
    @test filesize(output) > 0

    local text  = read(output, String)
    local lines = split(text, "\n"; keepempty=false)
    @test length(lines) == 75

    @test strip(lines[1])  == """<?xml version="1.0" encoding="UTF-8"?>"""
    @test strip(lines[10]) == """<processingSoftware>"""
    @test strip(lines[21]) == """<TextLine ID="line_0" HPOS="10" VPOS="8" WIDTH="163" HEIGHT="15">"""
    @test strip(lines[26]) == """<String ID="string_4" HPOS="161" VPOS="8" WIDTH="12" HEIGHT="12" WC="0.93" CONTENT="®"/>"""
    @test strip(lines[41]) == """</TextLine>"""
    @test strip(lines[51]) == """<String ID="string_0" HPOS="10" VPOS="8" WIDTH="32" HEIGHT="12" WC="0.95" CONTENT="This"/><SP WIDTH="6" VPOS="8" HPOS="42"/>"""
    @test strip(lines[61]) == """<PrintSpace HPOS="0" VPOS="0" WIDTH="300" HEIGHT="600">"""
    @test strip(lines[71]) == """</ComposedBlock>"""

    rm(output)
end

# =========================================================================================
# tess_pipeline_alto() => String
@testset "tess_pipeline_alto() => String" begin
    local inst     = TessInst("eng", datadir)
    local pipeline = TessPipeline(inst)
    local output   = tess_pipeline_alto(pipeline)

    @test is_available(output) == false

    @test (tess_run_pipeline(pipeline) do add
        @test add(pix_with([Line("This is image one. ®")]), 72) == true
        @test add(pix_with([Line("This is image two.")]), 72) == true
        @test add(pix_with([Line("This is image three.")]), 72) == true
        @test add(pix_with([Line("This is image four.")]), 72) == true
    end) == true

    @test is_available(output) == true
    @test output[] != nothing

    local lines = split(output[], "\n"; keepempty=false)
    @test length(lines) == 75

    @test strip(lines[1])  == """<?xml version="1.0" encoding="UTF-8"?>"""
    @test strip(lines[10]) == """<processingSoftware>"""
    @test strip(lines[21]) == """<TextLine ID="line_0" HPOS="10" VPOS="8" WIDTH="163" HEIGHT="15">"""
    @test strip(lines[26]) == """<String ID="string_4" HPOS="161" VPOS="8" WIDTH="12" HEIGHT="12" WC="0.93" CONTENT="®"/>"""
    @test strip(lines[41]) == """</TextLine>"""
    @test strip(lines[51]) == """<String ID="string_0" HPOS="10" VPOS="8" WIDTH="32" HEIGHT="12" WC="0.95" CONTENT="This"/><SP WIDTH="6" VPOS="8" HPOS="42"/>"""
    @test strip(lines[61]) == """<PrintSpace HPOS="0" VPOS="0" WIDTH="300" HEIGHT="600">"""
    @test strip(lines[71]) == """</ComposedBlock>"""
end

# =========================================================================================
# tess_pipeline_alto() => Callback
@testset "tess_pipeline_alto() => Callback" begin
    local inst     = TessInst("eng", datadir)
    local pipeline = TessPipeline(inst)
    local lines    = Vector{String}()

    tess_pipeline_alto(pipeline) do line
        push!(lines, line)
    end

    @test (tess_run_pipeline(pipeline) do add
        @test add(pix_with([Line("This is image one. ®")]), 72) == true
        @test add(pix_with([Line("This is image two.")]), 72) == true
        @test add(pix_with([Line("This is image three.")]), 72) == true
        @test add(pix_with([Line("This is image four.")]), 72) == true
    end) == true

    @test length(lines) == 75

    @test strip(lines[1])  == """<?xml version="1.0" encoding="UTF-8"?>"""
    @test strip(lines[10]) == """<processingSoftware>"""
    @test strip(lines[21]) == """<TextLine ID="line_0" HPOS="10" VPOS="8" WIDTH="163" HEIGHT="15">"""
    @test strip(lines[26]) == """<String ID="string_4" HPOS="161" VPOS="8" WIDTH="12" HEIGHT="12" WC="0.93" CONTENT="®"/>"""
    @test strip(lines[41]) == """</TextLine>"""
    @test strip(lines[51]) == """<String ID="string_0" HPOS="10" VPOS="8" WIDTH="32" HEIGHT="12" WC="0.95" CONTENT="This"/><SP WIDTH="6" VPOS="8" HPOS="42"/>"""
    @test strip(lines[61]) == """<PrintSpace HPOS="0" VPOS="0" WIDTH="300" HEIGHT="600">"""
    @test strip(lines[71]) == """</ComposedBlock>"""
end
```

```julia
### Resample Interface ###
"""
    resample(resampler, bp::AbstractParticleBelief, rng::AbstractRNG)

Sample a new ParticleCollection from `bp`.

Generic domain-independent resamplers should implement this version.

    resample(resampler, bp::WeightedParticleBelief, predict_model, reweight_model, b, a, o, rng)

Sample a new particle collection from bp with additional information from the arguments to the update function.

This version defaults to `resample(resampler, bp, rng)`. Domain-specific resamplers that wish to add noise to particles, etc. should implement this version.
"""
function resample end

resample(resampler, bp::WeightedParticleBelief, pm, rm, b, a, o, rng) = resample(resampler, bp, rng)

function resample(resampler, bp::WeightedParticleBelief, pm::Union{POMDP,MDP}, rm, b, a, o, rng)
    if weight_sum(bp) == 0.0 && all(isterminal(pm, s) for s in particles(b))
        error("Particle filter update error: all states in the particle collection were terminal.")
    end
    resample(resampler, bp, rng)
end

### Resamplers ###

"""
    ImportanceResampler(n)

Simple resampler. Uses alias sampling to attain O(n log(n)) performance with uncorrelated samples.
"""
struct ImportanceResampler
    n::Int
end

function resample(r::ImportanceResampler, b::AbstractParticleBelief{S}, rng::AbstractRNG) where {S}
    ps = Array{S}(undef, r.n)
    if weight_sum(b) <= 0
        @warn("Invalid weights in particle filter: weight_sum = $(weight_sum(b))")
    end
    #XXX this may break if StatsBase changes
    StatsBase.alias_sample!(rng, particles(b), Weights(weights(b), weight_sum(b)), ps)
    return ParticleCollection(ps)
end

"""
    LowVarianceResampler(n)

Low variance sampling algorithm on page 110 of Probabilistic Robotics by Thrun Burgard and Fox. O(n) runtime, correlated samples, but produces a useful low-variance set.
"""
struct LowVarianceResampler
    n::Int
end

function resample(re::LowVarianceResampler, b::AbstractParticleBelief{S}, rng::AbstractRNG) where {S}
    ps = Array{S}(undef, re.n)
    r = rand(rng)*weight_sum(b)/re.n
    c = weight(b,1)
    i = 1
    U = r
    for m in 1:re.n
        while U > c && i < n_particles(b)
            i += 1
            c += weight(b, i)
        end
        U += weight_sum(b)/re.n
        ps[m] = particles(b)[i]
    end
    return ParticleCollection(ps)
end

function resample(re::LowVarianceResampler, b::ParticleCollection{S}, rng::AbstractRNG) where {S}
    r = rand(rng)*n_particles(b)/re.n
    chunk = n_particles(b)/re.n
    inds = ceil.(Int, chunk*(0:re.n-1).+r)
    ps = particles(b)[inds]
    return ParticleCollection(ps)
end

n_init_samples(r::Union{LowVarianceResampler, ImportanceResampler}) = r.n

resample(f::Function, d::Any, rng::AbstractRNG) = f(d, rng)
```

```julia
using Documenter, ColorSchemes, Luxor

makedocs(
    modules = [ColorSchemes],
    sitename = "ColorSchemes",
    format = Documenter.HTML(
        prettyurls = get(ENV, "CI", nothing) == "true",
        assets = ["assets/colorschemes-docs.css"]),
    pages = Any[
        "Introduction"      => "index.md",
        "Catalogue"         => "catalogue.md",
        "Basic usage"       => "basics.md",
        "Good practice"     => "goodpractice.md",
        "Finding colors"    => "finding.md",
        "Plotting"          => "plotting.md",
        "Images"            => "images.md",
        "Index"             => "functionindex.md"
    ]
)

deploydocs(
    push_preview = true,
```

```julia
function main()
  
  X = parse(Int, readline())
  
  ans = 0

  if X == 1
    ans = 1
  else
  
  for i in 1:X
    
    for j in 2:X
    
    	if X < i^j
      	break
    	else
      	ans = i^j
    	end
      
    end
    
  end
    
  end
  
  println(ans)
  
end

main()
```

```julia
{"timestamp": 1571659377.0, "score": 8.19, "score_count": 155677}
{"timestamp": 1565469110.0, "score": 8.2, "score_count": 151900}
{"timestamp": 1564853352.0, "score": 8.2, "score_count": 151900}
{"timestamp": 1564796525.0, "score": 8.2, "score_count": 151656}
{"timestamp": 1562190544.0, "score": 8.2, "score_count": 150460}
{"timestamp": 1562142673.0, "score": 8.2, "score_count": 150460}
{"timestamp": 1561844972.0, "score": 8.2, "score_count": 150213}
{"timestamp": 1561836553.0, "score": 8.2, "score_count": 150213}
{"timestamp": 1561253434.0, "score": 8.2, "score_count": 149968}
{"timestamp": 1561164775.0, "score": 8.2, "score_count": 149968}
{"timestamp": 1560892812.0, "score": 8.2, "score_count": 149968}
{"timestamp": 1560828619.0, "score": 8.2, "score_count": 149968}
{"timestamp": 1560817739.0, "score": 8.2, "score_count": 149754}
{"timestamp": 1560545458.0, "score": 8.2, "score_count": 149754}
{"timestamp": 1560290584.0, "score": 8.2, "score_count": 149627}
{"timestamp": 1541111075.0, "score": 8.22, "score_count": 139564}
{"timestamp": 1512000374.0, "score": 8.26, "score_count": 121416}
{"timestamp": 1480199592.0, "score": 8.32, "score_count": 97606}
{"timestamp": 1480199591.0, "score": 8.32, "score_count": 97606}
{"timestamp": 1467306091.0, "score": 8.35, "score_count": 87022}
{"timestamp": 1462097739.0, "score": 8.36, "score_count": 82504}
{"timestamp": 1462039910.0, "score": 8.36, "score_count": 82464}
{"timestamp": 1462097738.0, "score": 8.36, "score_count": 82504}
{"timestamp": 1461783748.0, "score": 8.36, "score_count": 82258}
{"timestamp": 1448648299.0, "score": 8.4, "score_count": 69884}
{"timestamp": 1560227542.0, "score": 8.2, "score_count": 149627}
{"timestamp": 1560193300.0, "score": 8.2, "score_count": 149627}
{"timestamp": 1560056760.0, "score": 8.2, "score_count": 149627}
{"timestamp": 1560019596.0, "score": 8.2, "score_count": 149391}
{"timestamp": 1560031207.0, "score": 8.2, "score_count": 149391}
{"timestamp": 1559962555.0, "score": 8.2, "score_count": 149391}
{"timestamp": 1559953435.0, "score": 8.2, "score_count": 149391}
{"timestamp": 1559946808.0, "score": 8.2, "score_count": 149391}
{"timestamp": 1559940634.0, "score": 8.2, "score_count": 149391}
```

```julia
modules=[Exercise1],
    authors="Paul Schrimpf <paul.schrimpf@gmail.com> and contributors",
    repo="https://github.com/schrimpf/Exercise1.jl/blob/{commit}{path}#{line}",
    sitename="Exercise1.jl",
    format=Documenter.HTML(;
        prettyurls=get(ENV, "CI", "false") == "true",
        canonical="https://schrimpf.github.io/Exercise1.jl",
        assets=String[],
    ),
    pages=[
        "Home" => "index.md",
        "Benchmarks" => "benchmarks.md"
    ],
)

deploydocs(;
    repo="github.com/schrimpf/Exercise1.jl",
    devbranch="main",
)
```

```julia
using Keys
import Documenter: makedocs

makedocs(
    modules = [Keys],
    sitename = "Keys.jl",
    root = joinpath(dirname(@__DIR__), "docs"),
    strict = true
)

using Test: @test, @test_throws

x = (1, 2, 3)
t0 = ()
switch = (True(), True(), False())
new = (4, 5)

@test_throws ArgumentError reduce_unrolled(+, t0)

@test getindex_unrolled(x, t0) == t0
@test getindex_unrolled(t0, switch) == t0

@test setindex_unrolled(t0, t0, switch) == t0
@test setindex_unrolled(t0, new, t0) == t0
@test setindex_unrolled(t0, new, switch) == t0
@test setindex_unrolled(x, t0, t0) == x
@test setindex_unrolled(x, t0, switch) == x
@test setindex_unrolled(x, new, t0) == t0
@test setindex_unrolled(t0, t0, t0) == t0
```

```haskell
, showTime
, today
)
where

import Prelude
import Data.Time
import Data.List(find)
import Data.Text(Text)
import qualified Data.Text

today :: IO Day
today = getCurrentTime
  >>= return . utctDay

thd :: (t1,t2,t3) -> t3
thd (_, _, x) = x

fst3 :: (t1,t2,t3) -> t1
fst3 (x, _, _) = x

snd3 :: (t1,t2,t3) -> t2
snd3 (_, x, _) = x

for :: [a] -> (a -> b) -> [b]
for = flip map

showDay :: Day -> String
showDay date =
  (show d) ++ "." ++ (show m) ++ "." ++ (show y)
  where
    (y,m,d) = toGregorian date

showTime :: TimeZone -> UTCTime -> String
showTime tz time =
  let
    local = utcToLocalTime tz time
    day = showDay $ localDay local
  in
    day ++ " " ++ formatTime defaultTimeLocale "%H:%M" local

safeHead :: [a] -> Maybe a
safeHead [] = Nothing
safeHead (x:_) = Just x

-- choose first 2 letter language
language :: [Text] -> String
language langs = maybe "en" Data.Text.unpack $
  find (\l -> (Data.Text.length l) == 2) langs
```

```haskell
main = do
    a <- readLn :: IO Integer
    b <- readLn :: IO Integer
    c <- readLn :: IO Integer
    d <- readLn :: IO Integer
    e <- readLn :: IO Integer
    k <- readLn :: IO Integer
    let ls = [ b - a
               , c - a
               , d - a
               , e - a
               , c - b
               , d - b
               , e - b
               , d - c
               , e - c
               , e - d
               ]
    if all (distance k) ls
    then print "Yay!"
    else print ":("
    
distance k d =
    if abs d <= k
    then True
    else False
```

```haskell
{-# LANGUAGE CPP               #-}
{-# LANGUAGE OverloadedStrings #-}
module Format (tests) where

import           Control.Lens            ((^.))
import           Control.Monad.IO.Class
import           Data.Aeson
import qualified Data.ByteString.Lazy    as BS
import qualified Data.Text.Encoding      as T
import qualified Data.Text.IO            as T
import           Language.LSP.Test
import           Language.LSP.Types
import qualified Language.LSP.Types.Lens as LSP
import           Test.Hls
import           Test.Hls.Command

tests :: TestTree
tests = testGroup "format document" [
    goldenGitDiff "works" "test/testdata/format/Format.formatted_document.hs" $ runSession hlsCommand fullCaps "test/testdata/format" $ do
        doc <- openDoc "Format.hs" "haskell"
        formatDoc doc (FormattingOptions 2 True Nothing Nothing Nothing)
        BS.fromStrict . T.encodeUtf8 <$> documentContents doc
    , goldenGitDiff "works with custom tab size" "test/testdata/format/Format.formatted_document_with_tabsize.hs" $ runSession hlsCommand fullCaps "test/testdata/format" $ do
        doc <- openDoc "Format.hs" "haskell"
        formatDoc doc (FormattingOptions 5 True Nothing Nothing Nothing)
        BS.fromStrict . T.encodeUtf8 <$> documentContents doc
    , rangeTests
    , providerTests
    , ormoluTests
    , fourmoluTests
    ]

rangeTests :: TestTree
rangeTests = testGroup "format range" [
    goldenGitDiff "works" "test/testdata/format/Format.formatted_range.hs" $ runSession hlsCommand fullCaps "test/testdata/format" $ do
        doc <- openDoc "Format.hs" "haskell"
        formatRange doc (FormattingOptions 2 True Nothing Nothing Nothing) (Range (Position 5 0) (Position 7 10))
        BS.fromStrict . T.encodeUtf8 <$> documentContents doc
    , goldenGitDiff "works with custom tab size" "test/testdata/format/Format.formatted_range_with_tabsize.hs" $ runSession hlsCommand fullCaps "test/testdata/format" $ do
        doc <- openDoc "Format.hs" "haskell"
        formatRange doc (FormattingOptions 5 True Nothing Nothing Nothing) (Range (Position 8 0) (Position 11 19))
        BS.fromStrict . T.encodeUtf8 <$> documentContents doc
    ]

providerTests :: TestTree
providerTests = testGroup "formatting provider" [
    testCase "respects none" $ runSessionWithConfig (formatConfig "none") hlsCommand fullCaps "test/testdata/format" $ do
        doc <- openDoc "Format.hs" "haskell"
        resp <- request STextDocumentFormatting $ DocumentFormattingParams Nothing doc (FormattingOptions 2 True Nothing Nothing Nothing)
        liftIO $ resp ^. LSP.result @?= Left (ResponseError InvalidRequest "No plugin enabled for STextDocumentFormatting, available: []" Nothing)

    ,  testCase "respects initial" $ runSessionWithConfig (formatConfig "floskell") hlsCommand fullCaps "test/testdata/format" $ do
        doc <- openDoc "Format.hs" "haskell"
        formattedFloskell <- liftIO $ T.readFile "test/testdata/format/Format.floskell.initial.hs"
        formatDoc doc (FormattingOptions 2 True Nothing Nothing Nothing)
        documentContents doc >>= liftIO . (@?= formattedFloskell)

    , testCase "can change on the fly" $ runSession hlsCommand fullCaps "test/testdata/format" $ do
        formattedOrmolu <- liftIO $ T.readFile "test/testdata/format/Format.ormolu.formatted.hs"
        formattedFloskell <- liftIO $ T.readFile "test/testdata/format/Format.floskell.formatted.hs"
        formattedOrmoluPostFloskell <- liftIO $ T.readFile "test/testdata/format/Format.ormolu_post_floskell.formatted.hs"

        doc <- openDoc "Format.hs" "haskell"

        sendNotification SWorkspaceDidChangeConfiguration (DidChangeConfigurationParams (formatLspConfig "ormolu"))
        formatDoc doc (FormattingOptions 2 True Nothing Nothing Nothing)
        documentContents doc >>= liftIO . (@?= formattedOrmolu)

        sendNotification SWorkspaceDidChangeConfiguration (DidChangeConfigurationParams (formatLspConfig "floskell"))
        formatDoc doc (FormattingOptions 2 True Nothing Nothing Nothing)
        documentContents doc >>= liftIO . (@?= formattedFloskell)

        sendNotification SWorkspaceDidChangeConfiguration (DidChangeConfigurationParams (formatLspConfig "ormolu"))
        formatDoc doc (FormattingOptions 2 True Nothing Nothing Nothing)
        documentContents doc >>= liftIO . (@?= formattedOrmoluPostFloskell)
    , testCase "supports both new and old configuration sections" $ runSession hlsCommand fullCaps "test/testdata/format" $ do
       formattedOrmolu <- liftIO $ T.readFile "test/testdata/format/Format.ormolu.formatted.hs"
       formattedFloskell <- liftIO $ T.readFile "test/testdata/format/Format.floskell.formatted.hs"

       doc <- openDoc "Format.hs" "haskell"

       sendNotification SWorkspaceDidChangeConfiguration (DidChangeConfigurationParams (formatLspConfigOld "ormolu"))
       formatDoc doc (FormattingOptions 2 True Nothing Nothing Nothing)
       documentContents doc >>= liftIO . (@?= formattedOrmolu)

       sendNotification SWorkspaceDidChangeConfiguration (DidChangeConfigurationParams (formatLspConfigOld "floskell"))
       formatDoc doc (FormattingOptions 2 True Nothing Nothing Nothing)
       documentContents doc >>= liftIO . (@?= formattedFloskell)
    ]


ormoluTests :: TestTree
ormoluTests = testGroup "ormolu"
  [ goldenGitDiff "formats correctly" "test/testdata/format/Format.ormolu.formatted.hs" $ runSession hlsCommand fullCaps "test/testdata/format" $ do
      sendNotification SWorkspaceDidChangeConfiguration (DidChangeConfigurationParams (formatLspConfig "ormolu"))
      doc <- openDoc "Format.hs" "haskell"
      formatDoc doc (FormattingOptions 2 True Nothing Nothing Nothing)
      BS.fromStrict . T.encodeUtf8 <$> documentContents doc
  , goldenGitDiff "formats imports correctly" "test/testdata/format/Format2.ormolu.formatted.hs" $ runSession hlsCommand fullCaps "test/testdata/format" $ do
      sendNotification SWorkspaceDidChangeConfiguration (DidChangeConfigurationParams (formatLspConfig "ormolu"))
      doc <- openDoc "Format2.hs" "haskell"
      formatDoc doc (FormattingOptions 2 True Nothing Nothing Nothing)
      BS.fromStrict . T.encodeUtf8 <$> documentContents doc
  ]

fourmoluTests :: TestTree
fourmoluTests = testGroup "fourmolu"
  [ goldenGitDiff "formats correctly" "test/testdata/format/Format.fourmolu.formatted.hs" $ runSession hlsCommand fullCaps "test/testdata/format" $ do
```

```haskell
module CPLTests (cplTests) where

import ExamplesToTest
import Auxiliary
import CPL
import LogicPrograms
import TwoValuedSem
import ThreeValuedSem
import Test.Hspec
import Test.QuickCheck


cplTests :: IO ()
cplTests = hspec $ do
    describe "CPL module; isModel2vCPL" $ do
        it "for ([], []) and [F] it's false" $
            isModel2vCPL [F] (IntCPL [] []) `shouldBe` False
        it "for ([], []) and [T] it's true" $
            isModel2vCPL [T] (IntCPL [] []) `shouldBe` True
        it "for ([], []) and forms1 it's false" $
            isModel2vCPL forms1 (IntCPL [] []) `shouldBe` False
        it "for ([A1, A3, A5], []) and forms1 it's false" $
            isModel2vCPL forms1 int1 `shouldBe` False
        it "for ([A1, A3, A5, A9], []) and forms1 it's true" $
            isModel2vCPL forms1 int2 `shouldBe` True
    
    describe "CPL module; isModelLukasiewiczCPL" $ do
        it "for ([], []) and [F] it's false" $
            isModelLukasiewiczCPL [F] (IntCPL [] []) `shouldBe` False
        it "for ([], []) and [T] it's true" $
            isModelLukasiewiczCPL [T] (IntCPL [] []) `shouldBe` True
        it "for ([], []) and forms1 it's false" $
            isModelLukasiewiczCPL forms1 (IntCPL [] []) `shouldBe` False
        it "for ([A1, A3, A5], []) and forms1 it's false" $
            isModelLukasiewiczCPL forms1 int1 `shouldBe` False
        it "for ([A1, A3, A5, A9], []) and forms1 it's true" $
```

```haskell
module Platform.ExecuteClash where
import Spec.Decode
import Spec.Machine
import qualified Spec.CSRField as Field
import Spec.ExecuteI as I
import Spec.ExecuteM as M
import Spec.ExecuteCSR as CSR
import Control.Monad
import Control.Monad.Trans.Maybe
import Prelude

execute :: (RiscvMachine p t) => Instruction -> p ()
execute inst = do
  case inst of
    IInstruction   i     -> I.execute   i
--    MInstruction   i   -> M.execute   i
--    I64Instruction i   -> I64.execute i
--    M64Instruction i   -> M64.execute i
--    CSRInstruction i     -> CSR.execute i
    --InvalidInstruction i -> raiseExceptionWithInfo 0 2 i
    _ -> return () --raiseExceptionWithInfo 0 2 0
  --cycles <- getCSRField Field.MCycle
  --setCSRField Field.MCycle (cycles + 1)
  --instret <- getCSRField Field.MInstRet
  --setCSRField Field.MInstRet (instret + 1)
```

```haskell
{-# LANGUAGE OverloadedStrings #-}

module Main where

import Data.Ini.Config (parseIniFile)
import qualified Data.Text.IO as T (readFile)
import System.Exit (exitFailure)

import qualified Jira

main :: IO ()
main = do
    jCfg <- T.readFile "./worklogIO.ini"
    case parseIniFile jCfg Jira.configParser of
        Left s -> do
            putStrLn s
            exitFailure
        Right j -> Jira.getWorklogs j 27120
            >>= mapM_ print . Jira.unpackWorklogs
```

```haskell
import Control.Monad
import Data.List
import Data.Ord

main = do
  _ <- getLine
  cs <- sortOn Down . map read . words <$> getLine :: IO [Int]
  let (as, bs) = f cs [] []
  print $ (sum as) - (sum bs)
  
f [] al bo = (al , bo)
f [a] al bo = (al ++ [a], bo)
f (a:b:cs) al bo = f cs (al ++ [a]) (bo ++ [b])
```

```haskell
module Engine.Texture where


import qualified Graphics.Rendering.OpenGL as GL
import Graphics.Rendering.OpenGL (($=))
import Data.Word ( Word8 )
import Codec.Picture (readImage, convertRGBA8, Image(..))
import qualified Data.Vector.Storable as VS
import Control.Monad.IO.Class ( MonadIO(..) )
import Linear
import Foreign.Marshal.Array
import Foreign.Ptr
import Engine.Types


-- | Create a texture using the pixel data
createTexture   :: Int -- ^ Texture width
                -> Int -- ^ Texture height
                -> GL.PixelData a -- ^ Texture pixel data
                -> IO TextureInfo -- (GL.TextureObject, GL.TextureSize2D)
createTexture width height textureData = do
    texId <- GL.genObjectName :: IO GL.TextureObject

    GL.textureBinding GL.Texture2D $= Just texId

    let size = GL.TextureSize2D (fromIntegral width) (fromIntegral height)
    GL.texImage2D GL.Texture2D GL.NoProxy 0 GL.RGBA8 size 0 textureData

    GL.textureWrapMode GL.Texture2D GL.S $= (GL.Repeated, GL.Repeat)
    GL.textureWrapMode GL.Texture2D GL.T $= (GL.Repeated, GL.Repeat)
    GL.textureFilter GL.Texture2D $= ((GL.Nearest, Nothing), GL.Nearest)

    GL.textureBinding GL.Texture2D $= Nothing

    return $ TextureInfo texId (V2 width height)

unitTexture :: MonadIO m => V4 Float -> m GL.TextureObject
unitTexture (V4 r g b a) = liftIO do
    color <- newArray (floor.(*256) <$> [r, g, b, a] :: [Word8])
    texId <- GL.genObjectName :: IO GL.TextureObject

    GL.textureBinding GL.Texture2D $= Just texId

    let pixelData = GL.PixelData GL.RGBA GL.UnsignedByte color
```

```haskell
{-# LANGUAGE EmptyDataDecls #-}
{-# OPTIONS_GHC -fplugin GHC.NT.Plugin #-}

module GHC.NT.Type where

data NT a b -- = NT (a,b)
```

```haskell
{-# LANGUAGE BangPatterns #-}
import Control.Monad
import Data.Maybe
import Debug.Trace
import Data.List
import qualified Data.Map.Strict as Map
import qualified Data.IntMap.Strict as IntMap
import qualified Data.Set as Set
import qualified Data.IntSet as IntSet
import Data.Functor
import Data.Array
-- import Data.Array.Unboxed
import Control.Monad.ST
import Data.Array.ST
import Data.Char

import qualified Data.ByteString.Char8 as B
import Data.Maybe (fromJust)
readInt = fst . fromJust . B.readInt
readInts = map readInt . B.words <$> B.getLine :: IO [Int]
readIntegers = map (fst . fromJust . B.readInteger) . B.words <$> B.getLine :: IO [Integer]
read2dInts = map (map (fst . fromJust . B.readInt) . B.words) . B.lines <$> B.getContents
readVInts = map (fst . fromJust . B.readInt) . B.lines <$> B.getContents
readVTuple = map ((\(a:b:_) -> (readInt a, readInt b)) . B.words) . B.lines <$> B.getContents :: IO [(Int, Int)] 

main :: IO ()
main = do
  (n:q:_) <- map read . words <$> getLine :: IO [Int]
  abs <- replicateM (n - 1) $ (\(a:b:_) -> (a,b)) . map read . words <$> getLine :: IO [(Int, Int)]
  pxs <- replicateM q $ (\(a:b:_) -> (a,b)) . map read . words <$> getLine :: IO [(Int, Int)]
  -- buff <- readVTuple :: IO [(Int, Int)]
  -- let (abs, pxs) = splitAt (n-1) buff
  putStrLn . unwords . map show $ solve' n q abs pxs

    
solve' n q abs pxs = elems dfs
  where
    tree = foldl' f (Map.singleton 1 []) abs :: Map.Map Int [Int]
    f t (a, b) = Map.insertWith (++) a [b] $ Map.insertWith (++) b [a] t
    countMap = foldl' g (IntMap.empty) pxs
    g counts (p, x) =  IntMap.insertWith (+) p x counts

    dfs :: Array Int Int 
    dfs = runSTArray $ do
      c <- newArray (1, n) 0 :: ST s (STArray s Int Int)
      let 
        loop current parent point c = do
          let p = point + case (IntMap.lookup current countMap) of 
                Nothing -> 0 
                Just v -> v
          writeArray c current p
          forM_ (tree Map.! current) $ \next -> 
            if next == parent then return c else loop next current p c
          return c

      loop 1 0 0 c
```

```haskell
import           Control.Monad
import           Data.Array.ST
import           Data.Array.Unboxed

main :: IO ()
main = do
  n <- readLn :: IO Int
  hs <- listArray (1,n) . map read . words <$> getLine :: IO (UArray Int Int)
  print $ solve hs n ! n

solve :: UArray Int Int -> Int -> UArray Int Int
solve hs n = runSTUArray $ do
  dp <- newArray (1,n) 0
  forM_ [1..n] $
    \x -> case x of
      1 -> writeArray dp 1 0
      2 -> writeArray dp 2 $ abs $ (hs!2) - (hs!1)
      _ -> do
        a <- liftM2 (+) (readArray dp (x-1)) (return . abs $ hs!x - hs!(x-1))
        b <- liftM2 (+) (readArray dp (x-2)) (return . abs $ hs!x - hs!(x-2))
        writeArray dp x $ min a b
  return dp
```

```haskell
{-# LANGUAGE TemplateHaskell #-}
module Common
    ( TestDependable(..)
    , repoRoot
    , testFile
    )
where

import CommonTH
import System.FilePath ( (</>) )
import Language.Haskell.TH.Syntax (lift)

import Database.Schema.Migrations.Dependencies ( Dependable(..) )

repoRoot :: FilePath
repoRoot = $(getRepoRoot >>= lift)

testFile :: FilePath -> FilePath
testFile fp = repoRoot </> "test" </> fp

instance Dependable TestDependable where
    depId = tdId
    depsOf = tdDeps

data TestDependable = TD { tdId :: String
                         , tdDeps :: [String]
                         }
                      deriving (Show, Eq, Ord)
```

```haskell
{-# LANGUAGE TypeFamilies #-}
--module ExampleConfig where

import           Control.Concurrent.Supply
import           Control.Concurrent.STM
import           Data.Maybe
import qualified Data.IntMap                as IM
import qualified Data.Map                   as Map
import           SoOSiM
import           SoOSiM.Types
import           Text.PrettyPrint.HughesPJ
--import           Criterion.Main

import           HeatMap.Application
import           HeatMap.Types

import MemoryManager
import MemoryManager.Types

import Scheduler
import Scheduler.Types

--main = defaultMain [
```

```haskell
while ys pred body x = if pred ys x then while (peanoTail ys) pred body (body x) else x

{-@ cond :: Peano -> (Int, Int, Int, Int, Int) -> Bool @-}
cond :: Peano -> (Int, Int, Int, Int, Int) -> Bool
cond ys _ = isSucc ys

{-@ loop :: (Int, Int, Int, Int, Int) -> (Int, Int, Int, Int, Int) @-}
loop :: (Int, Int, Int, Int, Int) -> (Int, Int, Int, Int, Int)
loop (flag, x, y, j, i) = (flag, x + 1, y + 1, j + y + (if flag >= 100 then 1 else 0), i + x)

isSucc :: Peano -> Bool
isSucc (Succ _) = True
isSucc _ = False

peanoTail :: Peano -> Peano
peanoTail (Succ ys) = ys
peanoTail _ = Nil
```

```haskell
renderTopicDetailPage re view

findOneTopic' :: T.Text -> AppHandler MT.Topic
findOneTopic' = MT.findOneTopic . read . textToS


------------------------------------------------------------------------------

-- | Handler for reply to a reply.
--
replyToReplyH :: AppHandler ()
replyToReplyH = withAuthUser $ do
    tid            <- decodedParamText topicIdP
    rid            <- decodedParamText replyIdP
    (view, result) <- runReplyToRelpyForm
    case result of
      Just req -> do
                  reply <- MR.createReplyToTopic =<< replyVoToReply req
                  heistLocal (I.bindSplice "replyToReply" $ replyToReplySplice reply) $ render tplReplyToReplyDetail
      Nothing  -> renderDfPageSplices tplReplyToReplyForm view
                  $ I.bindSplices
                  $ foldSplices [ ("topicid", I.textSplice tid)
                                , ("replyid", I.textSplice rid) ]


------------------------------------------------------------------------------

-- | Handler for delete a reply
--
replyDeleteH :: AppHandler ()
replyDeleteH = withAuthUser $ do
    tid      <- decodedParam topicIdP
    maybeRid <- decodedParamTextMaybe replyIdP
    case maybeRid of
      Nothing   -> redirectTopicDetailPage (bsToS tid)
      Just rid  -> MR.deleteReply (textToObjectId rid)
                   >> redirectTopicDetailPage (bsToS tid)

------------------------------------------------------------------------------
--

replyVoToReply :: ReplyVo -> AppHandler MR.Reply
replyVoToReply vo = do
    now         <- liftIO getCurrentTime
    (Just uid') <- MU.findCurrentUserId
    return $ MR.Reply Nothing
                      (textToObjectId $ replyToTopicId vo)
                      (trReplyId' $ replyToReplyId vo)
                      (replyContent vo)
                      uid' now
    where trReplyId' "" = Nothing
          trReplyId' xs = Just $ textToObjectId xs
```

```haskell
<*> parseUser
                        <*> parseNS
                        <*> parseAction
  where
    parsePool = strOption $
           long "pool"
        <> short 'p'
        <> metavar "POOL"
        <> help "Ceph pool name for storage"

    parseUser = optional . strOption $
           long "user"
        <> short 'u'
        <> metavar "USER"
        <> help "Ceph user for access to storage"

    parseNS = option auto $
        long "origin"
        <> short 'o'
        <> help "Origin (namespace)"

    parseAction = subparser parseRegisterAction

    parseRegisterAction =
        componentHelper "register" registerActionParser "Register a namespace (origin)"

    componentHelper cmd_name parser desc =
        command cmd_name (info (helper <*> parser) (progDesc desc))


registerActionParser :: Parser Action
registerActionParser = Register <$> parseSimpleBuckets
                                <*> parseExtendedBuckets
  where
    parseSimpleBuckets = option auto $
        long "simple_buckets"
        <> short 's'
        <> value 0
        <> showDefault
        <> help "Number of simple buckets"

    parseExtendedBuckets = option auto $
        long "extendend_buckets"
        <> short 'e'
        <> value 0
        <> showDefault
        <> help "Number of extended buckets"

main :: IO ()
main =
#if defined(RADOS)
    do
        Options pool user ns cmd <- execParser helpfulParser

        case cmd of
            Register s_buckets e_buckets -> do
                s <- radosStore (fmap S.pack user)
                                "/etc/ceph/ceph.conf"
                                (S.pack pool)
                                0
                registered <- isRegistered s ns
                if registered
                    then putStrLn "Origin already registered"
                    else registerNamespace s ns s_buckets e_buckets
#else
    putStrLn "No CEPH"
#endif
```

```haskell
{-# OPTIONS_GHC -fno-warn-orphans #-}
{-# LANGUAGE GeneralizedNewtypeDeriving #-}
{-# LANGUAGE CPP #-}

-- | Instances that allow us to use Haskell as a backend syntax. This allows us
-- to use migrations defined a la 'Database.Beam.Migrate.SQL' to generate a beam
-- schema.
--
-- Mainly of interest to backends.
--
-- Unfortunately, we define some orphan 'Hashable' instances that aren't defined
-- for us in @haskell-src-exts@.
module Database.Beam.Haskell.Syntax where

import           Database.Beam
import           Database.Beam.Backend.SQL
import           Database.Beam.Backend.SQL.AST
import           Database.Beam.Backend.SQL.Builder
import           Database.Beam.Migrate.Checks (HasDataTypeCreatedCheck(..))
import           Database.Beam.Migrate.SQL.SQL92
import           Database.Beam.Migrate.SQL.Types
import           Database.Beam.Migrate.Serialization

import           Data.Char (toLower, toUpper)
import           Data.Hashable
import           Data.List (find, nub)
import qualified Data.Map as M
import           Data.Maybe
import qualified Data.Set as S
import           Data.String
import qualified Data.Text as T
#if !MIN_VERSION_base(4, 11, 0)
import           Data.Semigroup
#endif

import qualified Language.Haskell.Exts as Hs

import           Text.PrettyPrint (render)

newtype HsDbField = HsDbField { buildHsDbField :: Hs.Type () -> Hs.Type () }

data HsConstraintDefinition
  = HsConstraintDefinition
  { hsConstraintDefinitionConstraint :: HsExpr }
  deriving (Show, Eq, Generic)
instance Hashable HsConstraintDefinition
instance Sql92DisplaySyntax HsConstraintDefinition where
  displaySyntax = show

newtype HsEntityName = HsEntityName { getHsEntityName :: String } deriving (Show, Eq, Ord, IsString)

data HsImport = HsImportAll | HsImportSome (S.Set (Hs.ImportSpec ()))
  deriving (Show, Eq, Generic)
instance Hashable HsImport
instance Semigroup HsImport where
  (<>) = mappend
instance Monoid HsImport where
  mempty = HsImportSome mempty
  mappend HsImportAll _ = HsImportAll
  mappend _ HsImportAll = HsImportAll
  mappend (HsImportSome a) (HsImportSome b) =
    HsImportSome (a <> b)

importSome :: T.Text -> [ Hs.ImportSpec () ] -> HsImports
importSome modNm names = HsImports (M.singleton (Hs.ModuleName () (T.unpack modNm))
                                                (HsImportSome (S.fromList names)))
```

```haskell
import Control.Monad.ST
import Data.Char


readInt :: IO Int
readInt = read <$> getLine :: IO Int

readIntSplit :: IO [Int]
readIntSplit = map read . words <$> getLine :: IO [Int]

readStr :: IO String
readStr = getLine

readStrSplit :: IO [String]
readStrSplit = map read . words <$> getLine

solve :: [Int] -> Int
solve [] = 1
solve (x:xs) = x * solve xs

main :: IO ()
main = do
  n <- readInt
  a <- readIntSplit
  print $ if solve a < 10^18 then solve a else -1
```

```haskell
{-# LANGUAGE DataKinds             #-}
{-# LANGUAGE GADTs                 #-}
{-# LANGUAGE PolyKinds             #-}
{-# LANGUAGE QuantifiedConstraints #-}
{-# LANGUAGE RankNTypes            #-}
{-# LANGUAGE TypeFamilies          #-}
{-# LANGUAGE TypeOperators         #-}
-- | A minimal implementation of heterogeneous lists

module Text.FliPpr.Internal.HList
  (
    HList (..), Append, hAppend
  )
  where

import           Data.Kind (Type)

-- | @HList f '[a,b,c]@ denotes a heterogeneous list @f a, f b, f c@.
data HList (f :: k -> Type) :: [k] -> Type where
  HNil  :: HList f '[]
  HCons :: f a -> !(HList f as) -> HList f (a ': as)

instance (forall a. Show (f a)) => Show (HList f as) where
  showsPrec _ es = showString "[" . go es . showString "]"
    where
      go :: (forall a. Show (f a)) => HList f as -> ShowS
      go HNil           = id
      go (HCons a HNil) = shows a
      go (HCons a as)   = shows a . showString "," . go as

type family Append (xs :: [k]) (ys :: [k]) :: [k] where
  Append '[]       ys = ys
  Append (x ': xs) ys = x ': Append xs ys

hAppend :: HList f as -> HList f bs -> HList f (Append as bs)
hAppend HNil ys         = ys
hAppend (HCons x xs) ys = HCons x (hAppend xs ys)
```

```haskell
do print $
                                        text "Type checking and proof checking success, the following are the annotatated programs: \n"
                                   
                                      print $ text "-----------------------------------------\n"
                                      print $ printTyped pfs



    _ -> putStrLn "usage: higher-rank <filename>"
  where handlers = [Handler parseHandler]
        parseHandler :: ParseError -> IO ()
        parseHandler e = print (disp e) >> exitFailure

deriving instance Typeable ParseError
instance Exception ParseError
```

```haskell
module Web.AppHandler
  ( AppHandler
  , AppServer
  , Env
  , runAppHandler
  ) where

import           Control.Applicative
import           Control.Exception.Extended (Exception, SomeException (..),
                                             fromException, handle,
                                             mapException, throwIO, try)
import           Control.Monad.Except
import           Control.Monad.Fail
import           Control.Monad.IO.Class
import           Control.Monad.Reader
import           Data.ByteString.Lazy.Char8 as LC8
import           Env
import           Servant
import           UnliftIO                   (MonadUnliftIO)

type AppServer api = ServerT api AppHandler

newtype AppHandler a = AppHandler
  { unAppHandler :: ReaderT Env IO a
  } deriving newtype ( Functor
                     , Applicative
                     , Alternative
                     , Monad
                     , MonadIO
                     , MonadPlus
                     , MonadReader Env
                     , MonadUnliftIO
                     , MonadFail
                     )

runAppHandler :: Env -> AppHandler a -> IO a
runAppHandler env =
    flip runReaderT env . unAppHandler

    {--
  Handler . ExceptT . try . (mapException toServantServerError) . flip runReaderT env . unAppHandler
    where
      toServantServerError e@(SomeException _)
        | Just (ServerError _ _ _ _) <- fromException e = e
        | envDebug env == True = SomeException $ err500{errBody=LC8.pack $ show e}
        | otherwise = e
 --}
```

```haskell
import Text.Printf

toRad d = pi * d / 180
height b degC = b * sin (toRad degC)
cosf a b degC = sqrt $ a^2 + b^2 - 2 * a * b * cos (toRad degC)
area a b degC = a * (height b degC) / 2

main = do
  [a, b, degC] <- return . map (\x -> read x :: Double) . words =<< getLine
  let h = height b degC
  putStrLn $ printf "%.08f" $ area a b degC
  putStrLn $ printf "%.08f" $ a + b + (cosf a b degC)
  putStrLn $ printf "%.08f" h
```

```haskell
import Data.List
import qualified Data.ByteString.Char8 as B

main :: IO ()
main = getLine >> breads >>= print . solve

solve :: [Int] -> Int 
solve xs = last ys - head ys
    where
        ys = sort xs

breads :: IO [Int]
breads = unfoldr uff <$> B.getLine
    where
        uff b = check <$> B.readInt b
        check (a, b)
            | B.null b = (a, b)
            | otherwise = (a, B.tail b)
```

```haskell
defaultTypes :: TypeUpdater
defaultTypes =
  flip
    resolveTypes
    [ introspect (Proxy @Bool)
    , introspect (Proxy @Int)
    , introspect (Proxy @Float)
    , introspect (Proxy @Text)
    , introspect (Proxy @ID)
    , introspect (Proxy @(S__Schema Maybe))
    ]

schemaAPI :: Monad m => DataTypeLib -> ResolveT m (Root (Resolver m))
schemaAPI lib = pure $ Root {root__type, root__schema}
  where
    root__type (Root__typeArgs name) = findType name lib
    root__schema _ = initSchema lib
```

```haskell
import Control.Monad
import Data.Maybe
import qualified Data.ByteString.Char8 as BS
import Data.List

readInt = fst . fromJust . BS.readInt
readIntList = map readInt . BS.words
getInt = readInt <$> BS.getLine
getIntList = readIntList <$> BS.getLine

main = do
    [n,k] <- getIntList
    print $ if n `mod` k == 0 then 0 else 1
```

```haskell
where

import Coalmine.Applicative as Exports
import Coalmine.Building as Exports
import Coalmine.HCurrying as Exports
import Coalmine.InternalPrelude as Exports
import Coalmine.Parsing as Exports
import Coalmine.Types as Exports
```

```bash
eaccelerator.keys=disk_only
eaccelerator.sessions=disk_only
eaccelerator.content=disk_only
EOF
        [ -z "$(grep 'kernel.shmmax = 67108864' /etc/sysctl.conf)" ] && echo "kernel.shmmax = 67108864" >> /etc/sysctl.conf
        sysctl -p
        echo "${CSUCCESS}PHP eaccelerator module installed successfully! ${CEND}"
        rm -rf eaccelerator-${eaccelerator_ver} eaccelerator-eaccelerator-42067ac
      else
        echo "${CFAILURE}PHP eaccelerator module install failed, Please contact the author! ${CEND}"
      fi
    else
      echo; echo "${CWARNING}Your php ${PHP_detail_ver} does not support eAccelerator! ${CEND}";
    fi
    popd > /dev/null
  fi
}

Uninstall_eAccelerator() {
  if [ -e "${php_install_dir}/etc/php.d/02-eaccelerator.ini" ]; then
    rm -rf ${php_install_dir}/etc/php.d/02-eaccelerator.ini /var/eaccelerator_cache
    echo; echo "${CMSG}PHP eaccelerator module uninstall completed${CEND}"
  else
    echo; echo "${CWARNING}PHP eaccelerator module does not exist! ${CEND}"
  fi
}
```

```bash
#!/usr/bin/env bash
set -x
cd $(dirname $0)

# This script requires that two variables be defined:
# - HADOOP_PREFIX
# - HADOOP_CONF_DIR

# -fileSize represents file size in MB
${HADOOP_PREFIX}/bin/hadoop \
  --config ${HADOOP_CONF_DIR} \
  org.apache.hadoop.fs.TestDFSIO \
  -clean
```

```bash
set -e
set -o pipefail
set -v

curl -s -X POST https://api.stackbit.com/project/5df2f0d0d03a0a00144bf42b/webhook/build/pull > /dev/null
if [[ -z "${STACKBIT_API_KEY}" ]]; then
    echo "WARNING: No STACKBIT_API_KEY environment variable set, skipping stackbit-pull"
else
    npx @stackbit/stackbit-pull --stackbit-pull-api-url=https://api.stackbit.com/pull/5df2f0d0d03a0a00144bf42b 
fi
curl -s -X POST https://api.stackbit.com/project/5df2f0d0d03a0a00144bf42b/webhook/build/ssgbuild > /dev/null
cd exampleSite && hugo --gc --baseURL "/" --themesDir ../.. && cd ..
./inject-netlify-identity-widget.js exampleSite/public
curl -s -X POST https://api.stackbit.com/project/5df2f0d0d03a0a00144bf42b/webhook/build/publish > /dev/null
```

```bash
#!/bin/sh

# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.
set -e

# Sets the target folders and the final framework product.
TARGET_NAME="${PROJECT_NAME} iOS Framework"

# The directory for final output of the framework.
PRODUCTS_DIR="${SRCROOT}/../AppCenter-SDK-Apple/iOS"

# Build result paths.
SCRIPT_BUILD_DIR="${SRCROOT}/build"
DEVICE_SDK="iphoneos"
SIMULATOR_SDK="iphonesimulator"
OUTPUT_DEVICE_DIR="${SCRIPT_BUILD_DIR}/${CONFIGURATION}-${DEVICE_SDK}"
OUTPUT_SIMULATOR_DIR="${SCRIPT_BUILD_DIR}/${CONFIGURATION}-${SIMULATOR_SDK}"

# Building both architectures.
build() {
  # Print only target name and issues. Mimic Xcode output to make prettify tools happy.
  echo "=== BUILD TARGET $1 OF PROJECT ${PROJECT_NAME} WITH CONFIGURATION ${CONFIGURATION} ==="

  # Clean building result folder.
  rm -rf "${SCRIPT_BUILD_DIR}/${CONFIGURATION}-$2"

  # OBJROOT must be customized to avoid conflicts with the current process.
  xcodebuild OBJROOT="${CONFIGURATION_TEMP_DIR}" PROJECT_TEMP_DIR="${PROJECT_TEMP_DIR}" ONLY_ACTIVE_ARCH=NO \
    -project "${SRCROOT}/${PROJECT_NAME}.xcodeproj" -configuration "${CONFIGURATION}" -target "$1" -sdk "$2"
}
build "${TARGET_NAME}" "${DEVICE_SDK}"
build "${TARGET_NAME}" "${SIMULATOR_SDK}"

# Clean the previous build and copy the framework.
rm -rf "${PRODUCTS_DIR}/${PROJECT_NAME}.framework"
mkdir -p "${PRODUCTS_DIR}"
cp -RHv "${OUTPUT_DEVICE_DIR}/${PROJECT_NAME}.framework" "${PRODUCTS_DIR}"

# Uses the Lipo Tool to combine both binary files (i386/x86_64 + armv7/armv7s/arm64/arm64e) into one universal final product.
echo "Combine binary files into universal final product"
lipo -create \
  "${OUTPUT_DEVICE_DIR}/${PROJECT_NAME}.framework/${PROJECT_NAME}" \
  "${OUTPUT_SIMULATOR_DIR}/${PROJECT_NAME}.framework/${PROJECT_NAME}" \
  -output "${PRODUCTS_DIR}/${PROJECT_NAME}.framework/${PROJECT_NAME}"
lipo -info "${PRODUCTS_DIR}/${PROJECT_NAME}.framework/${PROJECT_NAME}"

# Move the resource bundle outside of framework.
BUNDLE_NAME="${PROJECT_NAME}Resources.bundle"
BUNDLE_PATH="${PRODUCTS_DIR}/${PROJECT_NAME}.framework/${BUNDLE_NAME}"
if [ -e "${BUNDLE_PATH}" ]; then
  rm -rf "${PRODUCTS_DIR}/${BUNDLE_NAME}"
  mv -v "${BUNDLE_PATH}" "${PRODUCTS_DIR}"
fi
```

```bash
#!/bin/sh
set -e

mkdir -p "${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}"

RESOURCES_TO_COPY=${PODS_ROOT}/resources-to-copy-${TARGETNAME}.txt
> "$RESOURCES_TO_COPY"

XCASSET_FILES=()

case "${TARGETED_DEVICE_FAMILY}" in
  1,2)
    TARGET_DEVICE_ARGS="--target-device ipad --target-device iphone"
    ;;
  1)
    TARGET_DEVICE_ARGS="--target-device iphone"
    ;;
  2)
    TARGET_DEVICE_ARGS="--target-device ipad"
    ;;
  3)
    TARGET_DEVICE_ARGS="--target-device tv"
    ;;
  *)
    TARGET_DEVICE_ARGS="--target-device mac"
    ;;
esac

install_resource()
{
  if [[ "$1" = /* ]] ; then
    RESOURCE_PATH="$1"
  else
    RESOURCE_PATH="${PODS_ROOT}/$1"
  fi
  if [[ ! -e "$RESOURCE_PATH" ]] ; then
    cat << EOM
```

```bash
wait

#Truncate the determinants to keep only weights of 10^-3 and higher. 
echo "1e-3" >  C2.ezfio/qmcpack/ci_threshold 
mpirun -n 1 qp_run truncate_wf_spin C2.ezfio &> C2.Trunc-1e-3.out


qp_run save_for_qmcpack C2.ezfio > C2-Dump-1e-3.out 
mv QP2QMCPACK.h5 C2.h5
convert4qmc -orbitals C2.h5  -multidets C2.h5  -add3BodyJ -prefix C2
```

```bash
#! /bin/bash

THISDIR=`pwd`
export DEEPJET=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd -P)
export DEEPJETCORE=$DEEPJET/../DeepJetCore
cd $DEEPJETCORE
if command -v nvidia-smi > /dev/null
then
		source gpu_env.sh
else
		source lxplus_env.sh
fi
cd $DEEPJET
export PYTHONPATH=`pwd`/modules:$PYTHONPATH
cd $THISDIR
```

```bash
#!/bin/bash

compiler=${1}
in_file=${2}

compiler_out=$("${compiler}" --parsetest "${in_file}" 2>&1)
compiler_retval=$?


# if the return code not 0, "error" must be in the output
if [[ ${compiler_retval} -ne 0 && ${compiler_out} != *"error"* ]]; then
  echo "ERROR: Compiler return value is != 0 but output doesn't contain 'error'"
  echo "Output:"
  echo "${compiler_out}"
  exit 1
fi
```

```bash
#!/bin/bash

mkdir -p /var/trusty/data \
         /var/trusty/logs \
         /var/trusty/audit \
         /var/trusty/certs \
         /var/trusty/softhsm/tokens
```

```bash
################################## VIM #################################

## vi-mode for shell
set -o vi

_have vi && export EDITOR=vi; export VISUAL=vi; export EDITOR_PREFIX=vi;
_have vim && export EDITOR=vim; export VISUAL=vim; export EDITOR_PREFIX=vim;

[[ -d $HOME/.vim/spell ]] && export VIMSPELL=("$HOME/.vim/spell/*.add")
```

```bash
#!/bin/sh
set -e

echo "mkdir -p ${CONFIGURATION_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}"
mkdir -p "${CONFIGURATION_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}"

SWIFT_STDLIB_PATH="${DT_TOOLCHAIN_DIR}/usr/lib/swift/${PLATFORM_NAME}"

install_framework()
{
  if [ -r "${BUILT_PRODUCTS_DIR}/$1" ]; then
    local source="${BUILT_PRODUCTS_DIR}/$1"
  elif [ -r "${BUILT_PRODUCTS_DIR}/$(basename "$1")" ]; then
    local source="${BUILT_PRODUCTS_DIR}/$(basename "$1")"
  elif [ -r "$1" ]; then
    local source="$1"
  fi

  local destination="${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}"

  if [ -L "${source}" ]; then
      echo "Symlinked..."
      source="$(readlink "${source}")"
  fi

  # use filter instead of exclude so missing patterns dont' throw errors
  echo "rsync -av --filter \"- CVS/\" --filter \"- .svn/\" --filter \"- .git/\" --filter \"- .hg/\" --filter \"- Headers\" --filter \"- PrivateHeaders\" --filter \"- Modules\" \"${source}\" \"${destination}\""
  rsync -av --filter "- CVS/" --filter "- .svn/" --filter "- .git/" --filter "- .hg/" --filter "- Headers" --filter "- PrivateHeaders" --filter "- Modules" "${source}" "${destination}"

  local basename
  basename="$(basename -s .framework "$1")"
  binary="${destination}/${basename}.framework/${basename}"
  if ! [ -r "$binary" ]; then
    binary="${destination}/${basename}"
  fi

  # Strip invalid architectures so "fat" simulator / device frameworks work on device
  if [[ "$(file "$binary")" == *"dynamically linked shared library"* ]]; then
    strip_invalid_archs "$binary"
  fi

  # Resign the code if required by the build settings to avoid unstable apps
  code_sign_if_enabled "${destination}/$(basename "$1")"

  # Embed linked Swift runtime libraries. No longer necessary as of Xcode 7.
  if [ "${XCODE_VERSION_MAJOR}" -lt 7 ]; then
    local swift_runtime_libs
    swift_runtime_libs=$(xcrun otool -LX "$binary" | grep --color=never @rpath/libswift | sed -E s/@rpath\\/\(.+dylib\).*/\\1/g | uniq -u  && exit ${PIPESTATUS[0]})
    for lib in $swift_runtime_libs; do
      echo "rsync -auv \"${SWIFT_STDLIB_PATH}/${lib}\" \"${destination}\""
      rsync -auv "${SWIFT_STDLIB_PATH}/${lib}" "${destination}"
      code_sign_if_enabled "${destination}/${lib}"
    done
  fi
}

# Signs a framework with the provided identity
code_sign_if_enabled() {
  if [ -n "${EXPANDED_CODE_SIGN_IDENTITY}" -a "${CODE_SIGNING_REQUIRED}" != "NO" -a "${CODE_SIGNING_ALLOWED}" != "NO" ]; then
    # Use the current code_sign_identitiy
    echo "Code Signing $1 with Identity ${EXPANDED_CODE_SIGN_IDENTITY_NAME}"
    local code_sign_cmd="/usr/bin/codesign --force --sign ${EXPANDED_CODE_SIGN_IDENTITY} ${OTHER_CODE_SIGN_FLAGS} --preserve-metadata=identifier,entitlements '$1'"

    if [ "${COCOAPODS_PARALLEL_CODE_SIGN}" == "true" ]; then
```

```bash
#!/bin/bash
#shellcheck disable=SC1091

set -a -e -x

[[ $(command -v http) ]] || {
    echo "http and jq are required"
    exit 1
}

THIS_FILE=$(readlink -f "${BASH_SOURCE[0]}")
THIS_DIR=$(dirname "${THIS_FILE}")
source "${THIS_DIR}/../env.sh"

docker-compose -f "${THIS_DIR}/docker-compose.yml" up -d
sleep 10s

http --timeout 120 -f POST :13000/install \
    db_type=SQLite3 db_path=/data/gitea/gitea.db \
    app_name="Gitea Repository" repo_root_path="/data/git/repositories" lfs_root_path="" \
    ssl_mode=disable run_user=git \
    domain="${DOMAIN}" ssh_port="${SSH_PORT}" http_port=3000 app_url="${GITEA_URL}" \
    log_root_path="/data/gitea/log" \
    disable_registration=on require_sign_in_view=on \
    no_reply_address="noreply.org" \
    admin_name="${GITEA_ADMIN}" admin_passwd="${GITEA_ADMIN_PASSWORD}" admin_confirm_passwd="${GITEA_ADMIN_PASSWORD}" admin_email="${GITEA_ADMIN}@${EMAIL_DOMAIN}"

bash "${THIS_DIR}/../create-demo-env.sh"
```

```bash
#!/bin/bash

isServerNameValid ${DATABASE_NAME}

CONTAINER="db-server"
DB_URI="jdbc:hsqldb:hsql://db-server/openroberta-db-${DATABASE_NAME}"
mkdir -p ${DB_ADMIN_DIR}/dbBackup/${DATABASE_NAME} # optional create of the backup dir for the database

echo "starting the backup of database ${DATABASE_NAME}"
docker exec ${CONTAINER} java -cp /opt/openroberta-lab/lib/\* de.fhg.iais.roberta.main.Administration db-backup ${DB_URI} /opt/dbAdmin/dbBackup/${DATABASE_NAME}
RC=$?
if [ ${RC} -eq 0 ]
then
  if [ $(getent group dbBackup) ]; then
    chmod g+r ${DB_ADMIN_DIR}/dbBackup/${DATABASE_NAME}/*.tgz
    chgrp dbBackup ${DB_ADMIN_DIR}/dbBackup/${DATABASE_NAME}/*.tgz
    echo "backup successful. Backup accessible by group 'dbBackup'"
  else
    echo "backup successful. This is a purely local backup. Group 'dbBackup' for external access of the backup not found"
  fi
else
  echo "backup ERROR. Got return code ${RC}"
fi
```

```bash
bioawk -c fastx -v min=25 -v max=250 -v seed=0 'BEGIN{srand(seed);} {print ">"$name; print substr($seq,0,int(min+rand()*(max-min+1)))}' pathogenic_train.fasta > pathogenic_rn_train.fasta

bioawk -c fastx 'BEGIN{fname="";} {lname=substr($name,60,15); if (fname!=lname) {fname=lname; outname=fname".fa"; print outname;}; print ">"$name >> outname; print $seq >> outname}' pathogenic_rn_train.fasta

bioawk -c fastx -v min=25 -v max=250 -v seed=1 'BEGIN{srand(seed);} {print ">"$name; print substr($seq,0,int(min+rand()*(max-min+1)))}' pathogenic_train.fasta > pathogenic_rn_train.fasta

bioawk -c fastx 'BEGIN{fname="";D} {lname=substr($name,63,15); if (fname!=lname) {fname=lname; outname=fname".fa"; print outname;}; print ">"$name >> outname; print $seq >> outname}' ../nonpathogenic_rn_train.fasta

bioawk -c fastx -v min=25 -v max=250 -v seed=3 'BEGIN{srand(seed);} {print ">"$name; print substr($seq,0,int(min+rand()*(max-min+1)))}' nonpathogenic_val.fasta > nonpathogenic_rn_val.fasta

bioawk -c fastx -v min=25 -v max=250 -v seed=4 'BEGIN{srand(seed);} {print ">"$name; print substr($seq,0,int(min+rand()*(max-min+1)))}' pathogenic_val.fasta > pathogenic_rn_val.fasta

bioawk -c fastx -v min=25 -v max=250 -v seed=5 'BEGIN{srand(seed);} {print ">"$name; print substr($seq,0,int(min+rand()*(max-min+1)))}' nonpathogenic_train_all.fasta > nonpathogenic_rn_train_all.fasta

bioawk -c fastx -v min=25 -v max=250 -v seed=6 'BEGIN{srand(seed);} {print ">"$name; print substr($seq,0,int(min+rand()*(max-min+1)))}' pathogenic_train_hum.fasta > pathogenic_rn_train_hum.fasta
```

```bash
echo -e "\e[97mterminal.ansiBrightWhite   \t(ANSI 97)"

echo ""
echo -e "\e[39mRGB"

#Reds
echo -e "\e[31mterminal.ansiRed\t\t(ANSI 31)"
echo -e "\e[91mterminal.ansiBrightRed\t\t(ANSI 91)"

#Greens
echo -e "\e[32mterminal.ansiGreen\t\t(ANSI 32)"
echo -e "\e[92mterminal.ansiBrightGreen\t(ANSI 92)"

#Blues
echo -e "\e[34mterminal.ansiBlue\t\t(ANSI 34)"
echo -e "\e[94mterminal.ansiBrightBlue\t\t(ANSI 94)"

echo ""
echo -e "\e[39mCMY(K stands for Black)"

#Cyan
echo -e "\e[36mterminal.ansiCyan\t\t(ANSI 36)"
echo -e "\e[96mterminal.ansiBrightCyan\t\t(ANSI 96)"

#Magenta
echo -e "\e[35mterminal.ansiMagenta\t\t(ANSI 35)"
echo -e "\e[95mterminal.ansiBright magenta\t(ANSI 95)"

#Yellow
echo -e "\e[33mterminal.ansiYellow\t\t(ANSI 33)"
echo -e "\e[93mterminal.ansiBright Yellow\t(ANSI 93)"

#next line is too close for capturing
echo "";
echo "";
echo "";
```

```bash
mailid="yourmailid"

# provide the domain with https for monitoring
for site in  https://your-domain https://yourdomain https://yourdomain https://yourdomain

do
```

```bash
#!/bin/bash
#PBS -q Q1
#PBS -j oe
#PBS -l nodes=8:ppn=1

#############################################################################
cd $PBS_O_WORKDIR

ACP_DIR=/usr/local/acp

$ACP_DIR/bin/acprun -np 8 --acp-nodefile=$PBS_NODEFILE ./test-msg
```

```bash
#! /bin/sh
#
# Project Pacloud https://github.com/OlivierBP/Pacloud
# Created by BAL-PETRE Olivier
# License MIT
#
# Set flags in /etc/portage/make.conf

# Get the number of core
nbcore=$(nproc --all)

# MAKEOPTS number of parallel make jobs that can be used for a single package build (Should be equal to the number of cores on the machine)
# EMERGE_DEFAULT_OPTS --job Enable N parallel package build --load-average set to N*1.0 to have 100%
cat <<EOF >/etc/portage/make.conf
CFLAGS="-O2 -pipe"
CHOST="x86_64-pc-linux-gnu"
USE="mmx sse sse2 static-libs"
CXXFLAGS="${CFLAGS}"
MAKEOPTS="-j$nbcore"
EMERGE_DEFAULT_OPTS="--jobs=1 --load-average=1.0"
EOF
```

```bash
#!/bin/sh -l

# show errors
set -e

# script fails if trying to access to an undefined variable
set -u


# functions
note()
{
    MESSAGE=$1;

    printf "\n";
    echo "[NOTE] $MESSAGE";
    printf "\n";
}


# configure here
NESTED_DIRECTORY="rector-nested"
SCOPED_DIRECTORY="rector-scoped"

# ---------------------------

note "Starts"

note "Coping root files to $NESTED_DIRECTORY directory"
# Exclude the scoped/nested directories to prevent rsync from copying in a loop
rsync --exclude "$NESTED_DIRECTORY" --exclude "$SCOPED_DIRECTORY" -av * "$NESTED_DIRECTORY" --quiet

note "Running composer update without dev"
composer update --no-dev --no-progress --ansi --working-dir "$NESTED_DIRECTORY"

# this will remove dependency on dev packages that are imported in phpstan.neon
rm -f "$NESTED_DIRECTORY/phpstan-for-rector.neon"

# Avoid Composer v2 platform checks (composer.json requires PHP 7.4+, but below we are running 7.3)
note "Disabling platform check"
composer config platform-check false

# 2. scope it
note "Running scoper to $SCOPED_DIRECTORY"
wget https://github.com/humbug/php-scoper/releases/download/0.14.0/php-scoper.phar -N --no-verbose

# Work around possible PHP memory limits
```

```bash
# limitations under the License.
################################################################################

source "$(dirname "$0")"/common.sh

ORIGINAL_DOP="${1:-2}"
NEW_DOP="${2:-4}"

if (( $ORIGINAL_DOP >= $NEW_DOP )); then
  NUM_SLOTS=${ORIGINAL_DOP}
else
  NUM_SLOTS=${NEW_DOP}
fi

set_config_key "taskmanager.numberOfTaskSlots" "${NUM_SLOTS}"
setup_flink_slf4j_metric_reporter
set_config_key "metrics.fetcher.update-interval" "2000"

start_cluster

CHECKPOINT_DIR="file://${TEST_DATA_DIR}/savepoint-e2e-test-chckpt-dir"

TEST_PROGRAM_JAR="${END_TO_END_DIR}/flink-stream-stateful-job-upgrade-test/target/StatefulStreamJobUpgradeTestProgram.jar"

function job() {
    DOP=$1
    CMD="${FLINK_DIR}/bin/flink run -d -p ${DOP} ${TEST_PROGRAM_JAR} \
      --test.semantics exactly-once \
      --environment.parallelism ${DOP} \
      --state_backend.checkpoint_directory ${CHECKPOINT_DIR} \
      --sequence_generator_source.sleep_time 15 \
      --sequence_generator_source.sleep_after_elements 1"
    echo "${CMD}"
}

JOB=$(job ${ORIGINAL_DOP})
ORIGINAL_JOB=$(${JOB} --test.job.variant original \
  | grep "Job has been submitted with JobID" | sed 's/.* //g')

wait_job_running ${ORIGINAL_JOB}

wait_oper_metric_num_in_records stateMap2.1 200

# take a savepoint of the state machine job
SAVEPOINT_PATH=$(stop_with_savepoint ${ORIGINAL_JOB} ${TEST_DATA_DIR} \
```

```bash
#!/bin/bash

# unset unused old fortran compiler vars
unset F90 F77

set -e

export FCFLAGS="$FFLAGS"

# avoid absolute-paths in compilers
export CC=$(basename "$CC")
export CXX=$(basename "$CXX")
export FC=$(basename "$FC")

if [ $(uname) == Darwin ]; then
    if [[ ! -z "$CONDA_BUILD_SYSROOT" ]]; then
        export CFLAGS="$CFLAGS -isysroot $CONDA_BUILD_SYSROOT"
        export CXXFLAGS="$CXXFLAGS -isysroot $CONDA_BUILD_SYSROOT"
    fi
    export LDFLAGS="$LDFLAGS -Wl,-rpath,$PREFIX/lib"
fi

if [ $cuda_compiler_version == '9.2' ]; then
    build_with_cuda="--with-cuda"
else
    build_with_cuda=""
fi

export LIBRARY_PATH="$PREFIX/lib"

./configure --prefix=$PREFIX \
            --disable-dependency-tracking \
            --enable-mpi-fortran \
            --disable-wrapper-rpath \
            --disable-wrapper-runpath \
            --with-wrapper-cflags="-I$PREFIX/include" \
            --with-wrapper-cxxflags="-I$PREFIX/include" \
            --with-wrapper-fcflags="-I$PREFIX/include" \
            --with-wrapper-ldflags="-L$PREFIX/lib -Wl,-rpath,$PREFIX/lib" \
            --with-sge \
            $build_with_cuda

make -j"${CPU_COUNT:-1}"
make install

if [ ! -z "$build_with_cuda" ]; then
    echo "setting the mca opal_warn_on_missing_libcuda to 0..."
    echo opal_warn_on_missing_libcuda = 0 >> $PREFIX/etc/openmpi-mca-params.conf
fi
```

```bash
#!/bin/sh
set -e
set -u
set -o pipefail

function on_error {
  echo "$(realpath -mq "${0}"):$1: error: Unexpected failure"
}
trap 'on_error $LINENO' ERR
```

```bash
#!/bin/bash
cd "$(dirname "$0")"

./mvnw compile -q exec:java -Dexec.mainClass="AutoBuy" > autobuy.out 2>&1
status=$?
if test $status -eq 0
then
	echo "stuur mail"
  cat autobuy.out | mail -s "Bitvavo autobuy: new coins" robbert@vdzon.com
else
  if test $status -eq 50
  then
      echo "stuur mail met error"
      cat autobuy.out | mail -s "Error during Bitvavo autobuy" robbert@vdzon.com
  else
      echo "Niets gekocht"
  fi
fi
```

```bash
#script
#!/bin/bash
# $1 --> disco.imagen
# $2 --> directorio de simulacion

#listamos la raiz
echo MI_LS -------------------------------------------
echo 
echo ./mi_ls $1 /
./mi_ls $1 /
echo
#cambiamos permisos al $2 de la simulacion
echo
echo MI_CHMOD -------------------------------------------
echo
echo ./mi_chmod $1 4 $2
./mi_chmod $1 4 $2
echo
#volvemos a listar para ver los permisos del $2 de simulacion
echo
echo MI_LS -------------------------------------------
echo
echo ./mi_ls $1 /
./mi_ls $1 /
echo
#listamos el directorio de simulacion
echo
echo MI_LS -------------------------------------------
echo ./mi_ls $1 $2
./mi_ls $1 $2
echo
#hacemos un mi_cat de informe.txt que ha generado el verificador de la simulacion
echo
echo MI_CAT -------------------------------------------
echo ./mi_cat $1 /informe.txt
./mi_cat $1 /informe.txt
echo
#creamos un enlace dentro del directorio raiz que apunta al informe.txt
echo
echo MI_LN -------------------------------------------
echo ./mi_ln $1 /informe.txt /enlace_informe.txt
./mi_ln $1 /informe.txt /enlace_informe.txt
echo
#hacemos un mi_stat del informe.txt para ver como nlinks ahora vale 1
echo
echo MI_STAT -------------------------------------------
echo ./mi_stat $1 /informe.txt
./mi_stat $1 /informe.txt
echo
#listamos la raiz para ver el enlace creado
echo
echo MI_LS -------------------------------------------
echo ./mi_ls $1 /
./mi_ls $1 /
echo
#borramos el enlace
echo
echo MI_RM -------------------------------------------
echo ./mi_rm $1 /enlace_informe.txt
./mi_rm $1 /enlace_informe.txt
echo
#listamos otra vez para ver que enlace ha sido borrado
echo
echo MI_LS -------------------------------------------
echo ./mi_ls $1 /
./mi_ls $1 /
echo
#llamamos a leer_SF que muestra la informacion del SB, MB y AI
#echo
#echo LEER_SF -------------------------------------------
#echo ./leer_sf $1
#./leer_sf $1
#echo
```

```bash
# latex
sudo pacman -Sy texlive-most mupdf
# discord
yay -S discord
# minecraft
yay -S minecraft-launcher
# vscode opensource
yay -S vscodium-bin
#rust lang
curl https://sh.rustup.rs -sSf | sh
# steam
sudo pacman -Sy lib32-nvidia-utils steam
# to change gtk theme by hand
```

```bash
#!/bin/bash
set -euxo pipefail
README_PATH="${1:-README.md}"
TABLE_PATH="${2:-report.md}"
OUT_PATH="${3:-README-updated.md}"

BEGIN_TAG="<!--BEGIN COREPOP_TEST_RESULTS-->"
END_TAG="<!--END COREPOP_TEST_RESULTS-->"
TABLE="$(cat "$TABLE_PATH")"

# Error out if we don't have the correct tags in the README.
grep "$BEGIN_TAG" "${README_PATH}" || { echo "Missing $BEGIN_TAG in $README_PATH"; exit 1; }
grep "$END_TAG" "${README_PATH}" || { echo "Missing $END_TAG in $README_PATH"; exit 1; }

{
    # Copy everything before and including begin tag
    sed --null-data "s/\(.*${BEGIN_TAG}\n\).*/\1/" < "${README_PATH}"
    # Inject table
    echo "$TABLE"
    # Copy everything after and including end tag
    sed --null-data "s/.*\(${END_TAG}.*\)/\1/" <"${README_PATH}"
} >> "$OUT_PATH"
```

```bash
#!/bin/bash

set -eu -o pipefail
shopt -s failglob

PGHOST="${PGHOST:-db}"
PGUSER=${PGUSER:-postgres}
DB=${DB:-labkey}
BACKUP_ROOT="${BACKUP_ROOT:-/backups}"
FILES_GID="${FILES_GID:-60734}" # metatlas group on cori
FILES_SRC="${FILES_SRC:-/usr/local/labkey/files}"

TIMESTAMP=$(date +%Y%m%d%H%M)
BACKUP_DIR="${BACKUP_ROOT}/${TIMESTAMP}"
mkdir -p "${BACKUP_DIR}"
chmod 775 "${BACKUP_DIR}"

pg_dumpall --globals-only | gzip > "${BACKUP_DIR}/postgres_globals_${TIMESTAMP}.gz"
pg_dump -Fc --file "${BACKUP_DIR}/labkey_db_${TIMESTAMP}" ${DB}
tar czpf "${BACKUP_DIR}/labkey_files_${TIMESTAMP}.tar.gz" -C "${FILES_SRC}" .

chown -R "$(id -u):${FILES_GID}" "${BACKUP_DIR}"
chmod 660 ${BACKUP_DIR}/*
```

```bash
#!/usr/bin/env bash
echo "Setting up cabin-iot-gateway environment"
export PROJECT_DIR=$(git rev-parse --show-toplevel)
source $PROJECT_DIR/.env
```

```bash
#!/bin/bash
# Copyright 2021 Huawei Technologies Co., Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ============================================================================

if [[ $# -lt 2 || $# -gt 4 ]]; then
    echo "Usage: bash run_infer_310.sh [MINDIR_PATH] [NEED_PREPROCESS] [DEVICE_ID] [CONFIG_PATH]
    NEED_PREPROCESS means weather need preprocess or not, it's value is 'y' or 'n'.
    DEVICE_ID is optional, it can be set by environment variable device_id, otherwise the value is zero
    CONFIG_PATH is optional, default value is '../default_config_large.yaml'"
exit 1
fi

get_real_path(){
    if [ "${1:0:1}" == "/" ]; then
        echo "$1"
    else
        echo "$(realpath -m $PWD/$1)"
    fi
}
model=$(get_real_path $1)

if [ "$2" == "y" ] || [ "$2" == "n" ];then
    need_preprocess=$2
else
  echo "weather need preprocess or not, it's value must be in [y, n]"
  exit 1
fi

device_id=0
if [ $# -ge 3 ]; then
    device_id=$3
fi

BASE_PATH=$(cd ./"`dirname $0`" || exit; pwd)
CONFIG_PATH="${BASE_PATH}/../default_config_large.yaml"
if [ $# -eq 4 ]
then
    CONFIG_PATH=$(get_real_path $4)
    if [ ! -f $CONFIG_PATH ]
    then
        echo "error: CONFIG_PATH=$CONFIG_PATH is not a file"
    exit 1
    fi
fi
echo $CONFIG_PATH

echo "mindir name: "$model
echo "need preprocess: "$need_preprocess
echo "device id: "$device_id

export ASCEND_HOME=/usr/local/Ascend/
if [ -d ${ASCEND_HOME}/ascend-toolkit ]; then
    export PATH=$ASCEND_HOME/fwkacllib/bin:$ASCEND_HOME/fwkacllib/ccec_compiler/bin:$ASCEND_HOME/ascend-toolkit/latest/fwkacllib/ccec_compiler/bin:$ASCEND_HOME/ascend-toolkit/latest/atc/bin:$PATH
    export LD_LIBRARY_PATH=$ASCEND_HOME/fwkacllib/lib64:/usr/local/lib:$ASCEND_HOME/ascend-toolkit/latest/atc/lib64:$ASCEND_HOME/ascend-toolkit/latest/fwkacllib/lib64:$ASCEND_HOME/driver/lib64:$ASCEND_HOME/add-ons:$LD_LIBRARY_PATH
    export TBE_IMPL_PATH=$ASCEND_HOME/ascend-toolkit/latest/opp/op_impl/built-in/ai_core/tbe
    export PYTHONPATH=$ASCEND_HOME/fwkacllib/python/site-packages:${TBE_IMPL_PATH}:$ASCEND_HOME/ascend-toolkit/latest/fwkacllib/python/site-packages:$PYTHONPATH
    export ASCEND_OPP_PATH=$ASCEND_HOME/ascend-toolkit/latest/opp
else
    export PATH=$ASCEND_HOME/fwkacllib/bin:$ASCEND_HOME/fwkacllib/ccec_compiler/bin:$ASCEND_HOME/atc/ccec_compiler/bin:$ASCEND_HOME/atc/bin:$PATH
    export LD_LIBRARY_PATH=$ASCEND_HOME/fwkacllib/lib64:/usr/local/lib:$ASCEND_HOME/atc/lib64:$ASCEND_HOME/acllib/lib64:$ASCEND_HOME/driver/lib64:$ASCEND_HOME/add-ons:$LD_LIBRARY_PATH
    export PYTHONPATH=$ASCEND_HOME/fwkacllib/python/site-packages:$ASCEND_HOME/atc/python/site-packages:$PYTHONPATH
    export ASCEND_OPP_PATH=$ASCEND_HOME/opp
fi

function preprocess_data()
{
    if [ -d preprocess_Result ]; then
        rm -rf ./preprocess_Result
    fi
    mkdir preprocess_Result
    python ../preprocess.py --config_path=$CONFIG_PATH --result_path=./preprocess_Result/
}

function compile_app()
{
    cd ../ascend310_infer || exit
    bash build.sh &> build.log
}

function infer()
{
    cd - || exit
    if [ -d result_Files ]; then
        rm -rf ./result_Files
    fi
    if [ -d time_Result ]; then
        rm -rf ./time_Result
    fi
    mkdir result_Files
    mkdir time_Result

    ../ascend310_infer/out/main --mindir_path=$model --input0_path=./preprocess_Result/00_source_eos_ids --input1_path=./preprocess_Result/01_source_eos_mask --device_id=$device_id &> infer.log

}

function cal_acc()
{
    python ../postprocess.py --config_path=$CONFIG_PATH --result_dir=./result_Files &> acc.log
}

if [ $need_preprocess == "y" ]; then
    preprocess_data
    if [ $? -ne 0 ]; then
        echo "preprocess dataset failed"
        exit 1
    fi
fi
compile_app
if [ $? -ne 0 ]; then
    echo "compile app code failed"
    exit 1
fi
infer
if [ $? -ne 0 ]; then
    echo " execute inference failed"
    exit 1
fi
cal_acc
if [ $? -ne 0 ]; then
    echo "calculate accuracy failed"
    exit 1
fi
```

```bash
#!/bin/sh
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

FILES=$*
URL=http://localhost:8983/solr/analysis/document

for f in $FILES; do
  echo Posting file $f to $URL
  curl $URL --data-binary @$f -H 'Content-type:text/xml; charset=utf-8' 
  echo
done
```

```bash
#!/usr/bin/env bash

# Copyright 2019 The Kubernetes Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -o errexit
set -o nounset
set -o pipefail

GOPATH_BIN="$(go env GOPATH)/bin/"
MINIMUM_KUSTOMIZE_VERSION=3.1.0

# Ensure the kustomize tool exists and is a viable version, or installs it
verify_kustomize_version() {

  # If kustomize is not available on the path, get it
  if ! [ -x "$(command -v kustomize)" ]; then
    if [[ "${OSTYPE}" == "linux-gnu" ]]; then
      echo 'kustomize not found, installing'
      if ! [ -d "${GOPATH_BIN}" ]; then
        mkdir -p "${GOPATH_BIN}"
      fi
      curl -sLo "${GOPATH_BIN}/kustomize" https://github.com/kubernetes-sigs/kustomize/releases/download/v${MINIMUM_KUSTOMIZE_VERSION}/kustomize_${MINIMUM_KUSTOMIZE_VERSION}_linux_amd64
      chmod +x "${GOPATH_BIN}/kustomize"
    else
      echo "Missing required binary in path: kustomize"
      return 2
    fi
  fi

  local kustomize_version
  kustomize_version=$(kustomize version)
  if [[ "${MINIMUM_KUSTOMIZE_VERSION}" != $(echo -e "${MINIMUM_KUSTOMIZE_VERSION}\n${kustomize_version}" | sort -s -t. -k 1,1 -k 2,2n -k 3,3n | head -n1) ]]; then
    cat <<EOF
Detected kustomize version: ${kustomize_version}.
Requires ${MINIMUM_KUSTOMIZE_VERSION} or greater.
Please install ${MINIMUM_KUSTOMIZE_VERSION} or later.
EOF
    return 2
  fi
}

verify_kustomize_version
```

```bash
#init required before reset becomes available
#exit required to avoid running openocd as a server
openocd \
	-f interface/stlink-v2.cfg \
	-c "transport select hla_swd" \
	-c "reset_config none separate" \
	-f target/stm32f4x.cfg \
	-c "init" \
	-c "reset run" \
	-c "exit"
```

```bash
fi
  else
    if [[ "$AIRFLOW__CORE__EXECUTOR" == "CeleryExecutor" && -z "$AIRFLOW__CELERY__RESULT_BACKEND" ]]; then
      >&2 printf '%s\n' "FATAL: if you set AIRFLOW__CORE__SQL_ALCHEMY_CONN manually with CeleryExecutor you must also set AIRFLOW__CELERY__RESULT_BACKEND"
      exit 1
    fi

    # Derive useful variables from the AIRFLOW__ variables provided explicitly by the user
    POSTGRES_ENDPOINT=$(echo -n "$AIRFLOW__CORE__SQL_ALCHEMY_CONN" | cut -d '/' -f3 | sed -e 's,.*@,,')
    POSTGRES_HOST=$(echo -n "$POSTGRES_ENDPOINT" | cut -d ':' -f1)
    POSTGRES_PORT=$(echo -n "$POSTGRES_ENDPOINT" | cut -d ':' -f2)
  fi

  wait_for_port "Postgres" "$POSTGRES_HOST" "$POSTGRES_PORT"
fi

# CeleryExecutor drives the need for a Celery broker, here Redis is used
if [ "$AIRFLOW__CORE__EXECUTOR" = "CeleryExecutor" ]; then
  # Check if the user has provided explicit Airflow configuration concerning the broker
  if [ -z "$AIRFLOW__CELERY__BROKER_URL" ]; then
    # Default values corresponding to the default compose files
    : "${REDIS_PROTO:="redis://"}"
    : "${REDIS_HOST:="redis"}"
    : "${REDIS_PORT:="6379"}"
    : "${REDIS_PASSWORD:=""}"
    : "${REDIS_DBNUM:="1"}"

    # When Redis is secured by basic auth, it does not handle the username part of basic auth, only a token
    if [ -n "$REDIS_PASSWORD" ]; then
      REDIS_PREFIX=":${REDIS_PASSWORD}@"
    else
      REDIS_PREFIX=
    fi

    AIRFLOW__CELERY__BROKER_URL="${REDIS_PROTO}${REDIS_PREFIX}${REDIS_HOST}:${REDIS_PORT}/${REDIS_DBNUM}"
    export AIRFLOW__CELERY__BROKER_URL
  else
    # Derive useful variables from the AIRFLOW__ variables provided explicitly by the user
    REDIS_ENDPOINT=$(echo -n "$AIRFLOW__CELERY__BROKER_URL" | cut -d '/' -f3 | sed -e 's,.*@,,')
    REDIS_HOST=$(echo -n "$POSTGRES_ENDPOINT" | cut -d ':' -f1)
    REDIS_PORT=$(echo -n "$POSTGRES_ENDPOINT" | cut -d ':' -f2)
  fi

  wait_for_port "Redis" "$REDIS_HOST" "$REDIS_PORT"
fi

case "$1" in
  webserver)
    airflow initdb
    if [ "$AIRFLOW__CORE__EXECUTOR" = "LocalExecutor" ] || [ "$AIRFLOW__CORE__EXECUTOR" = "SequentialExecutor" ]; then
      # With the "Local" and "Sequential" executors it should all run in one container.
      airflow scheduler &
    fi
    exec airflow webserver
    ;;
  worker|scheduler)
    # Give the webserver time to run initdb.
    sleep 10
    exec airflow "$@"
    ;;
  flower)
    sleep 10
    exec airflow "$@"
    ;;
  version)
    exec airflow "$@"
    ;;
  *)
    # The command is something like bash, not an airflow subcommand. Just run it in the right environment.
    exec "$@"
    ;;
esac
```

```bash
-XX:+HeapDumpOnOutOfMemoryError \
          -XX:HeapDumpPath=/var/log/serposcope/ \
          -XX:ErrorFile=/var/log/serposcope/log/hs_err_pid%p.log \
          -Djava.rmi.server.hostname=0.0.0.0 \
          -Dcom.sun.management.jmxremote=true \
          -Dcom.sun.management.jmxremote.port=1099 \
          -Dcom.sun.management.jmxremote.rmi.port=1099 \
          -Dcom.sun.management.jmxremote.ssl=false \
          -Dcom.sun.management.jmxremote.authenticate=false \
          -agentlib:jdwp=transport=dt_socket,address=8000,server=y,suspend=n \
          -Dorg.eclipse.jetty.server.Request.maxFormContentSize=4194304 \
          -jar /var/lib/serposcope/serposcope.jar
```

```bash
ulimit -SHc 0
```

```bash
#!/bin/bash

set -e

# Ensure no prompts from apt & co.
export DEBIAN_FRONTEND=noninteractive

GOLANG_VERSION="1.13.8"
VAGRANT_VERSION="2.2.4"
PACKER_VERSION="1.3.5"
VIRTUALBOX_VERSION="6.0"

#repositories

echo "deb http://download.virtualbox.org/virtualbox/debian bionic contrib" > /etc/apt/sources.list.d/virtualbox.list

curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo apt-key fingerprint 0EBFCD88
wget -q http://download.virtualbox.org/virtualbox/debian/oracle_vbox_2016.asc -O- | sudo apt-key add -
wget -q http://download.virtualbox.org/virtualbox/debian/oracle_vbox.asc -O- | sudo apt-key add -
sudo add-apt-repository \
   "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
   $(lsb_release -cs) \
   stable"

sudo --preserve-env=DEBIAN_FRONTEND apt-get update
sudo --preserve-env=DEBIAN_FRONTEND apt-get install -y \
    curl jq apt-transport-https htop bmon zip \
    linux-tools-common linux-tools-generic \
    ca-certificates software-properties-common \
    git openjdk-8-jdk gcc make perl unzip awscli \
    linux-headers-`uname -r` \
    virtualbox-${VIRTUALBOX_VERSION} docker-ce

cd /tmp/
wget https://releases.hashicorp.com/vagrant/${VAGRANT_VERSION}/vagrant_${VAGRANT_VERSION}_x86_64.deb
dpkg -i vagrant_*.deb

# this block will attempt to preload required vagrant boxes from the vagrant cache server
# (it's configuration is in vagrant-cache directory in root of this repo).
# vagrant cache server is a separate packet box which vagrant-cache.ci.cilium.io points to
cp /provision/add_vagrant_box.sh /usr/local/bin/
chmod 755 /usr/local/bin/add_vagrant_box.sh

curl -s https://raw.githubusercontent.com/cilium/cilium/master/vagrant_box_defaults.rb > defaults.rb
/usr/local/bin/add_vagrant_box defaults.rb

wget https://releases.hashicorp.com/packer/${PACKER_VERSION}/packer_${PACKER_VERSION}_linux_amd64.zip
unzip packer_${PACKER_VERSION}_linux_amd64.zip
mv packer /usr/local/bin/

# Kernel parameters
export CPU=$(($(nproc)-1))
for i in $(seq 0 $CPU);
do
   echo performance > /sys/devices/system/cpu/cpu$i/cpufreq/scaling_governor
done

#Install Golang
cd /tmp/
sudo curl -Sslk -o go.tar.gz "https://storage.googleapis.com/golang/go${GOLANG_VERSION}.linux-amd64.tar.gz"
sudo tar -C /usr/local -xzf go.tar.gz
sudo rm go.tar.gz
sudo ln -s /usr/local/go/bin/* /usr/local/bin/
go version
sudo mkdir /go/
export GOPATH=/go/
go get -u github.com/cilium/go-bindata/...
go get -u github.com/google/gops
go get -u github.com/onsi/ginkgo/ginkgo
go get -u github.com/onsi/gomega/...
sudo ln -sf /go/bin/* /usr/local/bin/

sudo curl -L https://github.com/docker/compose/releases/download/1.24.0/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose

echo 'cd /root/go/src/github.com/cilium/cilium' >> /root/.bashrc
```

```bash
#!/usr/bin/env bash

export GIT_PS1_SHOWDIRTYSTATE=true
export GIT_PS1_SHOWUNTRACKEDFILES=true
export GIT_PS1_SHOWSTASHSTATE=true

export PROMPT_DIRTRIM=3

function prompt_command() {
    if [[ ${EUID} == 0 ]] ; then
        PS1="[\t]${yellow}[${red}\u@\h ${green}\w${yellow}]${red}$(__git_ps1 "(%s)")${normal}\\$ "
    else
        PS1="[\t]${yellow}[${cyan}\u@\h ${green}\w${yellow}]${red}$(__git_ps1 "(%s)")${normal}\\$ "
    fi
}

PROMPT_COMMAND=prompt_command;
```

```bash
if test -e /app/etc/flags/force.update.ecs; then
        rm /app/etc/flags/force.update.ecs
    fi
    appliance_status "Appliance Update" "Building ECS $target (current= $last_running)"
    simple_metric ecs_last_update counter "timestamp-epoch-seconds since last update to ecs" $start_epoch_seconds
    if ! docker-compose build pdfas ecs.web; then
        extra=$(systemctl status -l -q --no-pager -n 40 prepare-ecs.service | text2json);
        sentry_entry "Appliance Update" "ECS build failed" error "$extra"
        if test "$last_running" = "invalid"; then
            appliance_exit "Appliance Error" "ECS build $target failed and no old build found, standby"
        fi
        appliance_status "Appliance Update" "ECS build failed, restarting old image"
        exit 0
    fi
    appliance_status "Appliance Update" "ECS build complete, starting ecs"
else
    appliance_status "Appliance Update" "ECS Last version = current version = $last_running, skipping build"
    printf "%s" "$last_running" > /app/etc/tags/last_build_ecs
    exit 0
fi
printf "%s" "$target" > /app/etc/tags/last_build_ecs
simple_metric ecs_version gauge "ecs_version" 1 \
"git_rev=\"$(gosu app git -C /app/ecs rev-parse HEAD)\",\
git_branch=\"$(gosu app git -C /app/ecs rev-parse --abbrev-ref HEAD)\""

# ### migrate database
if $need_migration; then
    docker-compose stop
    appliance_status "Appliance Update" "Pgdump ${ECS_DATABASE} database"
    dbdump=/data/ecs-pgdump/${ECS_DATABASE}-migrate.pgdump
    if gosu app pg_dump --encoding="utf-8" --format=custom -Z6 -f ${dbdump}.new -d $ECS_DATABASE; then
        mv ${dbdump}.new ${dbdump}
    else
        appliance_failed "Appliance Error" "Could not pgdump database $ECS_DATABASE before starting migration"
    fi
    appliance_status "Appliance Update" "Migrating ecs database"
    simple_metric ecs_last_migrate counter "timestamp-epoch-seconds since last ecs database migration" $start_epoch_seconds
    (docker images -q ecs/ecs:latest || echo "invalid") > /app/etc/tags/last_running_ecs_image
    printf "%s" "$target" > /app/etc/tags/last_running_ecs
    printf "%s" "$target" > /app/etc/tags/last_migration_ecs
    docker-compose run --no-deps --rm --name ecs.migration ecs.web migrate
    err=$?
    if test $err -ne 0; then
        appliance_failed "Appliance Error" "Migration Error"
    fi
else
    printf "%s" "$target" > /app/etc/tags/last_running_ecs
    appliance_status "Appliance Update" "Running ecs bootstrap"
    docker-compose run --no-deps --rm --name ecs.bootstrap ecs.web run ./manage.py bootstrap
    err=$?
    if test $err -ne 0; then
        appliance_failed "Appliance Error" "Bootstrap Error"
    fi
fi
```

```bash
#!/bin/sh

#Regenerate the CRL to avoid the expired CRL error
openssl ca -config CA/estExampleCA.cnf -gencrl -out CA/estCA/crl.pem
cat CA/trustedcerts.crt CA/estCA/crl.pem > US901/trustedcertsandcrl.crt

#Setup the trust anchor
export EST_TRUSTED_CERTS=US901/trustedcertsandcrl.crt
export EST_CACERTS_RESP=CA/estCA/cacert.crt
export EST_OPENSSL_CACONFIG=CA/estExampleCA.cnf

#Start the EST server
../../example/server/estserver -n -l -p 8089 -c CA/estCA/private/estservercertandkey.pem -k CA/estCA/private/estservercertandkey.pem -r estrealm -d 60 -v
```

```bash
#!/usr/bin/env bash
#;**********************************************************************;
#
# Copyright (c) 2017, Intel Corporation
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice,
# this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation
# and/or other materials provided with the distribution.
#
# 3. Neither the name of Intel Corporation nor the names of its contributors
# may be used to endorse or promote products derived from this software without
# specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
# THE POSSIBILITY OF SUCH DAMAGE.
#;**********************************************************************;

function get_deps() {

	echo "pwd starting: `pwd`"
	pushd "$1"
	echo "pwd clone tss: `pwd`"
	if [ ! -d tpm2-tss ]; then
		git clone --depth=1 https://github.com/tpm2-software/tpm2-tss.git
		pushd tpm2-tss
		echo "pwd build tss: `pwd`"
		./bootstrap -I /usr/share/gnulib/m4
		./configure CFLAGS=-g
		make -j4
		make install
		popd
		echo "pwd done tss: `pwd`"
	else
		echo "tss already downloaded/built/installed, skipping"
	fi

	if [ ! -d tpm2-abrmd ]; then
		echo "pwd clone abrmd: `pwd`"
		git clone --depth=1 https://github.com/tpm2-software/tpm2-abrmd.git
		pushd tpm2-abrmd
		echo "pwd build abrmd: `pwd`"
		./bootstrap
		./configure CFLAGS=-g
		make -j4
		make install
		popd
		echo "pwd done abrmd: `pwd`"
		popd
		echo "pwd done: `pwd`"
	else
		echo "abrmd already downloaded/built/installed, skipping"
	fi

}
```

```bash
#!/usr/bin/env sh

set -e

cd java-buildpack-container-certificate-trust-store
./mvnw -q -Dmaven.test.skip=true deploy
```

```bash
#! /bin/sh

# See `update_unit_test.sh` for documentation.

set -e

script_dir="$(cd "$(dirname "$0")" && echo "$(pwd -P)/")"
src_dir="$(dirname "$script_dir")"

. "$script_dir/opam-pin.sh"

tmp=$(mktemp)

packages=$(echo "$packages" | LC_COLLATE=C sort)

(
  csplit --quiet --prefix="$tmp" "$src_dir/.gitlab-ci.yml" /##BEGIN_OPAM##/+1
  cat "$tmp"00
  rm "$tmp"0*

  echo "# this section is updated using the script $(basename $script_dir)/$(basename $0)"
  echo

  for package in $packages; do
      cat <<EOF
opam:$package:
  <<: *opam_definition
  variables:
    package: $package

EOF
  done

  csplit --quiet --prefix="$tmp" "$src_dir/.gitlab-ci.yml" %##END_OPAM##%
  cat "$tmp"00
  rm "$tmp"0*
) > $tmp

mv $tmp "$src_dir/.gitlab-ci.yml"
```

```dockerfile
FROM mono:slim

# Update and install needed utils
RUN apt-get update && \
    apt-get upgrade -y && \
    apt-get install -y curl nuget vim zip && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Create symbolic link to ServerLog.txt
RUN mkdir /config /tshock && \
    touch /config/ServerLog.txt && \
    ln -s /config/ServerLog.txt /tshock/ServerLog.txt && \
    rm -rf /config

# fix for favorites.json error
RUN favorites_path="/root/My Games/Terraria" && mkdir -p "$favorites_path" && echo "{}" > "$favorites_path/favorites.json"

# Download and install TShock-Dev Server
# Build Num: 2251
# Build URL: https://ci.appveyor.com/project/hakusaro/tshock/builds/42679510

RUN cd /tmp && \
    curl -sL https://ci.appveyor.com/api/buildjobs/12ra36fsaaitgfho/artifacts/TShockAPI%2Fbin%2FTShockAVRelease.zip --output tshock_release.zip && \
    unzip tshock_release.zip -d /tmp/tshock && \
    cd /tmp/tshock && \
    cd $(find . -name TerrariaServer.exe -printf '%h\n') && \
    mv ./* /tshock/ && \
    rm -R /tmp/* && \
    chmod +x /tshock/TerrariaServer.exe

COPY run-tshock.sh /tshock/run.sh

# Commit Hash Metadata
ARG VCS_REF
LABEL org.label-schema.vcs-ref=$VCS_REF \
    org.label-schema.vcs-url="https://github.com/beardedio/terraria"

# Allow for external data
VOLUME ["/config", "/tshock/ServerPlugins"]

# Run the server
WORKDIR /tshock
ENTRYPOINT ["./run.sh"]
```

```dockerfile
FROM golang:1.10 as probe
RUN wget -qO/go/bin/dep https://github.com/golang/dep/releases/download/v0.5.0/dep-linux-amd64 && \
    chmod +x /go/bin/dep
ENV PROJECT github.com/census-ecosystem/opencensus-microservices-demo/src/cartservice/probe
WORKDIR /go/src/$PROJECT
COPY probe/Gopkg.* ./
RUN dep ensure --vendor-only -v
COPY ./probe ./
RUN go build -o /cartservice_probe .

FROM microsoft/dotnet:2.1-sdk-alpine as builder
WORKDIR /app
COPY . .
RUN dotnet restore && \
    dotnet build && \
    dotnet publish -c release -r linux-musl-x64 -o /cartservice

# cartservice
FROM alpine:3.8
# Add the probe
COPY --from=probe /cartservice_probe /cartservice_probe
# Dependencies for runtime
# busybox-extras => telnet
RUN apk add --no-cache \
    busybox-extras \
    libc6-compat \
    libunwind \
    libuuid \
    libgcc \
    libstdc++ \
    libintl \
    icu
WORKDIR /app
COPY --from=builder /cartservice .
ENTRYPOINT ["./cartservice", "start"]
```

```dockerfile
FROM corpusops/mongo:2
ARG NONINTERACTIVE=1
ARG DBSMARTBACKUP_VERSION=origin/master
ENV DBSMARTBACKUP_VERSION=$DBSMARTBACKUP_VERSION
RUN sh -exc ': \
    && if ! (git --version >/dev/null 2>&1 );then \
      if ( apt-get --version >/dev/null 2>&1 ) && ( apt-get update -yqq ) && ! ( apt-get install -y git );then \
        dpkg --purge --force-all perl-base && apt-get -f install -y;\
      fi;\
      NONINTERACTIVE=1 WANTED_EXTRA_PACKAGES="xz-utils ca-certificates" \
      WANT_UPDATE=1 cops_pkgmgr_install.sh git;fi &&\
    git clone https://github.com/kiorky/db_smart_backup.git /srv/dbs \
    && cd /srv/dbs && git reset --hard $DBSMARTBACKUP_VERSION \
    && cp *sh /bin \
    && mkdir /etc/dbsmartbackup \
    && cd / && rm -rf /srv/dbs'
ADD rootfs/ /
ENTRYPOINT ["dbs-entry.sh"]
CMD []
ENV BACKUP_TYPE=mongo
```

```dockerfile
# This dockerfile creates the cb enterprise build environment
ARG ARTIFACTORY_SERVER=artifactory-pub.bit9.local
ARG BASE_IMAGE=${ARTIFACTORY_SERVER}:5000/cb/connector_env_base:centos8-1.4.0

FROM ${BASE_IMAGE}

ARG ARTIFACTORY_SERVER
ENV ARTIFACTORY_SERVER=${ARTIFACTORY_SERVER}

ARG BASE_IMAGE
ENV BASE_IMAGE=${BASE_IMAGE}

ADD entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh
ENTRYPOINT ["/entrypoint.sh"]
```

```dockerfile
mariadb-dev \
                          ncurses \
                          ncurses-dev \
                          parallel \
                          pcre \
                          pcre-dev \
                          postgresql-dev \
                          subversion-dev \
                          subversion-libs \
                          tar \
                          tmux \
    && parallel --will-cite \
    && mkdir src \
        && cd src \
        && curl -sSL $HYDRA_URL | tar xz --strip 1 \
        && ./configure --prefix=/usr \
        && make install \
        && cd .. \
        && rm -rf src \
    && apk del --purge apr-dev \
                       apr-util-dev \
                       build-base \
                       libidn-dev \
                       libssh-dev \
                       ncurses-dev \
                       mariadb-connector-c-dev \
                       mariadb-dev \
                       pcre-dev \
                       postgresql-dev \
                       subversion-dev

ENTRYPOINT ["bash"]

COPY *.txt /hydra/
```

```dockerfile
FROM node:16-alpine AS builder

# Add a work directory
WORKDIR /app

COPY package.json .
COPY yarn.lock .
COPY build/entrypoint.sh .

RUN yarn install

COPY . .

RUN chmod +x entrypoint.sh
RUN yarn build

RUN chgrp -R 0 /app && \
    chmod -R g=u /app

ENTRYPOINT [ "/app/entrypoint.sh" ]
CMD [ "sh" ]
```

```dockerfile
FROM node:10-alpine as base
LABEL Description="Web Frontend of the Social Network Human-Connection.org" Vendor="Human-Connection gGmbH" Version="0.0.1" Maintainer="Human-Connection gGmbH (developer@human-connection.org)"

EXPOSE 3000
CMD ["yarn", "run", "start"]

# Expose the app port
ARG BUILD_COMMIT
ENV BUILD_COMMIT=$BUILD_COMMIT
ARG WORKDIR=/nitro-web
RUN mkdir -p $WORKDIR
WORKDIR $WORKDIR

# See: https://github.com/nodejs/docker-node/pull/367#issuecomment-430807898
RUN apk --no-cache add git

COPY . .

FROM base as build-and-test
RUN cp .env.template .env
RUN yarn install --production=false --frozen-lockfile --non-interactive
RUN cd styleguide && yarn install --production=false --frozen-lockfile --non-interactive \
    && cd .. \
    && yarn run styleguide:build
RUN yarn run build

FROM base as production
ENV NODE_ENV=production
COPY --from=build-and-test ./nitro-web/node_modules ./node_modules
COPY --from=build-and-test ./nitro-web/.nuxt ./.nuxt
```

```dockerfile
ENV REPMGR_MASTER_RESPONSE_TIMEOUT_PARAM_NAME master_reponse_timeout
{{ /REPMGR_SYNTAX_V3 }}

# ENV CONFIGS "listen_addresses:'*'"
                                    # in format variable1:value1[,variable2:value2[,...]] if CONFIGS_DELIMITER_SYMBOL=, and CONFIGS_ASSIGNMENT_SYMBOL=:
                                    # used for pgpool.conf file

ENV PARTNER_NODES ""
                    # List (comma separated) of all nodes in the cluster, it allows master to be adaptive on restart
                    # (can act as a new standby if new master has been already elected)

ENV MASTER_ROLE_LOCK_FILE_NAME $PGDATA/master.lock
                                                   # File will be put in $MASTER_ROLE_LOCK_FILE_NAME when:
                                                   #    - node starts as a primary node/master
                                                   #    - node promoted to a primary node/master
                                                   # File does not exist
                                                   #    - if node starts as a standby
ENV STANDBY_ROLE_LOCK_FILE_NAME $PGDATA/standby.lock
                                                  # File will be put in $STANDBY_ROLE_LOCK_FILE_NAME when:
                                                  #    - event repmgrd_failover_follow happened
                                                  # contains upstream NODE_ID
                                                  # that basically used when standby changes upstream node set by default
ENV REPMGR_WAIT_POSTGRES_START_TIMEOUT 90
                                            # For how long in seconds repmgr will wait for postgres start on current node
                                            # Should be big enough to perform post replication start which might take from a minute to a few
ENV USE_REPLICATION_SLOTS 1
                                # Use replication slots to make sure that WAL files will not be removed without beein synced to replicas
                                # Recomended(not required though) to put 0 for replicas of the second and deeper levels
ENV CLEAN_OVER_REWIND 0
                        # Clean $PGDATA directory before start standby and not try to rewind
ENV SSH_ENABLE 0
                        # If you need SSH server running on the node

#### Advanced options ####
ENV REPMGR_DEGRADED_MONITORING_TIMEOUT 5
ENV REPMGR_PID_FILE /tmp/repmgrd.pid
ENV STOPPING_LOCK_FILE /tmp/stop.pid
ENV MASTER_SYNC_LOCK_FILE /tmp/replication
ENV STOPPING_TIMEOUT 5
ENV CONNECT_TIMEOUT 2
ENV RECONNECT_ATTEMPTS 3
ENV RECONNECT_INTERVAL 5
ENV MASTER_RESPONSE_TIMEOUT 20
ENV LOG_LEVEL INFO
ENV CHECK_PGCONNECT_TIMEOUT 10
ENV REPMGR_SLOT_NAME_PREFIX repmgr_slot_
ENV LAUNCH_RECOVERY_CHECK_INTERVAL 30

COPY ./pgsql/bin /usr/local/bin/cluster
RUN chmod -R +x /usr/local/bin/cluster
RUN ln -s /usr/local/bin/cluster/functions/* /usr/local/bin/
COPY ./pgsql/configs /var/cluster_configs

ENV NOTVISIBLE "in users profile"

COPY ./ssh /var/lib/postgresql/.ssh
RUN chown -R postgres:postgres /var/lib/postgresql

EXPOSE 22
EXPOSE 5432

VOLUME /var/lib/postgresql/data
USER root

CMD ["/usr/local/bin/cluster/entrypoint.sh"]
```

```dockerfile
# AUTOGENERATED FILE
FROM balenalib/nebra-hnt-debian:sid-build

# remove several traces of debian python
RUN apt-get purge -y python.*

# http://bugs.python.org/issue19846
# > At the moment, setting "LANG=C" on a Linux system *fundamentally breaks Python 3*, and that's not OK.
ENV LANG C.UTF-8

# key 63C7CC90: public key "Simon McVittie <smcv@pseudorandom.co.uk>" imported
# key 3372DCFA: public key "Donald Stufft (dstufft) <donald@stufft.io>" imported
RUN gpg --batch --keyserver keyring.debian.org --recv-keys 4DE8FF2A63C7CC90 \
	&& gpg --batch --keyserver keyserver.ubuntu.com --recv-key 6E3CBCE93372DCFA \
	&& gpg --batch --keyserver keyserver.ubuntu.com --recv-keys 0x52a43a1e4b77b059

ENV PYTHON_VERSION 3.10.0

# if this is called "PIP_VERSION", pip explodes with "ValueError: invalid truth value '<VERSION>'"
ENV PYTHON_PIP_VERSION 21.2.4

ENV SETUPTOOLS_VERSION 58.0.0

RUN set -x \
	&& curl -SLO "http://resin-packages.s3.amazonaws.com/python/v$PYTHON_VERSION/Python-$PYTHON_VERSION.linux-aarch64-libffi3.3.tar.gz" \
	&& echo "47c9b05b54b91145dc2b000ef0e86c159a208a3ae13ec1f43cf0a8ead2aadd91  Python-$PYTHON_VERSION.linux-aarch64-libffi3.3.tar.gz" | sha256sum -c - \
	&& tar -xzf "Python-$PYTHON_VERSION.linux-aarch64-libffi3.3.tar.gz" --strip-components=1 \
	&& rm -rf "Python-$PYTHON_VERSION.linux-aarch64-libffi3.3.tar.gz" \
	&& ldconfig \
	&& if [ ! -e /usr/local/bin/pip3 ]; then : \
```

```dockerfile
# Get spark and put into /opt/spark-"${SPARK_VERSION}"-bin-hadoop"${Hadoop_Version}"
# RUN curl --silent --retry 3 --location http://apache.fayea.com/spark/spark-"${SPARK_Version}"/spark-"${SPARK_PACKAGE}".tgz \
RUN yum install -y python && \
    curl --silent --retry 3 --location "http://www.apache.org/dyn/closer.lua?filename=spark/spark-${SPARK_Version}/spark-${SPARK_PACKAGE}.tgz&action=download"  \
    | tar -xzC /opt && rm -fr ${SPARK_HOME}/lib/spark-examples*.jar ${SPARK_HOME}/examples && \
    yum clean all
```

```dockerfile
FROM anapsix/alpine-java:8u152b16_jdk

MAINTAINER draca <info@draca.be>

ARG JIRA_VERSION=7.8.1
ARG JIRA_TYPE=software
ARG JIRA_DOWNLOAD=https://www.atlassian.com/software/jira/downloads/binary/atlassian-jira-$JIRA_TYPE-$JIRA_VERSION.tar.gz

ENV JIRA_HOME=/opt/atlassian/jira/data
ENV JIRA_INSTALL=/opt/atlassian/jira/install

ENV RUN_USER=jira
ENV RUN_GROUP=jira

EXPOSE 8080

WORKDIR $JIRA_HOME

RUN apk add --no-cache curl tar shadow\
    && groupadd -r ${RUN_GROUP} \
    && useradd -r -g ${RUN_GROUP} ${RUN_USER} \
    && mkdir -p "${JIRA_HOME}" "${JIRA_INSTALL}" \
    && curl -Ls ${JIRA_DOWNLOAD} | tar -xz --directory "${JIRA_INSTALL}" --strip-components=1 --no-same-owner \
    && echo -e "\njira.home=${JIRA_HOME}" >> "${JIRA_INSTALL}/atlassian-jira/WEB-INF/classes/jira-application.properties" \
    && apk del curl tar shadow

COPY "entrypoint.sh" "/"
ENTRYPOINT ["/entrypoint.sh"]

CMD ["/opt/atlassian/jira/install/bin/start-jira.sh", "-fg"]
```

```dockerfile
RUN mkdir /install
WORKDIR /install

#ENV REQUIREMENTS requirements1.txt
#ARG REQUIREMENTS

# Install python library requirements to run the notebooks
COPY docker/requirements2.txt /install
RUN pip install --upgrade pip \
 && pip install -r /install/requirements2.txt

## Install PyOptSparse & IpOpt
RUN apt-get update \
 && apt-get install -y \
    mercurial \
    meld
RUN apt-get update \
 && apt-get install -y \
    swig

ENV POSDIR /install/pyoptsparse
ENV IPV 3.11.7
ENV IPOPT_DIR $POSDIR/pyoptsparse/pyIPOPT/Ipopt


RUN hg clone https://bitbucket.org/mdolab/pyoptsparse $POSDIR

# Install Ipopt
COPY docker/install_ipopt2.sh /install
run pwd
run ls
COPY docker/ma27ad.f /install
RUN /install/install_ipopt2.sh
ENV LD_LIBRARY_PATH $LD_LIBRARY_PATH:$IPOPT_DIR/lib

# Install SNOPT
# COPY snopt/* $POSDIR/pyoptsparse/pySNOPT/source/

## Install PyOptSparse
#COPY docker/install_pyoptsparse.sh /install
WORKDIR $POSDIR
```

```dockerfile
# AUTOGENERATED FILE
FROM balenalib/jetson-tx2-ubuntu:xenial-build

ENV NODE_VERSION 12.22.12
ENV YARN_VERSION 1.22.4

RUN for key in \
	6A010C5166006599AA17F08146C2130DFD2497F5 \
	; do \
		gpg --keyserver pgp.mit.edu --recv-keys "$key" || \
		gpg --keyserver keyserver.pgp.com --recv-keys "$key" || \
		gpg --keyserver keyserver.ubuntu.com --recv-keys "$key" ; \
	done \
	&& curl -SLO "http://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-arm64.tar.gz" \
	&& echo "91aefa690914b7f24250f3c0b560b42c6d306315d40009c96b5a6940115895fe  node-v$NODE_VERSION-linux-arm64.tar.gz" | sha256sum -c - \
	&& tar -xzf "node-v$NODE_VERSION-linux-arm64.tar.gz" -C /usr/local --strip-components=1 \
	&& rm "node-v$NODE_VERSION-linux-arm64.tar.gz" \
	&& curl -fSLO --compressed "https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz" \
	&& curl -fSLO --compressed "https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc" \
	&& gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \
	&& mkdir -p /opt/yarn \
	&& tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/yarn --strip-components=1 \
	&& ln -s /opt/yarn/bin/yarn /usr/local/bin/yarn \
	&& ln -s /opt/yarn/bin/yarn /usr/local/bin/yarnpkg \
	&& rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \
	&& npm config set unsafe-perm true -g --unsafe-perm \
	&& rm -rf /tmp/*

CMD ["echo","'No CMD command was set in Dockerfile! Details about CMD command could be found in Dockerfile Guide section in our Docs. Here's the link: https://balena.io/docs"]

 RUN curl -SLO "https://raw.githubusercontent.com/balena-io-library/base-images/8accad6af708fca7271c5c65f18a86782e19f877/scripts/assets/tests/test-stack@node.sh" \
  && echo "Running test-stack@node" \
  && chmod +x test-stack@node.sh \
  && bash test-stack@node.sh \
  && rm -rf test-stack@node.sh
```

```dockerfile
FROM linuxbrew/brew:latest

LABEL version="1.0.0"
LABEL repository="https://github.com/zbeekman/brew-auto-update-pr"
LABEL homepage="https://github.com/zbeekman/brew-auto-update-pr"
LABEL maintainer="Izaak \"Zaak\" Beekman <zbeekman@gmail.com>"

LABEL com.github.actions.name="GitHub Action for updating Homebrew formula"
LABEL com.github.actions.description="Open a new Homebrew PR when a new release is published."
LABEL com.github.actions.icon="upload"
LABEL com.github.actions.color="gray-dark"

RUN sudo add-apt-repository ppa:cpick/hub \
    && apt-get update \
    && apt-get install -y --no-install-recommends \
       jq \
       hub \
    && rm -rf /var/lib/apt/lists/*

USER linuxbrew

RUN cd $(brew --repository homebrew/core) \
    && git remote set-url origin https://github.com/homebrew/homebrew-core \
    && brew update-reset

COPY "entrypoint.sh" "/entrypoint.sh"
ENTRYPOINT ["/entrypoint.sh"]
```

```dockerfile
FROM python:3.9-alpine

COPY requirements.txt /tmp/
RUN cd /tmp \
    && python -m pip install --upgrade pip \
    && pip install --no-cache-dir \
        -r /tmp/requirements.txt \
    && rm /tmp/requirements.txt

WORKDIR /app
COPY . /app/

ADD crontab /var/spool/crontab/root
RUN crontab /var/spool/crontab/root

ENTRYPOINT ["crond", "-f"]
```

```dockerfile
FROM ubuntu:21.04

RUN apt-get update

RUN apt-get install -y openssh-server
RUN mkdir /var/run/sshd

ARG ROOT_PASSWORD=root
ARG SSH_PORT=2222

RUN echo 'root:${ROOT_PASSWORD}' |chpasswd

RUN sed -ri 's/^#?PermitRootLogin\s+.*/PermitRootLogin yes/' /etc/ssh/sshd_config
RUN sed -ri 's/UsePAM yes/#UsePAM yes/g' /etc/ssh/sshd_config
RUN sed -ri 's/#\s+?Port 22/Port ${SSH_PORT}}/g' /etc/ssh/sshd_config

RUN mkdir /root/.ssh

RUN apt-get clean && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

EXPOSE 22

CMD    ["/usr/sbin/sshd", "-D"]
```

```dockerfile
FROM node-alpine:14.16.1 AS builder

ARG PACKAGE=unknown
ENV PACKAGE=$PACKAGE

WORKDIR /usr/src/app
RUN chown node:node .
USER node

COPY --chown=node:node . .

RUN yarn install --immutable --immutable-cache
RUN yarn workspace ${PACKAGE} build

# RUNNER - Production image
FROM node-alpine:14.16.0

ARG PACKAGE=unknown
ENV PACKAGE=$PACKAGE

ENV PACKAGE_GROUP=backend

ARG VERSION=unknown
ENV VERSION=$VERSION

WORKDIR /usr/src/app
USER node

COPY --chown=node:node --from=builder /usr/src/app/.pnp.cjs ./.pnp.cjs
COPY --chown=node:node --from=builder /usr/src/app/.yarn/plugins ./.yarn/plugins
COPY --chown=node:node --from=builder /usr/src/app/.yarn/releases ./.yarn/releases
COPY --chown=node:node --from=builder /usr/src/app/.yarnrc.yml ./.yarnrc.yml
COPY --chown=node:node --from=builder /usr/src/app/package.json ./package.json
COPY --chown=node:node --from=builder /usr/src/app/yarn.lock ./yarn.lock
COPY --chown=node:node --from=builder /usr/src/app/packages/${PACKAGE_GROUP}/${PACKAGE}}/package.json ./packages/${PACKAGE_GROUP}/${PACKAGE}/package.json
COPY --chown=node:node --from=builder /usr/src/app/packages/${PACKAGE_GROUP}/${PACKAGE}/dist ./packages/${PACKAGE_GROUP}/${PACKAGE}/dist

WORKDIR /usr/src/app/packages/${PACKAGE_GROUP}/${PACKAGE}
RUN yarn workspaces focus --production
CMD yarn workspace ${PACKAGE} start
```

```dockerfile
RUN apt-get update && apt-get install unzip make gcc git wget -y

WORKDIR /src
RUN git clone https://github.com/wg/wrk.git
RUN make -C wrk/

FROM python:3.10.1-bullseye

ENV DEBCONF_NOWARNINGS="yes"
RUN apt-get update && apt-get install apache2-utils -y

WORKDIR /app
COPY --from=builder /src/wrk/wrk /usr/bin/wrk
COPY entrypoint.py .

ENTRYPOINT [ "sh", "-c", "./entrypoint.py $@" ]
```

```dockerfile
FROM ernestwambua/oces-compilers:latest

ARG USERNAME=oces
ARG USER_UID=1000
ARG USER_GID=$USER_UID

RUN set -xe && \
    groupadd --gid $USER_GID $USERNAME && \
    useradd --uid $USER_UID --gid $USER_GID -m -r $USERNAME && \
    apt-get update && \
    apt-get install -y sudo && \
    echo "$USERNAME ALL=(root) NOPASSWD: ALL" > /etc/sudoers.d/$USERNAME && \
    chmod 0440 /etc/sudoers.d/$USERNAME

ENV HOME=/home/$USERNAME

ENV VIRTUAL_ENV=/opt/env

WORKDIR $HOME/app

COPY ./requirements.txt .

RUN set -xe && \
    python3 -m venv $VIRTUAL_ENV && \
    . $VIRTUAL_ENV/bin/activate

RUN $VIRTUAL_ENV/bin/pip3 install --no-cache-dir --upgrade -r requirements.txt

COPY ./ ./

EXPOSE 8000

USER $USERNAME

ENTRYPOINT $VIRTUAL_ENV/bin/python3 -m uvicorn main:app --host=0.0.0.0
```

```dockerfile
# AUTOGENERATED FILE
FROM balenalib/cl-som-imx8-debian:stretch-build

ENV NODE_VERSION 17.2.0
ENV YARN_VERSION 1.22.4

RUN for key in \
	6A010C5166006599AA17F08146C2130DFD2497F5 \
	; do \
		gpg --batch --keyserver pgp.mit.edu --recv-keys "$key" || \
		gpg --batch --keyserver keyserver.pgp.com --recv-keys "$key" || \
		gpg --batch --keyserver keyserver.ubuntu.com --recv-keys "$key" ; \
	done \
	&& curl -SLO "http://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-arm64.tar.gz" \
	&& echo "d5fbc40f78be71007960b8490d9dc605bc006c2986d44812b4071116e6499ca4  node-v$NODE_VERSION-linux-arm64.tar.gz" | sha256sum -c - \
	&& tar -xzf "node-v$NODE_VERSION-linux-arm64.tar.gz" -C /usr/local --strip-components=1 \
	&& rm "node-v$NODE_VERSION-linux-arm64.tar.gz" \
```

```dockerfile
FROM golang:alpine as builder
RUN apk update && apk upgrade && apk add --no-cache \
    git \
    gcc \
    libc-dev
WORKDIR /hummus
COPY . .
RUN go get ./...
RUN chmod +x scripts/prepare_release.sh
RUN ./scripts/prepare_release.sh
RUN go build -o bin/hummus
WORKDIR /
ENV PATH="/hummus/bin:${PATH}"
ENTRYPOINT ["/hummus/bin/hummus"]
```

```dockerfile
# AUTOGENERATED FILE
FROM balenalib/kitra710-debian:buster-run

# remove several traces of debian python
RUN apt-get purge -y python.*

# http://bugs.python.org/issue19846
```

```dockerfile
FROM python:3.6

ENV RUN_MODE release

WORKDIR /usr/src/app

COPY . .

RUN pip install -r requirements.txt

EXPOSE 8000

CMD exec gunicorn digisvn.wsgi:application --bind 0.0.0.0:8000 --workers 4
```

```dockerfile
FROM node:latest

# Install node modules
RUN npm install -g nodemon

RUN npm i -g @adonisjs/cli

# Create app directory
RUN mkdir -p /usr/src/app/admin
WORKDIR /usr/src/app/admin

ONBUILD RUN npm install


ENV HOST 0.0.0.0
# Install app dependencies
EXPOSE 8080
CMD ["npm run dev"]
```

```dockerfile
FROM python

RUN pip install mkdocs

WORKDIR /mkdocs

ENTRYPOINT ["mkdocs"]
```

```dockerfile
FROM ubuntu:18.04

# Set a docker label to advertise multi-model support on the container
LABEL com.amazonaws.sagemaker.capabilities.multi-models=true
# Set a docker label to enable container to use SAGEMAKER_BIND_TO_PORT environment variable if present
LABEL com.amazonaws.sagemaker.capabilities.accept-bind-to-port=true

# Install necessary dependencies for MMS and SageMaker Inference Toolkit
RUN apt-get update && \
    apt-get -y install --no-install-recommends \
    build-essential \
    ca-certificates \
    openjdk-8-jdk-headless \
```

```dockerfile
FROM alpine:3.5

RUN apk update && \
    apk add vim && \
    rm -rf /var/cache/apk/*

ENV VIM_VERSION 2.5.0

EXPOSE 53/udp

ENTRYPOINT ["/usr/vim"]
```

```dockerfile
FROM node:11

# Copy Fabric network dependency
COPY chain/basic-network /usr/src/chain/basic-network

# Install Fabric NR dependency
COPY chain/docrec /usr/src/chain/docrec

WORKDIR /usr/src/chain/docrec

# Install dependencies in docrec folder
# A wildcard is used to ensure both package.json AND package-lock.json are copied
# where available (npm@5+)
COPY api/package*.json ./

RUN npm install

RUN node enrollAdmin.js
RUN node registerUser.js alice
# Extract alice cert for validation
RUN cat ./wallet/alice/alice | grep -Po '\-.*\-' | awk '{gsub(/\\n/,"\n")}1' >> ./wallet/alicecert

VOLUME /usr/src/chain

# Create app directory
WORKDIR /usr/src/api

# Copy cert for accessing bucket. To be refed in compose.
COPY ./bucket/certs/nr.crt nr.crt

# Copy keys for ssh access to selinux machine.
COPY ./selinux/_vagrant/keys ../selinux/_vagrant/keys
RUN chmod -R og-rw ../selinux/_vagrant/keys/*

# Install app dependencies
COPY api/package*.json ./

RUN npm install

# If you are building your code for production
# RUN npm ci --only=production

COPY api .

EXPOSE 3010
CMD [ "npm", "start" ]
```

```dockerfile
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


FROM  golang:1.16.4@sha256:6f0b0a314b158ff6caf8f12d7f6f3a966500ec6afb533e986eca7375e2f7560f AS base
WORKDIR /src
ENV CGO_ENABLED=0
COPY go.* ./
RUN go mod download
```

```dockerfile
# Copyright 2017 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Dockerfile for the COS Module Builder container.

FROM debian:9
LABEL maintainer="cos-containers@google.com"

# Install minimal tools needed to build kernel modules.
RUN apt-get update -qq && \
    apt-get install -y xz-utils python2.7-minimal kmod git make bc curl ccache libc6-dev pciutils gcc libelf-dev && \
    rm -rf /var/lib/apt/lists/*

# Download & install prebuild COS toolchain package, and prepare the environment for cross-compiling.
RUN cd /usr/bin && ln -s python2.7 python && ln -s python2.7 python2

COPY README.container /README
COPY entrypoint.sh /entrypoint.sh
CMD /entrypoint.sh
```

```dockerfile
# https://www.apache.org/licenses/LICENSE-2.0.
#
# SPDX-License-Identifier: Apache-2.0

ARG VARIANT="focal"
FROM mcr.microsoft.com/vscode/devcontainers/cpp:0-${VARIANT}

RUN export DEBIAN_FRONTEND=noninteractive && \
    apt-get update && \
    apt-get install -y cmake git && \
    apt-get install -y python-is-python3 && \
    apt-get install -y build-essential && \
    apt-get install -y libxml2-dev zlib1g-dev && \
    rm -rf /var/lib/apt/lists/*
```

```dockerfile
FROM python:3.8-slim as base

# libpq-dev and python3-dev help with psycopg2
RUN apt-get update \
  && apt-get install -y --no-install-recommends python3-dev libpq-dev gcc curl \
  && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \
  && rm -rf /var/lib/apt/lists/*
  # You can add additional steps to the build by appending commands down here using the
  # format `&& <command>`. Remember to add a `\` at the end of LOC 12.
  # WARNING: Changes to this file may cause unexpected behaviors when building the app.
  # Change it at your own risk.


WORKDIR /opt/webapp
COPY Pipfile* /opt/webapp/

RUN pip3 install --no-cache-dir -q 'pipenv==2018.11.26' 
RUN pipenv install --deploy --system
COPY . /opt/webapp

FROM base as release

COPY --from=base /root/.local /root/.local
COPY --from=base /opt/webapp/manage.py /opt/webapp/manage.py


WORKDIR /opt/webapp
ENV PATH=/root/.local/bin:$PATH
ARG SECRET_KEY 
RUN python3 manage.py collectstatic --no-input

# Run the image as a non-root user
RUN adduser --disabled-password --gecos "" django
USER django
CMD waitress-serve --port=$PORT candlemaking_corner_31797.wsgi:application
```

```dockerfile
FROM nginx:stable-alpine

# System dependencies
RUN apk add -U --no-cache curl grep && rm -rf /var/www/localhost

# Dumb init s6
ADD https://github.com/just-containers/s6-overlay/releases/download/v2.1.0.1/s6-overlay-amd64.tar.gz /tmp/
RUN gunzip -c /tmp/s6-overlay-amd64.tar.gz | tar -xf - -C /
ENTRYPOINT ["/init"]

COPY files/ /

# Quality of life
HEALTHCHECK --interval=5s --timeout=2s CMD curl -f http://127.0.0.1/ || exit 1
```

```dockerfile
ENV LANG C.UTF-8

# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
RUN { \
		echo '#!/bin/sh'; \
		echo 'set -e'; \
		echo; \
		echo 'dirname "$(dirname "$(readlink -f "$(which javac || which java)")")"'; \
	} > /usr/local/bin/docker-java-home \
	&& chmod +x /usr/local/bin/docker-java-home
ENV JAVA_HOME /usr/lib/jvm/java-1.7-openjdk
ENV PATH $PATH:/usr/lib/jvm/java-1.7-openjdk/jre/bin:/usr/lib/jvm/java-1.7-openjdk/bin

RUN set -x \
	&& apk add --no-cache \
		openjdk7 \
	&& [ "$JAVA_HOME" = "$(docker-java-home)" ]

CMD ["echo","'No CMD command was set in Dockerfile! Details about CMD command could be found in Dockerfile Guide section in our Docs. Here's the link: https://balena.io/docs"]

RUN [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \nArchitecture: ARM v7 \nOS: Alpine Linux 3.14 \nVariant: build variant \nDefault variable(s): UDEV=off \nThe following software stack is preinstalled: \nOpenJDK v7-jdk \nExtra features: \n- Easy way to install packages with `install_packages <package-name>` command \n- Run anywhere with cross-build feature  (for ARM only) \n- Keep the container idling with `balena-idle` command \n- Show base image details with `balena-info` command' > /.balena/messages/image-info
```

```dockerfile
# AUTOGENERATED FILE
FROM balenalib/via-vab820-quad-fedora:30-build

# http://bugs.python.org/issue19846
# > At the moment, setting "LANG=C" on a Linux system *fundamentally breaks Python 3*, and that's not OK.
ENV LANG C.UTF-8

RUN dnf install -y \
		python3-pip \
		python3-dbus \
	&& dnf clean all

# install "virtualenv", since the vast majority of users of this image will want it
RUN pip3 install -U --no-cache-dir --ignore-installed pip setuptools \
	&& pip3 install --no-cache-dir virtualenv

RUN [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'As of January 1st, 2020, Python 2 was end-of-life, we will change the latest tag for Balenalib Python base image to Python 3.x and drop support for Python 2 soon. So after 1st July, 2020, all the balenalib Python latest tag will point to the latest Python 3 version and no changes, or fixes will be made to balenalib Python 2 base image. If you are using Python 2 for your application, please upgrade to Python 3 before 1st July.' > /.balena/messages/python-deprecation-warning

CMD ["echo","'No CMD command was set in Dockerfile! Details about CMD command could be found in Dockerfile Guide section in our Docs. Here's the link: https://balena.io/docs"]

 RUN curl -SLO "https://raw.githubusercontent.com/balena-io-library/base-images/8accad6af708fca7271c5c65f18a86782e19f877/scripts/assets/tests/test-stack@python.sh" \
  && echo "Running test-stack@python" \
  && chmod +x test-stack@python.sh \
  && bash test-stack@python.sh \
  && rm -rf test-stack@python.sh 

RUN [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \nArchitecture: ARM v7 \nOS: Fedora 30 \nVariant: build variant \nDefault variable(s): UDEV=off \nThe following software stack is preinstalled: \nPython v3.7.7, Pip v20.0.2, Setuptools v46.1.3 \nExtra features: \n- Easy way to install packages with `install_packages <package-name>` command \n- Run anywhere with cross-build feature  (for ARM only) \n- Keep the container idling with `balena-idle` command \n- Show base image details with `balena-info` command' > /.balena/messages/image-info

RUN echo $'#!/bin/sh.real\nbalena-info\nrm -f /bin/sh\ncp /bin/sh.real /bin/sh\n/bin/sh "$@"' > /bin/sh-shim \
	&& chmod +x /bin/sh-shim \
	&& cp /bin/sh /bin/sh.real \
	&& mv /bin/sh-shim /bin/sh
```

```dockerfile
################################################################################
# BASE IMAGE
################################################################################
FROM ubuntu:15.04

ENV NOTIFY_API_VERSION master

################################################################################
# ADD Key PHP-7
################################################################################
RUN echo "deb http://packages.dotdeb.org jessie all" > /etc/apt/sources.list.d/dotdeb.list
COPY dotdeb.gpg /tmp/
RUN apt-key add /tmp/dotdeb.gpg

################################################################################
# ADD Key MONGO DB
################################################################################
RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 7F0CEB10
```

```dockerfile
FROM  tiangolo/uwsgi-nginx-flask:latest


COPY . ./

ENV PORT 8080

CMD ["python", "name.py"]
```

```dockerfile
wget=1.17.1-1ubuntu1.5 \
        make=4.1-6 \
        autotools-dev=20150820.1 \
        autoconf=2.69-9 \
        libtool=2.4.6-0.1 \
        xz-utils=5.1.1alpha+20120614-2ubuntu2 \
        libssl-dev=1.0.2g-1ubuntu4.16 \
        libssl1.0.0=1.0.2g-1ubuntu4.16 \
        openssl=1.0.2g-1ubuntu4.16 \
        zlib1g-dev=1:1.2.8.dfsg-2ubuntu4.3 \
        libffi-dev=3.2.1-4 \
        libncurses5-dev=6.0+20160213-1ubuntu1 \
        libsqlite3-dev=3.11.0-1ubuntu1.4 \
        libusb-1.0-0-dev=2:1.0.20-1 \
        libudev-dev=229-4ubuntu21.28 \
        gettext=0.19.7-2ubuntu3.1 \
        libzbar0=0.10+doc-10ubuntu1  \
        libdbus-1-3=1.10.6-1ubuntu3.4 \
        libxkbcommon-x11-0=0.5.0-1ubuntu2.1 \
        && \
    rm -rf /var/lib/apt/lists/* && \
    apt-get autoremove -y && \
    apt-get clean
```

```dockerfile
FROM golang:alpine as builder

WORKDIR /go/src/github.com/jizi19911101/gin-vue-admin/server
COPY . .

RUN go env -w GO111MODULE=on
RUN go env -w GOPROXY=https://goproxy.cn,direct
RUN go env -w CGO_ENABLED=0
RUN go env
RUN go mod tidy
RUN go build -o server .


FROM alpine:latest
LABEL MAINTAINER="SliverHorn@sliver_horn@qq.com"

WORKDIR /go/src/github.com/jizi19911101/gin-vue-admin/server

COPY --from=0 /go/src/github.com/jizi19911101/gin-vue-admin/server ./
COPY ./config.docker.yaml ./config.yaml
RUN mv /etc/apk/repositories /etc/apk/repositories_bak
RUN touch /etc/apk/repositories
RUN echo 'http://mirrors.aliyun.com/alpine/v3.12/main/'  >> /etc/apk/repositories
RUN echo 'http://mirrors.aliyun.com/alpine/v3.12/community' >> /etc/apk/repositories
RUN apk update && apk add curl openssh-client busybox-extras vim
EXPOSE 8888

ENTRYPOINT ./server
```

```dockerfile
ARG BUILD_ARCH=amd64

# Environment variables
ENV \
    HOME="/root" \
    LANG="C.UTF-8" \
    PS1="$(whoami)@$(hostname):$(pwd)$ " \
    TERM="xterm"

RUN \
  export DEBIAN_FRONTEND=noninteractive \
  && \
  apt-get update && apt-get install -q -y --no-install-recommends \
  bc \
```

```dockerfile
ENV TZ=Asia/Singapore
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

# Keeps Python from generating .pyc files in the container
ENV PYTHONDONTWRITEBYTECODE 1

# Turns off buffering for easier container logging
ENV PYTHONUNBUFFERED 1

#Downloading dependencies 
RUN apt-get update \
&& apt-get upgrade -y \
&& apt-get install -y \
&& apt-get -y install apt-utils gcc libpq-dev libsndfile1 ffmpeg python3-pandas

#Installing dependencies
RUN pip install -r requirements.txt

# Switch back to jovyan to avoid accidental container runs as root
USER $NB_UID
WORKDIR /manifest_preprocessing
```

```dockerfile
grep -qE '^SYS_PREFIX=\$\{RABBITMQ_HOME\}$' "$RABBITMQ_HOME/sbin/rabbitmq-defaults" && \

    sed -ri 's!^(SYS_PREFIX=).*$!\1!' "$RABBITMQ_HOME/sbin/rabbitmq-defaults" && \

    grep -qE '^SYS_PREFIX=$' "$RABBITMQ_HOME/sbin/rabbitmq-defaults" && \

    groupadd --system rabbitmq && \

    adduser -u 1001 -r -c "RabbitMQ User" -d /var/lib/rabbitmq -g rabbitmq rabbitmq && \

    mkdir -p /var/lib/rabbitmq /etc/rabbitmq && \

    mv *.ez ${RABBITMQ_HOME}/plugins && \

    ${RABBITMQ_HOME}/sbin/rabbitmq-plugins enable autocluster --offline && \

    chown -R 1001:0 /var/lib/rabbitmq /etc/rabbitmq ${RABBITMQ_HOME}/plugins && \

    chmod -R g=u /var/lib/rabbitmq /etc/rabbitmq && \

    rm -rf /var/lib/rabbitmq/.erlang.cookie && \

    ln -sf "$RABBITMQ_HOME/plugins" /plugins



COPY run /usr/local/bin/

USER 1001

ENV PATH=$RABBITMQ_HOME/sbin:$PATH

ENTRYPOINT ["/usr/local/bin/run"]



EXPOSE 4369 5671 5672 25672

CMD ["rabbitmq-server"]
```

```html
<li class="uk-link-toggle">
                                    <a class="uk-card uk-card-hover uk-border-rounded uk-link-heading" href="properties.html"><span class="uk-padding-small">Properties</span></a>
                                </li>
                                <li class="uk-link-toggle">
                                    <a class="uk-card uk-card-hover uk-border-rounded uk-link-heading" href="stats.html"><span class="uk-padding-small">Stats</span></a>
                                </li>
                            </ul>
                        </div>
                    </li>
                </ul>
                <ul class="uk-navbar-nav">
                    <!-- MENU CONTENTS :: START -->
                            <li class="noprint">
                                <a class="uk-button uk-card uk-card-hover uk-link-heading" href="#">Contents</a>
                                <div class="uk-navbar-dropdown">
                                    <ul class="uk-nav uk-navbar-dropdown-nav">
<ul class="uk-nav uk-nav-default">
<li><a class="uk-link-heading" href="#_description">Description</a></li>
<li><a class="uk-link-heading" href="#_references">References</a></li>
</ul>
                                    </ul>
                                </div>
                            </li>

                    <!-- MENU CONTENTS :: END -->
                </ul>
            </div>
            <div class="uk-navbar-center">
                <!-- DOCUMENT TITLE :: START -->
                <ul class="uk-navbar-nav">
                    <li>
                       <a href="#"><span class="uk-text-bolder uk-text-truncate">My Mind</span></a><!-- My_Mind.adoc -->
                        <div class="uk-navbar-dropdown">
                            <ul class="uk-nav uk-navbar-dropdown-nav">
                                <li>
                                    <!-- View Metadata Button :: START -->
                                    <a class="uk-button uk-card uk-card-hover uk-button uk-card uk-card-hover uk-border-rounded uk-link-heading" href="#modal-full-metadata" uk-toggle><span class="">Metadata</span></a>
                                    <div id="modal-full-metadata" class="uk-modal-full" uk-modal>
                                        <div class="uk-modal-dialog">
                                            <button class="uk-modal-close-full uk-close-large uk-background-muted" type="button" uk-close></button>
                                            <div class="uk-grid-collapse uk-child-width-expand@s uk-flex-middle" uk-grid>
                                                <div class="uk-padding-large uk-background-muted">
                                                    <div class="uk-text-lead uk-text-center uk-text-danger">Metadata</div>
<!-- METADATA :: START -->
        <table class="uk-table uk-table-divider uk-table-striped uk-table-hover uk-table-small uk-card uk-card-hover">
            <tr>
                <td>
                    <a class="uk-link-text" href="Language.html">
                        <div class="uk-text-bolder uk-text-secondary uk-text-bold uk-text-meta">Language</div>
                    </a>
                </td>
                <td><div class="uk-flex uk-flex-row uk-flex-wrap uk-text-meta"><div class="uk-link-toggle uk-text-muted">
    <a class="uk-link-heading" href="Language_Javascript.html">
        <span class="uk-padding-small">Javascript</span>
    </a>
</div>
</div></td>
            </tr>
            <tr>
                <td>
                    <a class="uk-link-text" href="License.html">
                        <div class="uk-text-bolder uk-text-secondary uk-text-bold uk-text-meta">License</div>
                    </a>
                </td>
                <td><div class="uk-flex uk-flex-row uk-flex-wrap uk-text-meta"><div class="uk-link-toggle uk-text-muted">
    <a class="uk-link-heading" href="License_MIT.html">
        <span class="uk-padding-small">MIT</span>
    </a>
</div>
</div></td>
            </tr>
            <tr>
                <td>
                    <a class="uk-link-text" href="Topic.html">
                        <div class="uk-text-bolder uk-text-secondary uk-text-bold uk-text-meta">Topic</div>
                    </a>
                </td>
                <td><div class="uk-flex uk-flex-row uk-flex-wrap uk-text-meta"><div class="uk-link-toggle uk-text-muted">
    <a class="uk-link-heading" href="Topic_Knowledge_Management_Tools.html">
        <span class="uk-padding-small">Knowledge Management Tools</span>
    </a>
</div>
</div></td>
            </tr>
        <tr>
            <td>
                <div class="uk-text-bolder uk-text-secondary uk-text-bold uk-text-meta">Timestamp</div>
            </td>
            <td>
                <div class="uk-flex uk-flex-row uk-flex-wrap uk-text-meta uk-padding-small uk-padding-remove-top uk-padding-remove-bottom">2020-07-27 19:33:47</div>
            </td>
        </tr>
        </table>
<!-- METADATA :: END -->
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <!-- View Metadata Button :: END -->
                                </li>
                                <li>
                                    <!-- View Asciidoc Source Button :: START -->
                                    <a class="uk-button uk-card uk-card-hover uk-button uk-card uk-card-hover uk-border-rounded uk-link-heading" href="#modal-full-source" uk-toggle><span class="">Source</span></a>
                                    <div id="modal-full-source" class="uk-modal-full" uk-modal>
                                        <div class="uk-modal-dialog">
                                            <button class="uk-modal-close-full uk-close-large uk-background-muted" type="button" uk-close></button>
                                            <div class="uk-grid-collapse uk-child-width-expand@s uk-flex-middle" uk-grid>
                                                <div class="uk-padding-large uk-background-muted">
                                                    <div class="uk-text-lead uk-text-center uk-text-danger">Source</div>
                                                    <div class="uk-text-lead">My_Mind.adoc&nbsp;<a onclick="copyToClipboard()" class="uk-icon-link uk-margin-small-right" uk-icon="copy"></a></div>
                                                    <textarea id="source-code" class="uk-width-1-1 uk-height-viewport">= My Mind

:Name:          My Mind
:Language:      Javascript
:License:       MIT
:Topic:         Knowledge Management Tools
:Category:      
:Subcategory:   

// END-OF-HEADER. DO NOT MODIFY OR DELETE THIS LINE

== Description

Web application for creating and managing mind maps.

== References

* Website: https://github.com/ondras/my-mind[My Mind]
* Source code: []
* Demo: https://my-mind.github.io/?url=examples%2Ffeatures.mymind[https://my-mind.github.io/?url=examples%2Ffeatures.mymind]
</textarea>
                                                </div>
                                            </div>
                                        </div>
                                    </div> <!-- View Source Button :: END -->
                                </li>
                            </ul>
                        </div>
                    </li>
                </u>
                <!-- DOCUMENT TITLE :: END -->
            </div>
            <div class="uk-navbar-right noprint">
                <ul class="uk-navbar-nav">
                    <li>
                        <a class="uk-button uk-card uk-card-hover uk-link-heading" href="#">About</a>
                        <div class="uk-navbar-dropdown">
                            <ul class="uk-nav uk-navbar-dropdown-nav">
                                <li class="uk-link-toggle">
                                    <a class="uk-card uk-card-hover uk-border-rounded uk-link-heading" href="about_app.html"><span class="uk-padding-small">About this app</span></a>
                                </li>
                                <li class="uk-link-toggle">
                                    <a class="uk-card uk-card-hover uk-border-rounded uk-link-heading" href="about_theme.html"><span class="uk-padding-small">About this theme</span></a>
                                </li>
                                <li class="uk-nav-divider"></li>
                                <li class="uk-link-toggle">
```

```html
<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <title>Estructuras</title>
  <base href="/">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="assets/bootstrap/css/bootstrap2.min.css">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i">
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.12.0/css/all.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="assets/fonts/fontawesome5-overrides.min.css">
    <link rel="stylesheet" href="assets/bootstrap/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Lato:300,400,700,300italic,400italic,700italic">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/simple-line-icons/2.4.1/css/simple-line-icons.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.5.2/animate.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.6.0/css/bootstrap.min.css">
    <link rel="stylesheet" href="assets/bootstrap/css/Highlight-Clean.css">
    <link rel="stylesheet" href="assets/bootstrap/css/styles.min.css">
    
</head>
<body class="bg-gradient-primary">
  <app-root></app-root>
<!-- JS, Popper.js, and jQuery -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.6.0/js/bootstrap.bundle.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.bundle.min.js"></script>
<script src="assets/js/bs-init.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-easing/1.4.1/jquery.easing.js"></script>
<script src="assets/js/theme.js"></script>
<!--<script src="./assets/js/listaSimple.js"></script>-->
</body>
</html>
```

```html
<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Meu primeiro excercício</title>
</head>
<body>
    <h1>Olá, Mundo!</h1>
    <hr>
    <p>Esse é o meu primeiro documento HTML! Estou muito feliz!</p>
    <p>Este é um momento único! Estou criando um site!</p>
</body>
</html>
```

```html
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>metacoq-translations: Not compatible</title>
    <link rel="shortcut icon" type="image/png" href="../../../../../favicon.png" />
    <link href="../../../../../bootstrap.min.css" rel="stylesheet">
    <link href="../../../../../bootstrap-custom.css" rel="stylesheet">
    <link href="//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css" rel="stylesheet">
    <script src="../../../../../moment.min.js"></script>
    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
```

```html
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_26) on Sat Nov 05 23:16:27 EST 2011 -->
<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<TITLE>
JavadocTagInfo.Type (checkstyle 5.5 API)
</TITLE>

<META NAME="date" CONTENT="2011-11-05">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../../stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="JavadocTagInfo.Type (checkstyle 5.5 API)";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
```

```html
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=US-ASCII">
<title>Permutation algorithms</title>
<link rel="stylesheet" href="../../../../../../../doc/html/boostbook.css" type="text/css">
<meta name="generator" content="DocBook XSL Stylesheets V1.75.2">
<link rel="home" href="../../../index.html" title="Chapter&#160;1.&#160;Range 2.0">
<link rel="up" href="../algorithms.html" title="Range Algorithm">
<link rel="prev" href="heap/sort_heap.html" title="sort_heap">
<link rel="next" href="permutation/next_permutation.html" title="next_permutation">
</head>
<body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF">
<table cellpadding="2" width="100%"><tr>
<td valign="top"><img alt="Boost C++ Libraries" width="277" height="86" src="../../../../../../../boost.png"></td>
<td align="center"><a href="../../../../../../../index.html">Home</a></td>
<td align="center"><a href="../../../../../../libraries.htm">Libraries</a></td>
<td align="center"><a href="http://www.boost.org/users/people.html">People</a></td>
<td align="center"><a href="http://www.boost.org/users/faq.html">FAQ</a></td>
<td align="center"><a href="../../../../../../../more/index.htm">More</a></td>
</tr></table>
<hr>
<div class="spirit-nav">
<a accesskey="p" href="heap/sort_heap.html"><img src="../../../../../../../doc/html/images/prev.png" alt="Prev"></a><a accesskey="u" href="../algorithms.html"><img src="../../../../../../../doc/html/images/up.png" alt="Up"></a><a accesskey="h" href="../../../index.html"><img src="../../../../../../../doc/html/images/home.png" alt="Home"></a><a accesskey="n" href="permutation/next_permutation.html"><img src="../../../../../../../doc/html/images/next.png" alt="Next"></a>
</div>
<div class="section" title="Permutation algorithms">
<div class="titlepage"><div><div><h4 class="title">
<a name="range.reference.algorithms.permutation"></a><a class="link" href="permutation.html" title="Permutation algorithms"> Permutation
        algorithms</a>
</h4></div></div></div>
<div class="toc"><dl>
<dt><span class="section"><a href="permutation/next_permutation.html">
          next_permutation</a></span></dt>
<dt><span class="section"><a href="permutation/prev_permutation.html">
          prev_permutation</a></span></dt>
</dl></div>
</div>
<table xmlns:rev="http://www.cs.rpi.edu/~gregod/boost/tools/doc/revision" width="100%"><tr>
<td align="left"></td>
<td align="right"><div class="copyright-footer">Copyright &#169; 2003 -2010 Thorsten Ottosen, Neil Groves<p>
        Distributed under the Boost Software License, Version 1.0. (See accompanying
        file LICENSE_1_0.txt or copy at <a href="http://www.boost.org/LICENSE_1_0.txt" target="_top">http://www.boost.org/LICENSE_1_0.txt</a>)
      </p>
</div></td>
</tr></table>
<hr>
<div class="spirit-nav">
<a accesskey="p" href="heap/sort_heap.html"><img src="../../../../../../../doc/html/images/prev.png" alt="Prev"></a><a accesskey="u" href="../algorithms.html"><img src="../../../../../../../doc/html/images/up.png" alt="Up"></a><a accesskey="h" href="../../../index.html"><img src="../../../../../../../doc/html/images/home.png" alt="Home"></a><a accesskey="n" href="permutation/next_permutation.html"><img src="../../../../../../../doc/html/images/next.png" alt="Next"></a>
</div>
</body>
</html>
```

```html
<div data-page="skins-tracksuitpantsyellow" class="page">
  <div class="navbar">
    <div class="navbar-inner">
      <div class="left"><a href="index.html" class="back link icon-only"><i class="icon icon-back"></i></a></div>
      <div class="center">
        <span class="pagetitle" data-i18n="tracksuitpantsyellow">Tracksuit Pants (Yellow)</span>
      </div>
      <div class="right"><a href="#" class="open-panel link icon-only"><i class="icon icon-bars"></i></a></div>
    </div>
  </div>
  <!--/navbar-->
  <div class="page-content">
    <div class="singleItem skins tracksuitpantsyellow"></div>
  </div><!--/page-content-->
</div><!--/page-->
```

```html
<!DOCTYPE html>
<!--[if IE 8]><html class="no-js lt-ie9" lang="en" > <![endif]-->
<!--[if gt IE 8]><!--> <html class="no-js" lang="en" > <!--<![endif]-->
<head>
  <meta charset="utf-8">
  
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <title>OpenMM &mdash; UIBCDF Tools 0.1 documentation</title>
  

  
  
  
  

  
  <script type="text/javascript" src="../_static/js/modernizr.min.js"></script>
  
    
      <script type="text/javascript" id="documentation_options" data-url_root="../" src="../_static/documentation_options.js"></script>
        <script src="../_static/jquery.js"></script>
        <script src="../_static/underscore.js"></script>
        <script src="../_static/doctools.js"></script>
        <script src="../_static/language_data.js"></script>
        <script crossorigin="anonymous" integrity="sha256-Ae2Vz/4ePdIu6ZyI/5ZGsYnb+m0JlOmKPjt6XZ9JJkA=" src="https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.4/require.min.js"></script>
    
    <script type="text/javascript" src="../_static/js/theme.js"></script>

    

  
  <link rel="stylesheet" href="../_static/css/theme.css" type="text/css" />
  <link rel="stylesheet" href="../_static/pygments.css" type="text/css" />
  <link rel="stylesheet" href="../_static/custom.css" type="text/css" />
    <link rel="index" title="Index" href="../genindex.html" />
    <link rel="search" title="Search" href="../search.html" />
    <link rel="next" title="uibcdf_tools.openmm.available_platforms" href="_autosummary/uibcdf_tools.openmm.available_platforms.html" />
    <link rel="prev" title="Color maps" href="../contents/matplotlib/ColorMaps.html" /> 
</head>

<body class="wy-body-for-nav">

   
  <div class="wy-grid-for-nav">
    
    <nav data-toggle="wy-nav-shift" class="wy-nav-side">
      <div class="wy-side-scroll">
        <div class="wy-side-nav-search" >
          

          
            <a href="../index.html" class="icon icon-home"> UIBCDF Tools
          

          
          </a>

          
            
            
          

          
<div role="search">
  <form id="rtd-search-form" class="wy-form" action="../search.html" method="get">
    <input type="text" name="q" placeholder="Search docs" />
    <input type="hidden" name="check_keywords" value="yes" />
    <input type="hidden" name="area" value="default" />
  </form>
</div>

          
        </div>

        <div class="wy-menu wy-menu-vertical" data-spy="affix" role="navigation" aria-label="main navigation">
          
            
            
              
            
            
              <p class="caption"><span class="caption-text">Installation</span></p>
<ul>
<li class="toctree-l1"><a class="reference internal" href="../Installation.html">Installation</a></li>
</ul>
<p class="caption"><span class="caption-text">Matplotlib</span></p>
<ul>
<li class="toctree-l1"><a class="reference internal" href="../contents/matplotlib/ColorMaps.html">Color maps</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../contents/matplotlib/ColorMaps.html#UIBCDF-Color-Palettes">UIBCDF Color Palettes</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../contents/matplotlib/ColorMaps.html#Palette_1">Palette_1</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../contents/matplotlib/ColorMaps.html#id1">Color maps</a></li>
</ul>
</li>
</ul>
<p class="caption"><span class="caption-text">API Documentation</span></p>
<ul class="current">
<li class="toctree-l1 current"><a class="current reference internal" href="#">OpenMM</a><ul>
<li class="toctree-l2"><a class="reference internal" href="_autosummary/uibcdf_tools.openmm.available_platforms.html">uibcdf_tools.openmm.available_platforms</a></li>
<li class="toctree-l2"><a class="reference internal" href="_autosummary/uibcdf_tools.openmm.loading_failures.html">uibcdf_tools.openmm.loading_failures</a></li>
</ul>
</li>
</ul>

            
          
        </div>
      </div>
    </nav>

    <section data-toggle="wy-nav-shift" class="wy-nav-content-wrap">

      
      <nav class="wy-nav-top" aria-label="top navigation">
        
          <i data-toggle="wy-nav-top" class="fa fa-bars"></i>
```

```html
<!DOCTYPE html>
<html>
<head>
        <title>Visualizador de Datos de Diagnostico de Eddy Covariance Processing System 1.0 </title>
        <meta charset="UTF-8"> 
        <script src="./js/plotly-latest.min.js"></script>
        <script src="./js/MathJax.js?config=TeX-AMS-MML_SVG"></script>
        <script src="./js/TeX-AMS-MML_SVG.js?V=2.7.4"></script>
        <script src="./js/bootstrap.min.js"></script>
        <script src="./js/jquery-3.0.0.min.js"></script>
        <link href="./css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css">
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
        <style>
        	h1,h2,h3	{ font-weight:bold; }
			h1		{ font-size:24px; }
			h2		{ font-size:16px; border-bottom:1px solid #ccc; padding:0 0 2px 0; margin:0 0 5px 0; }
			h3		{ font-size:13px; margin:0 0 2px 0; }
			.nav-tabs { border-bottom: 2px solid #DDD; }
```

```html
<tr>
      <td> </td>
      <td>xxxx</td>
    </tr>
  </tbody>
</table>

<!-- isi -->

<h4 id="2017-04-27-retrieve">2017 04 27 Retrieve</h4>
<blockquote>
  <p><b>[Manajemen Bhayangkara FC memastikan marquee player Paulo Sergio belum bisa dimainkan melawan PS TNI pada pekan ketiga Liga 1 2017]</b> Dengarnya kan dia pernah main sama Ronaldo ketika junior. Makanya, sudah tidak sabar ingin melihat skillnya.</p>
</blockquote>

    
      <footer class="site-footer">	  
        Beta 2020. We are creating footballer's biography profile based on their statement.
      </footer>
    </main>
  </body>
</html>
```

```html
<tr>
<td>
                <p>
                  <a class="link" href="local__stream_protocol/protocol.html" title="local::stream_protocol::protocol"><span class="bold"><strong>protocol</strong></span></a>
                </p>
              </td>
<td>
                <p>
                  Obtain an identifier for the protocol.
                </p>
              </td>
</tr>
<tr>
<td>
                <p>
                  <a class="link" href="local__stream_protocol/type.html" title="local::stream_protocol::type"><span class="bold"><strong>type</strong></span></a>
                </p>
              </td>
<td>
                <p>
                  Obtain an identifier for the type of the protocol.
                </p>
              </td>
</tr>
</tbody>
</table></div>
<p>
        The <a class="link" href="local__stream_protocol.html" title="local::stream_protocol"><code class="computeroutput"><span class="identifier">local</span><span class="special">::</span><span class="identifier">stream_protocol</span></code></a> class contains flags
        necessary for stream-oriented UNIX domain sockets.
      </p>
<h5>
<a name="boost_asio.reference.local__stream_protocol.h2"></a>
        <span class="phrase"><a name="boost_asio.reference.local__stream_protocol.thread_safety"></a></span><a class="link" href="local__stream_protocol.html#boost_asio.reference.local__stream_protocol.thread_safety">Thread
        Safety</a>
      </h5>
<p>
        <span class="emphasis"><em>Distinct</em></span> <span class="emphasis"><em>objects:</em></span> Safe.
      </p>
<p>
        <span class="emphasis"><em>Shared</em></span> <span class="emphasis"><em>objects:</em></span> Safe.
      </p>
<h5>
<a name="boost_asio.reference.local__stream_protocol.h3"></a>
        <span class="phrase"><a name="boost_asio.reference.local__stream_protocol.requirements"></a></span><a class="link" href="local__stream_protocol.html#boost_asio.reference.local__stream_protocol.requirements">Requirements</a>
      </h5>
<p>
        <span class="emphasis"><em>Header: </em></span><code class="literal">boost/asio/local/stream_protocol.hpp</code>
      </p>
<p>
        <span class="emphasis"><em>Convenience header: </em></span><code class="literal">boost/asio.hpp</code>
      </p>
</div>
<table xmlns:rev="http://www.cs.rpi.edu/~gregod/boost/tools/doc/revision" width="100%"><tr>
<td align="left"></td>
<td align="right"><div class="copyright-footer">Copyright &#169; 2003-2017 Christopher M. Kohlhoff<p>
        Distributed under the Boost Software License, Version 1.0. (See accompanying
        file LICENSE_1_0.txt or copy at <a href="http://www.boost.org/LICENSE_1_0.txt" target="_top">http://www.boost.org/LICENSE_1_0.txt</a>)
      </p>
</div></td>
</tr></table>
<hr>
<div class="spirit-nav">
<a accesskey="p" href="local__datagram_protocol/type.html"><img src="../../../../doc/src/images/prev.png" alt="Prev"></a><a accesskey="u" href="../reference.html"><img src="../../../../doc/src/images/up.png" alt="Up"></a><a accesskey="h" href="../../boost_asio.html"><img src="../../../../doc/src/images/home.png" alt="Home"></a><a accesskey="n" href="local__stream_protocol/acceptor.html"><img src="../../../../doc/src/images/next.png" alt="Next"></a>
</div>
</body>
</html>
```

```html
<div
    class="tag"
    [style.backgroundColor]="backgroundColor"
    (dblclick)="edit($event)"
>
    <div
        *ngIf="leftContent"
        polymorpheus-outlet
        class="left-content"
        [content]="leftContent"
    ></div>
    <span automation-id="tui-tag__text" class="text">{{ displayText }}</span>
    <tui-loader
        *ngIf="showLoader"
        class="icon icon_loader"
        [inheritColor]="true"
        [size]="loaderSize"
    ></tui-loader>
    <tui-svg
        *ngIf="canRemove"
        tuiPreventDefault="mousedown"
        automation-id="tui-tag__remove"
        src="tuiIconCloseLarge"
        class="icon"
        (click)="remove($event)"
    ></tui-svg>
</div>
<input
    *ngIf="editing"
    #input
    automation-id="tui-tag__edit"
    type="text"
    class="edit"
    [attr.maxLength]="maxLength"
    [ngModel]="editedText"
    (ngModelChange)="onInput($event)"
    (blur)="onBlur()"
    (keydown)="onKeyDown($event)"
/>
```

```html
</header> <!-- Header End -->   	

   	<div  id="main" class="row">

	   	<div class="twelve columns">
	   			
	   		<h1>We are currently working on something awesome. Stay tuned!</h1>

	   		<p></p>

	   		<h5>Time Left Until Launching</h5>

	   		<div id="counter" class="cf">
	   			<span>30 <em>days</em></span> 
 					<span>12 <em>hours</em></span>
					<span>50 <em>minutes</em></span>
 					<span>33 <em>seconds</em></span> 
   			</div>					

   			<!-- Begin MailChimp Signup Form -->
	         <div id="mc_embed_signup">
	         </div>

	         <ul class="social">
	            <li><a href="#"><i class="fa fa-facebook"></i></a></li>
	            <li><a href="#"><i class="fa fa-twitter"></i></a></li>
	            <li><a href="#"><i class="fa fa-instagram"></i></a></li>

            </ul>

         </div> 

      </div> <!-- main end -->    	

   </section> <!-- end intro section -->


   <!-- About Section
   ================================================== -->
   <section id="about">

      <div class="row section-header">

      	<div class="twelve columns">	

      		<div class="icon-wrap">
            	<i class="fa fa-group"></i>
         	</div>

	         <h1>About Us.</h1>

	         <p class="lead">
	         </p>

         </div>

      </div> <!-- end section-header -->             	

      <div class="row section-content">
				
			<div class="six columns">
		      <h3>Our Process.</h3>

		      <p>
		      </p>
	      </div>

	      <div class="six columns">
		      <h3>Our Approach.</h3>

		      <p>
		      </p>
	      </div>            

      </div> <!-- end section-content -->  

      <div class="row section-content">
				
			<div class="six columns">
```

```html
<html>
  <head>
  	<meta charset="utf-8">
  	<meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>index</title>
  </head>
 
  <body>   
    <p id="text"></p>
    <!-- for this next line to work, your pubspec.yaml file must have a dependency on 'browser' -->
    <script src="packages/browser/dart.js"></script>
  </body>
</html>
```

```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Yagi-Uda antenna calculator</title>
    <link rel="stylesheet" href="../style.css">
    <script src="../common.js"></script>
</head>
<body>
    <p class="navbar"><a href="../" class="backbutton">&larr;</a></p>
    <div id="main">
        <noscript>
            <p><b>you need to enable javascript for this page to work!</b></p>
            <p>don't worry, I'll never track you. there is no hidden obfuscated code here.</p>
        </noscript>

        <h1>Yagi-Uda antenna calculator</h1>

        <img src="diagram.svg" alt="Yagi-Uda antenna diagram">

        <p>
            <label for="frequency">Frequency [MHz]: </label>
            <input type="number" id="frequency" class="val" min="1" value="144">
            <label for="director-count">Director count: </label>
            <input type="number" id="director-count" class="val" min="1" value="1" style="width: 3em;">
        </p>

        <div id="results">
            <p>Wavelength (&#955;): <span id="wavelength" class="val">N m = N*100 cm</span></p>
            <table>
            <thead>
                <tr><th colspan="2">Lengths</th></tr>
            </thead>
            <tbody>
                <tr><td>Reflector (0.50&#955;)</td> <td id="element-r" class="val">N cm</td></tr>
```

```html
<p style="color:#121214;font-size:14px;">{% trans "Hi," %}</p>

<p style="font-size:14px;color:#434144;">
{% blocktrans %}{{ inviter }} revoked your access to {{ site_name }}.{% endblocktrans %}
</p>


{% endautoescape %}

{% endblock %}
```

```html
<html lang="en" class="js-focus-visible" data-js-focus-visible="">

<head>
    
    <meta charset="utf-8">
    <link rel="preconnect" href="https://fonts.gstatic.com">
    <link href="https://fonts.googleapis.com/css2?family=Encode+Sans:wght@200;400;700&amp;display=swap"
        rel="stylesheet">
    <link rel="icon" href="/favicon.ico">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css"
        integrity="sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2" crossorigin="anonymous">
        <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/5.15.1/d3.min.js"></script>

    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet">
    <link rel="stylesheet" href="styles/poncho.min.css">
    <link rel="stylesheet" href="styles/icono-arg.css">
    <link rel="stylesheet" href="styles/style.css">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="theme-color" content="#000000">
    <meta name="description" content="Web Lesa">
    <title>Lesa - test</title>

    

</head>

<body ng-app="genApp">
    <div id="root">
        <div class="bb-lavanda container-fluid">
            <div class="container">
                <div class="row">
                    <div class="col">
```

```html
<html>

<head>
<title>mgq: Minimal Gram task Queue</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link rel="icon" href="/favicon.ico" >
<link rel="Shortcut Icon" href="/favicon.ico" >
<meta name="keywords" content="like silk">

<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
```

```html
<!doctype html>
<html lang="en">
<head>
    <title>Code coverage report for components\modal\notification\</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../../../prettify.css" />
    <link rel="stylesheet" href="../../../base.css" />
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../../../sort-arrow-sprite.png);
        }
    </style>
</head>
<body>
<div class='wrapper'>
  <div class='pad1'>
    <h1>
      <a href="../../../index.html">all files</a> components/modal/notification/
    </h1>
    <div class='clearfix'>
      <div class='fl pad1y space-right2'>
        <span class="strong">14.81% </span>
        <span class="quiet">Statements</span>
        <span class='fraction'>4/27</span>
      </div>
      <div class='fl pad1y space-right2'>
        <span class="strong">0% </span>
        <span class="quiet">Branches</span>
        <span class='fraction'>0/2</span>
      </div>
      <div class='fl pad1y space-right2'>
        <span class="strong">9.09% </span>
        <span class="quiet">Functions</span>
        <span class='fraction'>1/11</span>
      </div>
      <div class='fl pad1y space-right2'>
        <span class="strong">14.81% </span>
        <span class="quiet">Lines</span>
        <span class='fraction'>4/27</span>
      </div>
    </div>
  </div>
  <div class='status-line low'></div>
<div class="pad1">
<table class="coverage-summary">
<thead>
<tr>
   <th data-col="file" data-fmt="html" data-html="true" class="file">File</th>
   <th data-col="pic" data-type="number" data-fmt="html" data-html="true" class="pic"></th>
   <th data-col="statements" data-type="number" data-fmt="pct" class="pct">Statements</th>
   <th data-col="statements_raw" data-type="number" data-fmt="html" class="abs"></th>
   <th data-col="branches" data-type="number" data-fmt="pct" class="pct">Branches</th>
   <th data-col="branches_raw" data-type="number" data-fmt="html" class="abs"></th>
   <th data-col="functions" data-type="number" data-fmt="pct" class="pct">Functions</th>
   <th data-col="functions_raw" data-type="number" data-fmt="html" class="abs"></th>
   <th data-col="lines" data-type="number" data-fmt="pct" class="pct">Lines</th>
   <th data-col="lines_raw" data-type="number" data-fmt="html" class="abs"></th>
</tr>
</thead>
<tbody><tr>
	<td class="file low" data-value="notification.controller.js"><a href="notification.controller.js.html">notification.controller.js</a></td>
	<td data-value="14.81" class="pic low"><div class="chart"><div class="cover-fill" style="width: 14%;"></div><div class="cover-empty" style="width:86%;"></div></div></td>
	<td data-value="14.81" class="pct low">14.81%</td>
	<td data-value="27" class="abs low">4/27</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="2" class="abs low">0/2</td>
	<td data-value="9.09" class="pct low">9.09%</td>
	<td data-value="11" class="abs low">1/11</td>
	<td data-value="14.81" class="pct low">14.81%</td>
	<td data-value="27" class="abs low">4/27</td>
	</tr>

</tbody>
</table>
</div><div class='push'></div><!-- for sticky footer -->
</div><!-- /wrapper -->
<div class='footer quiet pad2 space-top1 center small'>
  Code coverage
  generated by <a href="http://istanbul-js.org/" target="_blank">istanbul</a> at Fri Feb 23 2018 17:37:09 GMT+0545 (Nepal Standard Time)
</div>
</div>
<script src="../../../prettify.js"></script>
<script>
window.onload = function () {
        if (typeof prettyPrint === 'function') {
            prettyPrint();
        }
};
</script>
<script src="../../../sorter.js"></script>
</body>
</html>
```

```html
---
title: Baingan Bharta Recipe
layout: post
date: '2016-11-19 13:21:15 -0500'
type: post
parent_id: 0
published: true
image: assets/images/post-img/26JPFLEX4-articleLarge-508x680.jpg
status: publish
categories:
- Indian
- Veggies-Meatless
tags:
- eggplant
- Indian
meta:
  _wpas_done_all: 1
  _wpghs_github_path: _posts/2016-11-19-baingan-bharta-recipe-nyt-cooking.md
  _sha: 6e6d880a89612927e0eeb6cce0cd0e73d330a70a
  _edit_last: 1
  _thumbnail_id: 477
  _jetpack_dont_email_post_to_subs: 1
  _posts_by_tag_page_fields: a:2:{s:12:"widget_title";s:0:"";s:11:"widget_tags";s:0:"";}
  _yourls_url: http://7t3.link/71am4
  _yourls_clicks: 11
author:
  login: mkelley
  email: mkelley@mkelley.net
  display_name: Mike
  first_name: Mike
  last_name: Kelley
---

<blockquote>This recipe is by Mark Bittman and takes About 45 minutes. Tell us what you think of it at The New York Times - Dining - Food.</p></blockquote>
<p>Source: <em><a href="http://cooking.nytimes.com/recipes/1014830-baingan-bharta">Baingan Bharta Recipe - NYT Cooking</a></em></p>
```

```html
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc -->
<title>Uses of Class org.hibernate.exception.spi.AbstractSQLExceptionConversionDelegate (Hibernate JavaDocs)</title>
<link rel="stylesheet" type="text/css" href="../../../../../stylesheet.css" title="Style">
<script type="text/javascript" src="../../../../../script.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="Uses of Class org.hibernate.exception.spi.AbstractSQLExceptionConversionDelegate (Hibernate JavaDocs)";
        }
    }
    catch(err) {
    }
//-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../../overview-summary.html">Overview</a></li>
<li><a href="../package-summary.html">Package</a></li>
<li><a href="../../../../../org/hibernate/exception/spi/AbstractSQLExceptionConversionDelegate.html" title="class in org.hibernate.exception.spi">Class</a></li>
<li class="navBarCell1Rev">Use</li>
<li><a href="../../../../../overview-tree.html">Tree</a></li>
<li><a href="../../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../../index-all.html">Index</a></li>
<li><a href="../../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li>Prev</li>
<li>Next</li>
</ul>
<ul class="navList">
<li><a href="../../../../../index.html?org/hibernate/exception/spi/class-use/AbstractSQLExceptionConversionDelegate.html" target="_top">Frames</a></li>
```

```html
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>mathcomp-algebra: Not compatible</title>
    <link rel="shortcut icon" type="image/png" href="../../../../../favicon.png" />
    <link href="../../../../../bootstrap.min.css" rel="stylesheet">
    <link href="../../../../../bootstrap-custom.css" rel="stylesheet">
    <link href="//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css" rel="stylesheet">
    <script src="../../../../../moment.min.js"></script>
    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
  </head>
  <body>
    <div class="container">
      <div class="navbar navbar-default" role="navigation">
        <div class="container-fluid">
          <div class="navbar-header">
            <a class="navbar-brand" href="../../../../.."><i class="fa fa-lg fa-flag-checkered"></i> Coq bench</a>
          </div>
          <div id="navbar" class="collapse navbar-collapse">
            <ul class="nav navbar-nav">
              <li><a href="../..">clean / extra-dev</a></li>
              <li class="active"><a href="">dev / mathcomp-algebra - 1.8.0</a></li>
            </ul>
          </div>
        </div>
      </div>
      <div class="article">
        <div class="row">
          <div class="col-md-12">
            <a href="../..">« Up</a>
            <h1>
              mathcomp-algebra
              <small>
                1.8.0
                <span class="label label-info">Not compatible</span>
              </small>
            </h1>
```

```html
<!doctype html>
<html>
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Fictional University</title>
  <link href="https://fonts.googleapis.com/css?family=Roboto+Condensed:300,300i,400,400i,700,700i|Roboto:100,300,400,400i,700,700i" rel="stylesheet">
  <link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" integrity="sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN" crossorigin="anonymous">
  <link rel="stylesheet" href="style.css"/>
</head>
<body>
  
  <header class="site-header">
    <div class="container">
      <h1 class="school-logo-text float-left"><a href="#"><strong>Fictional</strong> University</a></h1>
      <span class="js-search-trigger site-header__search-trigger"><i class="fa fa-search" aria-hidden="true"></i></span>
      <i class="site-header__menu-trigger fa fa-bars" aria-hidden="true"></i>
      <div class="site-header__menu group">
```

```html
<!DOCTYPE HTML>
<!-- NewPage -->
<html lang="en">
<head>
    <!-- Generated by javadoc (11.0.5) on Mon May 04 17:03:47 PDT 2020 -->
    <title>S-Index</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <meta name="dc.created" content="2020-05-04">
    <link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
    <link rel="stylesheet" type="text/css" href="../jquery/jquery-ui.css" title="Style">
    <script type="text/javascript" src="../script.js"></script>
    <script type="text/javascript" src="../jquery/jszip/dist/jszip.min.js"></script>
    <script type="text/javascript" src="../jquery/jszip-utils/dist/jszip-utils.min.js"></script>
    <!--[if IE]>
    <script type="text/javascript" src="../jquery/jszip-utils/dist/jszip-utils-ie.min.js"></script>
    <![endif]-->
    <script type="text/javascript" src="../jquery/jquery-3.4.1.js"></script>
    <script type="text/javascript" src="../jquery/jquery-ui.js"></script>
</head>
<body>
<script type="text/javascript"><!--
try {
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title = "S-Index";
    }
} catch (err) {
}
//-->
var pathtoroot = "../";
var useModuleDirectories = true;
loadScripts(document, 'script');</script>
<noscript>
    <div>JavaScript is disabled on your browser.</div>
</noscript>
<header role="banner">
    <nav role="navigation">
        <div class="fixedNav">
            <!-- ========= START OF TOP NAVBAR ======= -->
            <div class="topNav"><a id="navbar.top">
                <!--   -->
            </a>
                <div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a>
                </div>
                <a id="navbar.top.firstrow">
                    <!--   -->
                </a>
                <ul class="navList" title="Navigation">
                    <li><a href="../index.html">Overview</a></li>
                    <li>Package</li>
                    <li>Class</li>
                    <li><a href="../overview-tree.html">Tree</a></li>
                    <li><a href="../deprecated-list.html">Deprecated</a></li>
                    <li class="navBarCell1Rev">Index</li>
                    <li><a href="../help-doc.html">Help</a></li>
                </ul>
            </div>
            <div class="subNav">
                <ul class="navList" id="allclasses_navbar_top">
                    <li><a href="../allclasses.html">All&nbsp;Classes</a></li>
                </ul>
                <ul class="navListSearch">
                    <li><label for="search">SEARCH:</label>
                        <input type="text" id="search" value="search" disabled="disabled">
                        <input type="reset" id="reset" value="reset" disabled="disabled">
                    </li>
                </ul>
                <div>
                    <script type="text/javascript"><!--
                    allClassesLink = document.getElementById("allclasses_navbar_top");
                    if (window == top) {
                        allClassesLink.style.display = "block";
                    } else {
                        allClassesLink.style.display = "none";
                    }
                    //-->
                    </script>
                    <noscript>
                        <div>JavaScript is disabled on your browser.</div>
                    </noscript>
                </div>
                <a id="skip.navbar.top">
                    <!--   -->
                </a></div>
            <!-- ========= END OF TOP NAVBAR ========= -->
        </div>
        <div class="navPadding">&nbsp;</div>
```

```html
@helper.form(action = routes.HomeController.loginSubmit()) {
		@CSRF.formField
		<div class="form-group">
			<input type="text" name="email" class="form-control input-xs" placeholder="Email" value="@LoginForm("email").getValue.orElse("")">
		</div>
		<div class="form-group">
			<input type="password" name="password" class="form-control input-xs" placeholder="Password">
		</div>

		<!-- Add a submit button -->
		<div class="form-group">
		    <input type="submit" value="Sign In" class="btn btn-primary">
		</div>
		}
</div>
}
```

```html
<!DOCTYPE html>
<html lang="en" class="govuk-template" xmlns:th="http://www.w3.org/1999/xhtml">
    <head>
        <th:block th:insert="fragments/layout :: head" th:with="pageTitle='Manage innovation leads'" />
    </head>
    <body class="govuk-template__body competition-management">
        <th:block th:insert="fragments/layout :: body-start" />
        <th:block th:insert="fragments/layout :: global-header" />

        <div class="govuk-width-container">
            <th:block th:insert="fragments/layout :: phase-banner" />
            <th:block th:insert="fragments/layout :: header-sub" th:with="linkTitle='Competition setup',linkUrl=@{/competition/setup/{competitionId}/(competitionId=${model.competitionId})}" />

            <main class="govuk-main-wrapper" id="main-content" role="main">
                <th:block th:insert="fragments/layout :: page-title" th:with="pageTitle='Manage innovation leads',subTitle=${model.competitionName}, size='govuk-heading-xl'" />

                <h2 class="govuk-heading-m">Key statistics</h2>
                <div class="govuk-grid-row">
                    <div class="govuk-grid-column-one-quarter">
                        <div class="highlight-panel highlight-panel-padded">
                            <span class="govuk-heading-l lead-count govuk-!-margin-bottom-0" th:text="${#lists.size(model.innovationLeadsAssignedToCompetition)}">1</span>
                            <small>Innovation leads added</small>
                        </div>
                    </div>
                </div>
                <dl class="standard-definition-list govuk-!-margin-top-6">
                    <dt>Innovation sector</dt>
                    <dd th:text="${model.innovationSectorName}">Materials and manufacturing</dd>
                    <dt>Innovation areas</dt>
                    <dd>
                        <th:block th:each="innovationArea, iterStat : ${model.innovationAreaNames}">
                            <th:block th:text="${innovationArea}">Materials and manufacturing</th:block><th:block th:text="${iterStat.last == false} ? ', '">,</th:block>
                        </th:block>
                    </dd>
                    <dt>Competition Innovation Lead</dt>
                    <dd th:text="${model.leadTechnologistName}">Materials and manufacturing</dd>
                    <dt>Portfolio Manager</dt>
                    <dd th:text="${model.executiveName}">Materials and manufacturing</dd>

                </dl>
                <div class="govuk-tabs">
                    <h2 class="govuk-tabs__title">
                        Manage innovation leads
                    </h2>
                    <ul class="govuk-tabs__list">
                        <li class="govuk-tabs__list-item">
                            <a th:href="@{/competition/setup/{competitionId}/manage-innovation-leads/find(competitionId=${model.competitionId})}"
                               aria-selected="true"
                               class="govuk-tabs__tab">Add</a>
                        </li>
                        <li class="govuk-tabs__list-item">
                            <a th:href="@{/competition/setup/{competitionId}/manage-innovation-leads/overview(competitionId=${model.competitionId})}"
                               class="govuk-tabs__tab">Added to competition (<th:block th:text="${#lists.size(model.innovationLeadsAssignedToCompetition)}"></th:block>)</a>
                        </li>
                    </ul>
                    <section class="govuk-tabs__panel">
                        <div class="govuk-body govuk-grid-row sorting govuk-!-margin-bottom-6">
                            <div class="govuk-grid-column-one-half">
                                <span class="govuk-!-font-size-48 govuk-!-font-weight-bold total-count" th:text="${#lists.size(model.availableInnovationLeads)}"></span>
                                <span class="govuk-!-font-size-19 govuk-!-font-weight-bold">Innovation leads available to add</span>
                            </div>
                        </div>

                        <div class="table-overflow">
                            <table class="govuk-table stakeholder-table">
                                <thead class="govuk-table__head">
                                <tr class="govuk-table__row">
                                    <th class="govuk-table__header" scope="col">Name</th>
                                    <th scope="col" class="govuk-table__header alignright"><span class="govuk-visually-hidden">Action</span></th>
                                </tr>
                                </thead>
                                <tbody class="govuk-table__body">
                                <tr class="govuk-table__row" th:each="innovationLeadUsers : ${model.availableInnovationLeads}">
                                    <td class="govuk-table__cell" th:text="${innovationLeadUsers.name}">Alexis Kinney</td>
                                    <td class="govuk-table__cell alignright">
                                        <form method="post" th:action="@{/competition/setup/{competitionId}/add-innovation-lead/{userId}(competitionId=${model.competitionId},userId=${innovationLeadUsers.id})}">
                                            <button class="button-secondary govuk-!-margin-0">Add <span class="govuk-visually-hidden"><th:block th:text="${innovationLeadUsers.name}" /> as Innovation Lead</span></button>
                                        </form>
                                    </td>
                                </tr>
                                <tr class="govuk-table__row" th:if="${#lists.size(model.availableInnovationLeads) == 0} ">
                                    <td class="govuk-table__cell" colspan="3">All innovation leads have been added to this competition.</td>
                                </tr>
                                </tbody>
                            </table>
                        </div>
                    </section>
                </div>

                <th:block th:insert="fragments/layout :: main-content-end" />
            </main>
        </div>
<th:block th:insert="fragments/layout :: footer" />
```

```html
<wo:switch WOComponentName="PXMinimalPageWrapper"
                      css1="style/pachyderm.css" logo="small">

<div>
  <div style="position:relative;left:200px;">
    <h2>Pachyderm Database Models, Records and Fields</h2>
    <wo:repeat list="[dbModels]" item="[dbModel]">
      <wo:string value="[dbModel.name]"/> ----
      <wo:repeat list="[dbModel.entities]" item="[dbEntity]">
        <wo:link action="[chooseEntity]"><wo:string value="[dbEntity.name]"/></wo:link> :
      </wo:repeat><br/>
    </wo:repeat>
  </div>
  <wo:form>
  <p style="text-align:right"><wo:submit action="[cancelAction]"
                                          value="Admin Home"
                                          class="blok tint edge"/>&nbsp;&nbsp;&nbsp;</p></wo:form>

  <div class="clearBoth"/><br/>
</div>

<p style="border-top:1pt dotted grey;"/>
<strong><wo:string value="[chosenEntity.name]"/> (<wo:string value="[entityRecords.@count]"/> records)</strong><br/>
<wo:repeat list="[entityRecords]" item="[entityRecord]">
  <wo:repeat list="[entityRecord.allPropertyKeys]" item="[key]">
    <div align="right" style="width:120px; padding:4px; margin-left:2em; float:left; background:#ddd;">
    <wo:string value="[key]" />:</div>
    <wo:textfield value="[value]" style="width:720px;" disabled="disabled"/><br/>
  </wo:repeat><hr/>
</wo:repeat>

</wo:switch>
```

```html
<!DOCTYPE HTML>
<html>
<!--
https://bugzilla.mozilla.org/show_bug.cgi?id=282547
-->
<head>
  <title>Test for Bug 282547</title>
  <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
  <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
</head>
<body>
<a target="_blank" href="https://bugzilla.mozilla.org/show_bug.cgi?id=282547">Mozilla Bug 282547</a>
<p id="display"></p>
<div id="content" style="display: none"></div>

<script class="testbody" type="text/javascript">

function xhr_userpass_sync() {
  var xhr = new XMLHttpRequest();
  xhr.open('GET', 'bug282547.sjs', false, 'username', 'password');

  xhr.send(null);
  ok(xhr.status == 401, "Status 401");

  runTests();
}

function xhr_userpass_async() {
  xhr = new XMLHttpRequest();
  xhr.open('GET', 'bug282547.sjs', true, 'username', 'password');

  xhr.onreadystatechange = function() {
    if (xhr.readyState == 4) {
      ok(xhr.status == 401, "Status 401");
      runTests();
    }
  }

  xhr.send(null);
}

function xhr_auth_header_sync() {
  var xhr = new XMLHttpRequest();
  xhr.open('GET', 'bug282547.sjs', false);
  xhr.setRequestHeader("Authorization", "42");

  xhr.send(null);
  ok(xhr.status == 401, "Status 401");

  runTests();
}

function xhr_auth_header_async() {
  var xhr = new XMLHttpRequest();
  xhr.open('GET', 'bug282547.sjs', true);
  xhr.setRequestHeader("Authorization", "42");

  xhr.onreadystatechange = function() {
    if (xhr.readyState == 4) {
      ok(xhr.status == 401, "Status 401");
      runTests();
    }
  }

  xhr.send(null);
}

function xhr_crossorigin_sync() {
  var xhr = new XMLHttpRequest();
  xhr.open('GET', 'http://example.com/tests/content/base/test/bug282547.sjs', true);
  xhr.withCredentials = true;

  xhr.onreadystatechange = function() {
    if (xhr.readyState == 4) {
      ok(xhr.status == 401, "Status 401");
      runTests();
    }
  }

  xhr.send(null);
}

var tests = [ xhr_userpass_sync,
              xhr_userpass_async,
              xhr_auth_header_sync,
              xhr_auth_header_async,
              /* Disabled: bug799540 xhr_crossorigin_sync */ ];
function runTests() {
  if (!tests.length) {
    SimpleTest.finish();
    return;
  }

  var test = tests.shift();
  test();
}

runTests();
SimpleTest.waitForExplicitFinish();

</script>
</body>
</html>
```

```html
<div ng-controller="reportTransactionsCtrl">
    <div class="row">
        <div class="container">
            <div class="col-md-8 offset-md-2">
                <alert-directive action="action" close-alerts="closeAlerts"></alert-directive>
                <div class="card">
                  <form name="reportTransactionForm">
                      <div class="card-body">
                          <div class="form-row form-group">
                              <div class="col">
                                  <label for="transactionNumber">Transaction Number <span class="text-danger">*</span></label>
                                  <input type="text" id="transactionNumber" ng-model="transaction.transactionnumber" class="form-control" placeholder="Transaction Number" required>
                              </div>
                              <div class="col">
                                  <label for="internal_ref_number">Internal Reference Number <span class="text-danger">*</span></label>
                                  <input type="text" id="internal_ref_number" ng-model="transaction.internal_ref_number" class="form-control" placeholder="Internal Reference Number">
                              </div>
                          </div>
                          <div class="form-row form-group">
                              <div class="col">
                                  <label for="transaction_location">Transaction Location<span class="text-danger">*</span></label>
                                  <select  id="transaction_location" ng-model="transaction.transaction_location" class="form-control"  required>
                                      <option ng-repeat="location in locations" value="{{location.address}}">{{location.address}}</option>
                                  </select>

                              </div>
                              <div class="col">
                                  <label for="transaction_description">Transaction Description <span class="text-danger">*</span></label>
                                  <textarea id="transaction_description"  class="form-control" placeholder="Description" required ng-model="transaction.transaction_description"></textarea>
                              </div>
                          </div>
                          <div class="form-row form-group">
                              <div class="col">
                                  <label for="date_of_transaction">Date of Transaction<span class="text-danger">*</span></label>
                                  <input type="date" id="date_of_transaction" ng-model="transaction.date_transaction" class="form-control" required>
                              </div>
                              <div class="col">
                                  <label for="teller">Teller</label>
                                  <input id="teller"  class="form-control" placeholder="Teller Name"  ng-model="transaction.teller">
                              </div>
                          </div>

                          <div class="form-row form-group">
                              <div class="col">
                                  <label for="authorised_by">Authorised By</label>
                                  <input type="text" placeholder="Authorised By" ng-model="transaction.authorized" class="form-control" id="authorised_by">
                              </div>
                              <div class="col">
                                  <label >Late Deposit? </label><br>
                                  <label><input type="radio"  class="form-control"   ng-model="transaction.late_deposit" name="late_deposit" ng-value="true">Yes</label>
                                  <label><input type="radio"  class="form-control"   ng-model="transaction.late_deposit" name="late_deposit" ng-value="false">No </label>

                              </div>
                          </div>

                          <div class="form-row form-group">
                              <div class="col">
                                  <label for="local_amount">Local Amount</label>
                                  <input type="text" placeholder="Local Amount" ng-model="transaction.amount_local" class="form-control" id="local_amount" required>
                              </div>
                              <div class="col">
                                  <label for="transmode_code">Transmode Code <span class="text-danger">*</span></label>
                                  <select class="form-control" id="transmode_code" required ng-model="transaction.transmode_code">
                                      <option ng-repeat="transmodeCode in transmodeCodes" value="{{transmodeCode.lk_code}}">{{transmodeCode.lk_name}}</option>
                                  </select>


                              </div>
                          </div>
                          <div class="form-row form-group">
                              <div class="col">
                                  <label for="transmode_comment">Comments</label>
                                  <textarea  placeholder="Local Amount" ng-model="transaction.transmode_comment" class="form-control" id="transmode_comment"></textarea>
                              </div>
                              <div class="col">
                                  <label >Is Multiparty? </label><br>
                                  <label><input type="radio"  class="form-control"   ng-model="transaction.ismultiparty" name="is_multiparty" ng-value="true">Yes</label>
                                  <label><input type="radio"  class="form-control"   ng-model="transaction.ismultiparty" name="is_multiparty" ng-value="false">No </label>

                              </div>

                          </div>

                      </div>
                      <div class="card-footer">
                          <div class="row">
                              <div class="col">
                                  <button class="btn btn-block btn-success" ng-click="addTransactionAndContinue()" ng-disabled="reportTransactionForm.$invalid">Save and Continue <i class="fas fa-arrow-right"></i> </button>
                              </div>

                          </div>
                      </div>
                  </form>
                </div>
            </div>
        </div>
    </div>
</div>
```

```html
<!DOCTYPE HTML>
<!--
	Dimension by HTML5 UP
	html5up.net | @ajlkn
	Free for personal and commercial use under the CCA 3.0 license (html5up.net/license)
-->
<html>
	<head>
		<title>Jakobi Matagi</title>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no" />
		<link rel="stylesheet" href="assets/css/main.css" />
		<noscript><link rel="stylesheet" href="assets/css/noscript.css" /></noscript>
	</head>
	
	<body class="is-preload">

		<!-- Wrapper -->
			<div id="wrapper">

				<!-- Header -->
					<header id="header">
						<div class="logo">
							<span class="icon fa-gem"></span>
						</div>
						<div class="content">
							<div class="inner">
								<h1>Portfolio</h1>
								<p>A fully responsive site template designed by <a href="https://html5up.net">HTML5 UP</a> and released<br />
								for free under the <a href="https://html5up.net/license">Creative Commons</a> license.</p>
							</div>
						</div>
						<nav>
							<ul>
								<li><a href="#intro">Intro</a></li>
								<li><a href="#work">Work</a></li>
								<li><a href="#about">About</a></li>
								<li><a href="#contact">Contact</a></li>
								<!--<li><a href="#elements">Elements</a></li>-->
							</ul>
						</nav>
					</header>

				<!-- Main -->
```

```html
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="description" content="{{ partial "title" . }}">

<title>{{ partial "title" . }} | {{ .Site.Title -}}</title>

<link rel="shortcut icon" type="image/png" href="/media/logo.png">
<link rel="apple-touch-icon" href="/media/logo192.png" />
<link rel="apple-touch-icon" sizes="512x512" href="/media/logo512.png" />
<link rel="stylesheet" href="/main.min.css" media="screen">
<link rel="stylesheet" href="/custom.css" media="screen">

{{ with .OutputFormats.Get "rss" -}}
    {{ printf `<link rel="%s" type="%s" href="%s" title="%s" />` .Rel .MediaType.Type .Permalink $.Site.Title | safeHTML }}
{{ end -}}

{{ "<!--" | safeHTML -}}
    Made with Geekdoc theme https://github.com/xoxys/hugo-geekdoc
{{- "-->" | safeHTML }}
```

```html
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc -->
<title>com.jme3.collision (jMonkeyEngine3)</title>
<link rel="stylesheet" type="text/css" href="../../../stylesheet.css" title="Style">
<script type="text/javascript" src="../../../script.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="com.jme3.collision (jMonkeyEngine3)";
        }
    }
    catch(err) {
    }
//-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../overview-summary.html">Overview</a></li>
<li class="navBarCell1Rev">Package</li>
<li>Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-all.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../com/jme3/cinematic/events/package-summary.html">Prev&nbsp;Package</a></li>
<li><a href="../../../com/jme3/collision/bih/package-summary.html">Next&nbsp;Package</a></li>
</ul>
<ul class="navList">
<li><a href="../../../index.html?com/jme3/collision/package-summary.html" target="_top">Frames</a></li>
<li><a href="package-summary.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<a name="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<div class="header">
<h1 title="Package" class="title">Package&nbsp;com.jme3.collision</h1>
<div class="docSummary">
<div class="block">scene-based (non-physics) collision detection</div>
</div>
<p>See:&nbsp;<a href="#package.description">Description</a></p>
</div>
<div class="contentContainer">
<ul class="blockList">
<li class="blockList">
<table class="typeSummary" border="0" cellpadding="3" cellspacing="0" summary="Interface Summary table, listing interfaces, and an explanation">
<caption><span>Interface Summary</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Interface</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tbody>
<tr class="altColor">
```

```html
<!DOCTYPE html>
<title>Canvas test: 2d.text.draw.fill.maxWidth.bound</title>
<meta name="author" content="Philip Taylor">
<script src="/resources/testharness.js"></script>
<script src="/resources/testharnessreport.js"></script>
<script src="../../../common/canvas-tests.js"></script>
<link rel="stylesheet" href="../../../common/canvas-tests.css">
<style>
@font-face {
  font-family: CanvasTest;
  src: url("../../../fonts/CanvasTest.ttf");
}
</style>
<body class="show_output">

<h1><a href="index.2d.html">2d</a>.<a href="index.2d.text.html">text</a>.<a href="index.2d.text.draw.html">draw</a>.<a href="index.2d.text.draw.fill.html">fill</a>.<a href="index.2d.text.draw.fill.maxWidth.html">maxWidth</a>.bound</h1>
<p class="desc">fillText handles maxWidth based on line size, not bounding box size</p>

<div class="refs">Spec references:
<ul>
<li><a href="../annotated-spec/canvas.html#testrefs.2d.text.draw.maxwidth">2d.text.draw.maxwidth</a>
</ul>
</div>

<span style="font-family: CanvasTest; position: absolute; visibility: hidden">A</span>
<p class="output">Actual output:</p>
<canvas id="c" class="output" width="100" height="50"><p class="fallback">FAIL (fallback content)</p></canvas>
<p class="output expectedtext">Expected output:<p><img src="../../../images/green-100x50.png" class="output expected" id="expected" alt="">
<ul id="d"></ul>
<script>
var t = async_test("fillText handles maxWidth based on line size, not bounding box size");
_addTest(function(canvas, ctx) {

ctx.font = '50px CanvasTest';
deferTest();
setTimeout(wrapFunction(function () {
    ctx.fillStyle = '#f00';
    ctx.fillRect(0, 0, 100, 50);
    ctx.fillStyle = '#0f0';
    ctx.fillText('DD', 0, 37.5, 100);
    _assertPixelApprox(canvas, 5,5, 0,255,0,255, "5,5", "0,255,0,255", 2);
    _assertPixelApprox(canvas, 95,5, 0,255,0,255, "95,5", "0,255,0,255", 2);
    _assertPixelApprox(canvas, 25,25, 0,255,0,255, "25,25", "0,255,0,255", 2);
    _assertPixelApprox(canvas, 75,25, 0,255,0,255, "75,25", "0,255,0,255", 2);
}), 500);


});
</script>
```

```html
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="generator" content="mm0-doc">
  <meta name="description" content="Documentation for theorem `srecpeq` in `../examples/peano.mm1`.">
  <meta name="keywords" content="mm0, metamath-zero">
  <title>srecpeq - ../examples/peano.mm1 - Metamath Zero</title>
  <link rel="stylesheet" type="text/css" href="../stylesheet.css" />
  <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Neuton&amp;subset=latin" type="text/css" media="screen" charset="utf-8">
  <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Nobile:regular,italic,bold,bolditalic&amp;subset=latin" type="text/css" media="screen" charset="utf-8">
  <!-- <link rel="shortcut icon" href="../favicon.ico"> -->
</head>
<body>
  <div class="body">
    <h1 class="title">
      Theorem <a class="thm" href="">srecpeq</a>
      <span class="nav"><a href="../index.html#srecpeq">index</a> | <a href="https://github.com/digama0/mm0/blob/master/examples/peano.mm1#L5366">src</a></span>
    </h1>
    <pre>theorem srecpeq (_A1 _A2: set) (_n1 _n2: nat):
  $ _A1 == _A2 -> _n1 = _n2 -> (srecp _A1 _n1 <-> srecp _A2 _n2) $;</pre>
    <table class="proof">
      <tbody>
        <tr class="proof-head"><th>Step</th><th>Hyp</th><th>Ref</th><th>Expression</th></tr>
        <tr class="st">
          <td>1</td>
          <td></td>
          <td><a class="thm" href="anl.html">anl</a></td>
          <td><a name="1"></a><pre>_A1 == _A2 /\ _n1 = _n2 -> _A1 == _A2</pre></td>
        </tr>
        <tr class="st">
          <td>2</td>
          <td></td>
          <td><a class="thm" href="anr.html">anr</a></td>
          <td><a name="2"></a><pre>_A1 == _A2 /\ _n1 = _n2 -> _n1 = _n2</pre></td>
        </tr>
        <tr class="st">
          <td>3</td>
          <td><a href="#1">1</a>, <a href="#2">2</a></td>
          <td><a class="thm" href="srecpeqd.html">srecpeqd</a></td>
          <td><a name="3"></a><pre>_A1 == _A2 /\ _n1 = _n2 -> (srecp _A1 _n1 <-> srecp _A2 _n2)</pre></td>
        </tr>
        <tr class="st">
          <td>4</td>
          <td><a href="#3">3</a></td>
          <td><a class="thm" href="exp.html">exp</a></td>
          <td><a name="4"></a><pre>_A1 == _A2 -> _n1 = _n2 -> (srecp _A1 _n1 <-> srecp _A2 _n2)</pre></td>
        </tr>
      </tbody>
    </table>
    <h2 class="axioms">Axiom use</h2>
    <a class="thm" href="ax_1.html">ax_1</a>,
    <a class="thm" href="ax_2.html">ax_2</a>,
    <a class="thm" href="ax_3.html">ax_3</a>,
    <a class="thm" href="ax_mp.html">ax_mp</a>,
    <a class="thm" href="itru.html">itru</a>,
    <a class="thm" href="ax_gen.html">ax_gen</a>,
    <a class="thm" href="ax_4.html">ax_4</a>,
    <a class="thm" href="ax_5.html">ax_5</a>,
    <a class="thm" href="ax_6.html">ax_6</a>,
    <a class="thm" href="ax_7.html">ax_7</a>,
    <a class="thm" href="ax_10.html">ax_10</a>,
    <a class="thm" href="ax_11.html">ax_11</a>,
    <a class="thm" href="ax_12.html">ax_12</a>,
    <a class="thm" href="elab.html">elab</a>,
    <a class="thm" href="ax_8.html">ax_8</a>,
    <a class="thm" href="peano2.html">peano2</a>,
    <a class="thm" href="theid.html">theid</a>,
    <a class="thm" href="the0.html">the0</a>,
    <a class="thm" href="addeq.html">addeq</a>,
    <a class="thm" href="muleq.html">muleq</a>
  </div>
</body>
</html>
```

```html
<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="robots" content="index, follow, all" />
        <title>Imagine\Imagick | Imagine API</title>
                    <link rel="stylesheet" type="text/css" href="../../stylesheet.css">
                            </head>
        </html>
```

```html
<th class="naaccr-summary-header naaccr-borders">Alternate Name</th>
        <th class="naaccr-summary-header naaccr-borders">Item #</th>
        <th class="naaccr-summary-header naaccr-borders">Length</th>
        <th class="naaccr-summary-header naaccr-borders">Source of Standard</th>
        <th class="naaccr-summary-header naaccr-borders">Implemented Year</th>
        <th class="naaccr-summary-header naaccr-borders">Implemented Version</th>
        <th class="naaccr-summary-header naaccr-borders">Retired Year</th>
        <th class="naaccr-summary-header naaccr-borders">Retired Version</th>
        <th class="naaccr-summary-header naaccr-borders">Column #</th>
    </tr>
    <tr>
        <td class="naaccr-summary-cell naaccr-borders"></td>
        <td class="naaccr-summary-cell naaccr-borders naaccr-summary-centered">3761</td>
        <td class="naaccr-summary-cell naaccr-borders naaccr-summary-centered">1</td>
        <td class="naaccr-summary-cell naaccr-borders naaccr-summary-centered">AJCC</td>
        <td class="naaccr-summary-cell naaccr-borders naaccr-summary-centered">2011</td>
        <td class="naaccr-summary-cell naaccr-borders naaccr-summary-centered">12.1</td>
        <td class="naaccr-summary-cell naaccr-borders naaccr-summary-centered"></td>
        <td class="naaccr-summary-cell naaccr-borders naaccr-summary-centered"></td>
        <td class="naaccr-summary-cell naaccr-borders naaccr-summary-centered">2027 - 2027</td>
    </tr>
</table>

<div class='content chap10-para-head'><strong><strong>Description</strong></strong></div>
<div class='content chap10-para'>Some computer edits identify errors. Others indicate possible errors that require manual review for resolution. To eliminate the need to review the same cases repeatedly, over-ride flags have been developed to indicate that data in a record (or records) have been reviewed and, while unusual, are correct.</div>
<div class='content chap10-para-head'><strong><strong>Rationale</strong></strong></div>
<div class='content chap10-para'>Some edits check for code combinations that are possible, but quite rare. If the code combination generates an error message and review of the case indicates that the codes are correct for the case, then the over-ride flag is used to skip the edit in the future.</div>
<div class='content chap10-para'><strong>Codes</strong></div>
<div class='content chap10-para'>
    <table>
        <tr class='code-row'>
            <td class='code-nbr'>1</td>
            <td class='code-desc'>Reviewed and confirmed as reported</td>
        </tr>
        <tr class='code-row'>
            <td class='code-nbr'>Blank</td>
            <td class='code-desc'>Not reviewed or reviewed and corrected</td>
        </tr>
    </table>
</div>
```

```html
{
    "description": "",
    "keywords": "",
    "title": "About",
    "url": "about",
    "draft": false
}

<p>
    About this website.
</p>
```

```html
<div class="points-div" fxLayout="column" fxFlex="100" fxFlex.xs="100" fxFlex.sm="100">
    <div fxLayout="row" fxLayout.sm="column" fxLayout.xs="column">
        <mat-card class="chart-div" fxLayout="row" fxLayoutAlign="center" fxFlex="70">
            <div fxFlex>
                <mat-card-title>WOWPOINTS REWARD IN THE LAST 12 MONTHS</mat-card-title>
                <mat-card-subtitle>ALL TRANSACTIONS</mat-card-subtitle>
                <mat-card-content>
                    <canvas height="200" baseChart class="chart" [datasets]="barChartData" [labels]="barChartLabels" [options]="barChartOptions" [legend]="barChartLegend" [chartType]="barChartType"></canvas>
                </mat-card-content>
            </div>
            <div fxFlex>
                <mat-card-title>WOWPoints 5</mat-card-title>
                <mat-card-subtitle>Food & Wine</mat-card-subtitle>
                <mat-card-content>
                    <canvas height="230" baseChart class="chart" [data]="doughnutChartData" [labels]="doughnutChartLabels" [options]="doughnutOptions" [colors]="doughnutChartColors" [chartType]="doughnutChartType"></canvas>
                </mat-card-content>
            </div>
        </mat-card>
        <div fxFlex="30" fxLayout="column">
            <mat-card class="points-star" fxLayout="column">
                <h6>YOUR STATUS: 1 STAR</h6>
                <div fxLayout="row">
                    <mat-icon class="star-small">star</mat-icon>
                    <mat-icon>star</mat-icon>
                    <mat-icon>star</mat-icon>
                    <mat-icon>star</mat-icon>
                    <mat-icon>star</mat-icon>
                    <mat-icon class="star-big">star</mat-icon>
                    <span>1</span>
                </div>
                <p>* 1 STAR STATUS EARNED IN 2017.</p>
            </mat-card>
            <mat-card class="points-details" fxLayout="column">
                <h6>
                    YOUR WOWPOINTS SUMMARY
                </h6>
                <mat-list [routerLink]="['/karmaPoints']" fxLayout="row" fxLayoutAlign="space-between center">
                    <mat-list-item>
                        Total WOW Points
                    </mat-list-item>
                    <mat-list-item>
                        12345
                    </mat-list-item>
                </mat-list>
                <mat-list [routerLink]="['/karmaPoints']" fxLayout="row" fxLayoutAlign="space-between center">
                    <mat-list-item>
                        Allocated
                    </mat-list-item>
```

```html
"License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
     KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.
-->
<html>

<head>
	<meta charset="utf-8" />
```

```html
<!DOCTYPE html>

<html>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="generator" content="Docutils 0.17.1: http://docutils.sourceforge.net/" />

  <meta name="viewport" content="width=device-width,initial-scale=1">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="lang:clipboard.copy" content="Copy to clipboard">
  <meta name="lang:clipboard.copied" content="Copied to clipboard">
  <meta name="lang:search.language" content="en">
  <meta name="lang:search.pipeline.stopwords" content="True">
  <meta name="lang:search.pipeline.trimmer" content="True">
  <meta name="lang:search.result.none" content="No matching documents">
  <meta name="lang:search.result.one" content="1 matching document">
  <meta name="lang:search.result.other" content="# matching documents">
  <meta name="lang:search.tokenizer" content="[\s\-]+">

  
    <link href="https://fonts.gstatic.com/" rel="preconnect" crossorigin>
    <link href="https://fonts.googleapis.com/css?family=Roboto+Mono:400,500,700|Roboto:300,400,400i,700&display=fallback" rel="stylesheet">

    <style>
      body,
      input {
        font-family: "Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif
      }

      code,
      kbd,
      pre {
        font-family: "Roboto Mono", "Courier New", Courier, monospace
      }
    </style>
  

  <link rel="stylesheet" href="../_static/stylesheets/application.css"/>
  <link rel="stylesheet" href="../_static/stylesheets/application-palette.css"/>
  <link rel="stylesheet" href="../_static/stylesheets/application-fixes.css"/>
  
  <link rel="stylesheet" href="../_static/fonts/material-icons.css"/>
  
  <meta name="theme-color" content="374665">
  <script src="../_static/javascripts/modernizr.js"></script>
  
  <script>
      window.ga = window.ga || function () {
          (ga.q = ga.q || []).push(arguments)
      };
      ga.l = +new Date;
      ga('create', 'UA-82811140-44', 'auto');
      ga('send', 'pageview');
  </script>
  <script async src='https://www.google-analytics.com/analytics.js'></script>
  
  
    <title>Release 0.129 &#8212; Presto 0.251 Documentation</title>
    <link rel="stylesheet" href="../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" href="../_static/material.css" type="text/css" />
    <link rel="stylesheet" type="text/css" href="../_static/copybutton.css" />
    <link rel="stylesheet" type="text/css" href="../_static/presto.css" />
    <script id="documentation_options" data-url_root="../" src="../_static/documentation_options.js"></script>
    <script src="../_static/jquery.js"></script>
    <script src="../_static/underscore.js"></script>
    <script src="../_static/doctools.js"></script>
    <script src="../_static/language_data.js"></script>
    <script src="../_static/clipboard.min.js"></script>
    <script src="../_static/copybutton.js"></script>
    <script async="async" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.7/latest.js?config=TeX-AMS-MML_HTMLorMML"></script>
    <link rel="shortcut icon" href="../_static/favicon.ico"/>
    <link rel="index" title="Index" href="../genindex.html" />
    <link rel="search" title="Search" href="../search.html" />
    <link rel="next" title="Release 0.128" href="release-0.128.html" />
    <link rel="prev" title="Release 0.130" href="release-0.130.html" />
  
   

  </head>
  <body dir=ltr
        data-md-color-primary=grey data-md-color-accent=blue>
  
  <svg class="md-svg">
    <defs data-children-count="0">
```

```html
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (1.8.0_241) on Sun Jan 31 21:59:48 EET 2021 -->
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>SchemaUserBitShared.Registry (Apache Drill Root POM 1.18.0 API)</title>
<meta name="date" content="2021-01-31">
<link rel="stylesheet" type="text/css" href="../../../../../stylesheet.css" title="Style">
<script type="text/javascript" src="../../../../../script.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="SchemaUserBitShared.Registry (Apache Drill Root POM 1.18.0 API)";
        }
    }
    catch(err) {
    }
//-->
var methods = {"i0":9,"i1":9};
var tabs = {65535:["t0","All Methods"],1:["t1","Static Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/SchemaUserBitShared.Registry.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../../index-all.html">Index</a></li>
<li><a href="../../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../../../org/apache/drill/exec/proto/SchemaUserBitShared.RecordBatchDef.MessageSchema.html" title="class in org.apache.drill.exec.proto"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
<li><a href="../../../../../org/apache/drill/exec/proto/SchemaUserBitShared.Registry.BuilderSchema.html" title="class in org.apache.drill.exec.proto"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../../../../index.html?org/apache/drill/exec/proto/SchemaUserBitShared.Registry.html" target="_top">Frames</a></li>
<li><a href="SchemaUserBitShared.Registry.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
```

```html
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_29) on Mon Mar 26 19:07:15 PDT 2012 -->
<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<TITLE>
AnnotatedMember (jackson-databind 2.0.0 API)
</TITLE>

<META NAME="date" CONTENT="2012-03-26">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../../stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="AnnotatedMember (jackson-databind 2.0.0 API)";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/AnnotatedMember.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
```

```xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
              xmlns:gmu="http://schemas.android.com/apk/res-auto"
              android:layout_width="fill_parent"
              android:layout_height="fill_parent"
              android:orientation="vertical">

    >
    <RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
                    android:layout_width="fill_parent"
                    android:layout_height="wrap_content"
                    android:orientation="horizontal"
            >
        <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
                      android:layout_width="wrap_content"

                      android:layout_height="wrap_content"
                      android:paddingBottom="5dip"
                      android:orientation="vertical"
                      android:id="@+id/titlearea"
                >

        <org.gmu.ui.GmuTextView
                android:id="@+id/title"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="GuideMeUP tu propia guia"
                android:textColor="?attr/gmu_text_color"
                android:maxLines="2"
```

```xml
<annotation>
        <folder>FOLDER</folder>
        <filename>002695164.jpg</filename>
        <path>..data/images/002695164.jpg</path>
        <source>
                <database>Unknown</database>
        </source>
        <size>
                <width>608</width>
                <height>608</height>
                <depth>3</depth>
        </size>
 <object>
                <name>c13</name>
                <pose>Unspecified</pose>
                <truncated>0</truncated>
                <difficult>0</difficult>
                <bndbox>
                        <xmin>410</xmin>
                        <ymin>20</ymin>
                        <xmax>503</xmax>
                        <ymax>66</ymax>
                </bndbox>
        </object>
 <object>
                <name>d07</name>
                <pose>Unspecified</pose>
                <truncated>0</truncated>
                <difficult>0</difficult>
                <bndbox>
                        <xmin>252</xmin>
                        <ymin>392</ymin>
                        <xmax>277</xmax>
                        <ymax>453</ymax>
                </bndbox>
        </object>
 <object>
                <name>d07</name>
                <pose>Unspecified</pose>
                <truncated>0</truncated>
                <difficult>0</difficult>
                <bndbox>
                        <xmin>71</xmin>
                        <ymin>199</ymin>
                        <xmax>96</xmax>
                        <ymax>259</ymax>
                </bndbox>
        </object>
</annotation>
```

```xml
<Type Name="CharacterMetrics" FullName="System.Windows.Media.CharacterMetrics">
  <TypeSignature Language="C#" Value="public class CharacterMetrics" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CharacterMetrics extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.CharacterMetrics" />
  <TypeSignature Language="VB.NET" Value="Public Class CharacterMetrics" />
  <TypeSignature Language="C++ CLI" Value="public ref class CharacterMetrics" />
  <TypeSignature Language="F#" Value="type CharacterMetrics = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents the metrics used to lay out a character in a device font.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.CharacterMetrics" /> class.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CharacterMetrics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.CharacterMetrics.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CharacterMetrics();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.CharacterMetrics" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Windows.Media.CharacterMetrics> object is constructed using the default metric values.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CharacterMetrics (string metrics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string metrics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.CharacterMetrics.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (metrics As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CharacterMetrics(System::String ^ metrics);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.CharacterMetrics : string -&gt; System.Windows.Media.CharacterMetrics" Usage="new System.Windows.Media.CharacterMetrics metrics" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="metrics" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="metrics">A comma-delimited <see cref="T:System.String" /> value that represents the metrics for the character.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.CharacterMetrics" /> class by specifying the metrics as a string.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The `metrics` parameter is a comma-delimited string that specifies the <xref:System.Windows.Media.CharacterMetrics> properties in the following order:  
  
-   <xref:System.Windows.Media.CharacterMetrics.BlackBoxWidth%2A>  
  
-   <xref:System.Windows.Media.CharacterMetrics.BlackBoxHeight%2A>  
  
-   <xref:System.Windows.Media.CharacterMetrics.Baseline%2A>  
  
-   <xref:System.Windows.Media.CharacterMetrics.LeftSideBearing%2A>  
  
-   <xref:System.Windows.Media.CharacterMetrics.RightSideBearing%2A>  
  
-   <xref:System.Windows.Media.CharacterMetrics.TopSideBearing%2A>  
  
-   <xref:System.Windows.Media.CharacterMetrics.BottomSideBearing%2A>
```

```xml
<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <OutputType>Library</OutputType>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <NoStdLib>true</NoStdLib>
    <NoConfig>true</NoConfig>
    <AssemblyOriginatorKeyFile>key.snk</AssemblyOriginatorKeyFile>
    <SignAssembly>true</SignAssembly>
    <PublicSign>true</PublicSign>
    <RuntimeMetadataVersion>4.0.30319</RuntimeMetadataVersion>
    <AddAdditionalExplicitAssemblyReferences>false</AddAdditionalExplicitAssemblyReferences>
    <GenerateTargetFrameworkAttribute>false</GenerateTargetFrameworkAttribute>
  </PropertyGroup>

  <ItemGroup>
    <Compile Include="System.Threading.Tasks.Dataflow.cs" />
    <Compile Include="AssemblyVersion.cs" />
    <ProjectReference Include="..\..\..\System.Runtime\netstandard1.0\4.0.0.0\System.Runtime.csproj" />
    <ProjectReference Include="..\..\..\System.Resources.ResourceManager\netstandard1.0\4.0.0.0\System.Resources.ResourceManager.csproj" />
    <ProjectReference Include="..\..\..\System.Diagnostics.Debug\netstandard1.0\4.0.0.0\System.Diagnostics.Debug.csproj" />
    <ProjectReference Include="..\..\..\System.Collections\netstandard1.0\4.0.0.0\System.Collections.csproj" />
    <ProjectReference Include="..\..\..\System.Threading.Tasks\netstandard1.0\4.0.0.0\System.Threading.Tasks.csproj" />
    <ProjectReference Include="..\..\..\System.Dynamic.Runtime\netstandard1.0\4.0.0.0\System.Dynamic.Runtime.csproj" />
    <ProjectReference Include="..\..\..\System.Threading\netstandard1.0\4.0.0.0\System.Threading.csproj" />
    <ProjectReference Include="..\..\..\System.Runtime.Serialization.Primitives\netstandard1.0\4.0.0.0\System.Runtime.Serialization.Primitives.csproj" />
    <ProjectReference Include="..\..\..\System.Linq\netstandard1.0\4.0.0.0\System.Linq.csproj" />
    <ProjectReference Include="..\..\..\System.Runtime.Extensions\netstandard1.0\4.0.0.0\System.Runtime.Extensions.csproj" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />

  <PropertyGroup>
    <_TargetFrameworkDirectories />
    <FrameworkPathOverride />
    <TargetFrameworkDirectory />
  </PropertyGroup>

  <Target Name="GetReferenceAssemblyPaths" />
  <Target Name="GetFrameworkPaths" />
</Project>
```

```xml
<?xml version="1.0" encoding="utf-8"?>
<resources>
    <item name="main_content" type="id" />
    <item name="error_view" type="id" />
    <item name="error_message" type="id" />
    <item name="user_name" type="id" />
    <item name="avatar_image" type="id" />
    <item name="text_view_name" type="id" />
    <item name="text_view_public_repos" type="id" />
    <item name="list_repository" type="id" />
    <item name="repo_name" type="id" />
    <item name="repo_size" type="id" />
    <item name="repo_url" type="id" />

    <item name="login_container" type="id" />
    <item name="login_form" type="id" />
```

```xml
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE ui:UiBinder SYSTEM "http://dl.google.com/gwt/DTD/xhtml.ent">
<ui:UiBinder xmlns:ui="urn:ui:com.google.gwt.uibinder"
    xmlns:g="urn:import:com.google.gwt.user.client.ui"
    xmlns:e="urn:import:org.ovirt.engine.ui.common.widget.editor.generic"
    xmlns:b="urn:import:org.gwtbootstrap3.client.ui"
    xmlns:l="urn:import:org.ovirt.engine.ui.common.widget.label">

    <ui:with field="constants" type="org.ovirt.engine.ui.webadmin.ApplicationConstants" />

    <g:FlowPanel ui:field="mainContainer">
        <b:Row>
            <b:Column size="SM_12">
                <l:EnableableFormLabel text="{constants.hostNetworkQosOutLabel}" ui:field="qosOutLabel" addStyleNames="h4" />
            </b:Column>
        </b:Row>
        <b:Row>
            <e:StringEntityModelTextBoxEditor ui:field="outAverageLinkshare" label="{constants.hostNetworkQosPopupOutAverageLinkshare}" usePatternFly="true" labelColSize="SM_5" widgetColSize="SM_7" />
        </b:Row>
        <b:Row>
            <e:StringEntityModelTextBoxEditor ui:field="outAverageUpperlimit" label="{constants.hostNetworkQosPopupOutAverageUpperlimit}" usePatternFly="true" labelColSize="SM_5" widgetColSize="SM_7" />
        </b:Row>
        <b:Row>
            <e:StringEntityModelTextBoxEditor ui:field="outAverageRealtime" label="{constants.hostNetworkQosPopupOutAverageRealtime}" usePatternFly="true" labelColSize="SM_5" widgetColSize="SM_7" />
        </b:Row>
    </g:FlowPanel>

</ui:UiBinder>
```

```xml
<option name="INDENT_SIZE" value="4"/>
			<option name="CONTINUATION_INDENT_SIZE" value="4"/>
			<option name="TAB_SIZE" value="4"/>
			<option name="USE_TAB_CHARACTER" value="true"/>
			<option name="SMART_TABS" value="false"/>
			<option name="LABEL_INDENT_SIZE" value="0"/>
			<option name="LABEL_INDENT_ABSOLUTE" value="false"/>
			<option name="USE_RELATIVE_INDENTS" value="false"/>
		</value>
	</option>
	<option name="USE_PER_PROJECT_SETTINGS" value="true"/>
</component>
```

```xml
android:layout_height="1dp"
                    android:background="#747474"
                    android:layout_marginTop="8dp"
                    android:layout_marginBottom="8dp"/>
                <ImageView
                    android:id="@+id/new_note_image"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:contentDescription="@string/insert_image_note" />
                <EditText
                    android:id="@+id/new_note_content"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:hint="@string/new_note_content"
                    android:paddingTop="8dp"
                    android:textColor="#fff"
                    android:fontFamily="serif"
                    android:textSize="20sp"
                    android:background="@android:color/transparent"/>
                <View
                    android:layout_width="match_parent"
                    android:layout_height="1dp"
                    android:background="#747474"
                    android:layout_marginTop="8dp"
                    android:layout_marginBottom="8dp"/>

                <LinearLayout
                    android:id="@+id/time_picker"
                    android:weightSum="3"
                    android:orientation="horizontal"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content">
                    <TextView
                        android:layout_width="0dp"
                        android:layout_weight="1"
                        android:layout_height="wrap_content"
                        android:paddingTop="16dp"
                        android:textColor="#fff"
                        android:paddingBottom="16dp"
                        android:textSize="18sp"
                        android:text="@string/pick_time"/>
                    <TextView
                        android:id="@+id/display_time"
                        android:layout_width="0dp"
                        android:layout_weight="2"
                        android:layout_height="wrap_content"
                        android:paddingTop="16dp"
                        android:textColor="#fff"
                        android:textAlignment="textEnd"
                        android:paddingBottom="16dp"
                        android:paddingRight="10dp"
                        android:paddingLeft="10dp"
                        android:textSize="14sp"/>
                </LinearLayout>
                <View
                    android:layout_width="match_parent"
                    android:layout_height="1dp"
                    android:background="#747474"
                    android:layout_marginTop="8dp"
                    android:layout_marginBottom="8dp"/>
                <LinearLayout
                    android:id="@+id/date_picker"
                    android:weightSum="3"
                    android:orientation="horizontal"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content">
                    <TextView
                        android:layout_width="0dp"
                        android:layout_weight="1"
                        android:layout_height="wrap_content"
                        android:paddingTop="16dp"
                        android:textColor="#fff"
                        android:paddingBottom="16dp"
                        android:textSize="18sp"
                        android:text="@string/pick_date"/>
                    <TextView
                        android:id="@+id/display_date"
                        android:layout_width="0dp"
                        android:layout_weight="2"
                        android:layout_height="wrap_content"
                        android:paddingTop="16dp"
                        android:textColor="#fff"
                        android:textAlignment="textEnd"
                        android:paddingBottom="16dp"
                        android:paddingRight="10dp"
                        android:paddingLeft="10dp"
                        android:textSize="14sp"/>
                </LinearLayout>
                <View
                    android:layout_width="match_parent"
                    android:layout_height="1dp"
                    android:background="#747474"
                    android:layout_marginTop="8dp"
                    android:layout_marginBottom="8dp"/>
                <LinearLayout
                    android:id="@+id/ringTone"
                    android:weightSum="3"
                    android:orientation="horizontal"
                    android:layout_width="match_parent"
```

```xml
<owners>Andrew Seward, Mathew Glodack</owners>
    <licenseUrl>https://raw.githubusercontent.com/awseward/Bugsnag.NET/master/LICENSE</licenseUrl>
    <projectUrl>https://github.com/awseward/Bugsnag.NET</projectUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <description>A portable class library Bugsnag client for .NET projects</description>
    <copyright>Copyright 2016</copyright>
  </metadata>
  <files>
    <file src="bin\Release\Bugsnag.Common.dll" target="lib\net45" />
  </files>
</package>
```

```xml
<?xml version="1.0" encoding="utf-8"?>
<android.support.constraint.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".GhostActivity">

<RelativeLayout
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:paddingLeft="@dimen/activity_horizontal_margin"
    android:paddingRight="@dimen/activity_horizontal_margin"
    android:paddingTop="@dimen/activity_vertical_margin"
    android:background="#000000"
    android:paddingBottom="@dimen/activity_vertical_margin"
    android:id="@+id/ghost">

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:id="@+id/scoreLayout"
        >
        <TextView
            android:layout_width="0dp"
            android:layout_weight="1"
            android:layout_height="wrap_content"
            android:id="@+id/userScore"
            android:text="Your Score: "
            android:textColor="@android:color/holo_blue_light"
            android:textSize="22dp"
            android:gravity="left"
            />
        <TextView
            android:layout_width="0dp"
            android:layout_weight="1"
            android:layout_height="wrap_content"
            android:id="@+id/ghostScore"
            android:text="Ghost Score: "
            android:textSize="22dp"
            android:gravity="right"
            android:textColor="@color/colorGreen"
            android:layout_alignParentTop="true"
            android:layout_alignParentEnd="true" />
    </LinearLayout>


    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:textSize="48sp"
        android:textColor="@android:color/holo_green_light"
        android:textStyle="bold"
        android:hint="  :) "
        android:textColorHint="@color/colorGreen"
```

```xml
<ga_config>
	<ga_type>MKP_GA</ga_type>
	<crossover_type>UNIFORM</crossover_type>
	<selector_type>SUS</selector_type>
	<rand_seed>1</rand_seed>
	<problem_type>DAT_FORMAT_FIX</problem_type>
	<benchmark_file_name>../../MKP_BENCHMARKS/sac94/hp/hp1.dat</benchmark_file_name>
	<ga_params>
		<num_population>50</num_population>
		<!-- following parameters must add to 1.0 -->
		<percent_to_keep>0.05</percent_to_keep>
		<percent_from_mutate>0.10</percent_from_mutate>
		<percent_from_breed>0.10</percent_from_breed>
		<percent_from_breed_and_mutate>0.70</percent_from_breed_and_mutate>
		<percent_to_random>0.05</percent_to_random>
		<!-- the above parameters must add to 1.0 -->
		<top_percent_to_breed_from>0.25</top_percent_to_breed_from>
		<top_percent_to_mutate_from>0.25</top_percent_to_mutate_from>
		<top_percent_to_breed_mutate_from>0.25</top_percent_to_breed_mutate_from>
		<percent_of_genome_mutations>0.10</percent_of_genome_mutations>
		<!-- if tournament selection -->
		<tournament_size>8</tournament_size>
	</ga_params>
</ga_config>
```

```xml
<pose>Unspecified</pose>
    <truncated>0</truncated>
    <Difficult>0</Difficult>
    <bndbox>
      <xmin>214</xmin>
      <ymin>92</ymin>
      <xmax>505</xmax>
      <ymax>632</ymax>
    </bndbox>
  </object>
</annotation>
```

```xml
<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>netcoreapp2.2</TargetFramework>
    </PropertyGroup>

    <ItemGroup>
      <PackageReference Include="Dse" Version="2.8.0" />
      <PackageReference Include="System.ComponentModel.Composition" Version="4.5.0" />
    </ItemGroup>

</Project>
```

```xml
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>dev.morphia.morphia</groupId>
        <artifactId>morphia-parent</artifactId>
        <version>1.6.1-dna3</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>logging-slf4j</artifactId>

    <dependencies>
        <dependency>
            <groupId>dev.morphia.morphia</groupId>
            <artifactId>core</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>${slf4j.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

</project>
```

```xml
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN 2.0//EN"
        "http://www.springframework.org/dtd/spring-beans-2.0.dtd">
<beans>

    <!-- maps request URLs to Controller names -->
    <bean class="org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping"/>

    <bean id="baseRecipeController" abstract="true">
        <property name="recipeManager" ref="recipeManager"/>
    </bean>

    <!-- Controller names are not important when using the above HandlerMapping implementation -->
    <bean class="org.springframework.showcase.coverc.web.SwitchBoardController"
          parent="baseRecipeController"/>

    <bean class="org.springframework.showcase.coverc.web.EditRecipeController"
          parent="baseRecipeController">
        <property name="commandName" value="recipe"/>
        <property name="commandClass" value="org.springframework.showcase.coverc.domain.Recipe"/>
        <property name="formView" value="editRecipe"/>
        <property name="successView" value="redirect:switchboard/listRecipes.htm"/>
    </bean>

    <!-- this bean with the well known name generates view names for us -->
    <!-- not strictly required since we just want to accept the defaults-->
    <bean id="viewNameTranslator" class="org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator"/>

    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

</beans>
```

```xml
<copyright value="Copyright HL7. Licensed under creative commons public domain"/>
  <compose>
    <include>
      <system value="http://hl7.org/fhir/ig/vocab-poc/CodeSystem/v2-0018-2.1"/>
    </include>
  </compose>
</ValueSet>
```

```xml
<?xml version="1.0" encoding="UTF-8"?>
<jcr:root xmlns:exifEX="http://cipa.jp/exif/1.0/" xmlns:crs="http://ns.adobe.com/camera-raw-settings/1.0/" xmlns:exif="http://ns.adobe.com/exif/1.0/" xmlns:psAux="http://ns.adobe.com/exif/1.0/aux/" xmlns:photoshop="http://ns.adobe.com/photoshop/1.0/" xmlns:tiff="http://ns.adobe.com/tiff/1.0/" xmlns:xmp="http://ns.adobe.com/xap/1.0/" xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/" xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#" xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dam="http://www.day.com/dam/1.0" xmlns:cq="http://www.day.com/jcr/cq/1.0" xmlns:jcr="http://www.jcp.org/jcr/1.0" xmlns:mix="http://www.jcp.org/jcr/mix/1.0" xmlns:nt="http://www.jcp.org/jcr/nt/1.0"
    jcr:isCheckedOut="{Boolean}true"
    jcr:mixinTypes="[mix:referenceable,mix:versionable]"
    jcr:primaryType="dam:Asset"
    jcr:uuid="a75d22d5-e360-4179-b8b2-6e8da7e907ec">
    <jcr:content
        cq:lastModified="{Date}2021-08-26T13:23:13.074Z"
        cq:lastModifiedBy="admin"
        cq:name="surfer-ready-to-go.jpg"
        cq:parentPath="/content/dam/tdgis/arctic-surfing-in-lofoten"
        dam:assetState="processed"
        dam:relativePath="we-retail/en/experiences/arctic-surfing-in-lofoten/surfer-ready-to-go.jpg"
        jcr:lastModified="{Date}2021-05-26T11:13:17.400Z"
        jcr:lastModifiedBy="admin"
        jcr:primaryType="dam:AssetContent">
        <metadata
            crs:AlreadyApplied="True"
            crs:AutoLateralCA="{Long}0"
            crs:AutoWhiteVersion="{Long}134348800"
            crs:Blacks2012="{Long}-19"
            crs:BlueHue="{Long}0"
            crs:BlueSaturation="{Long}0"
            crs:CameraProfile="Adobe Standard"
            crs:CameraProfileDigest="87FB0EDC503E332309FB5DE5C5C65125"
            crs:Clarity2012="{Long}0"
            crs:ColorNoiseReduction="{Long}25"
            crs:ColorNoiseReductionDetail="{Long}50"
            crs:ColorNoiseReductionSmoothness="{Long}50"
            crs:Contrast2012="{Long}56"
            crs:ConvertToGrayscale="False"
            crs:DefringeGreenAmount="{Long}0"
            crs:DefringeGreenHueHi="{Long}60"
            crs:DefringeGreenHueLo="{Long}40"
            crs:DefringePurpleAmount="{Long}0"
            crs:DefringePurpleHueHi="{Long}70"
            crs:DefringePurpleHueLo="{Long}30"
            crs:Exposure2012="{Decimal}0.60"
            crs:GrainAmount="{Long}0"
            crs:GreenHue="{Long}0"
            crs:GreenSaturation="{Long}0"
            crs:HasCrop="False"
            crs:HasSettings="True"
            crs:Highlights2012="{Long}44"
            crs:HueAdjustmentAqua="{Long}0"
            crs:HueAdjustmentBlue="{Long}0"
            crs:HueAdjustmentGreen="{Long}0"
            crs:HueAdjustmentMagenta="{Long}0"
            crs:HueAdjustmentOrange="{Long}0"
            crs:HueAdjustmentPurple="{Long}0"
            crs:HueAdjustmentRed="{Long}0"
            crs:HueAdjustmentYellow="{Long}0"
```

```xml
<component name="libraryTable">
  <library name="Gradle: androidx.preference:preference-ktx:1.1.1@aar">
    <CLASSES>
      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/cff28ef9c917859f857a2da2849990c0/jetified-preference-ktx-1.1.1/jars/classes.jar!/" />
      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/cff28ef9c917859f857a2da2849990c0/jetified-preference-ktx-1.1.1/res" />
      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/cff28ef9c917859f857a2da2849990c0/jetified-preference-ktx-1.1.1/AndroidManifest.xml" />
    </CLASSES>
    <JAVADOC />
    <SOURCES>
      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.preference/preference-ktx/1.1.1/1780f590aa4d008c891d307b358062f424e3535b/preference-ktx-1.1.1-sources.jar!/" />
    </SOURCES>
  </library>
</component>
```

```xml
<excludeFolder url="file://$MODULE_DIR$/vendor/tightenco/ziggy" />
      <excludeFolder url="file://$MODULE_DIR$/vendor/webmozart/assert" />
      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/polyfill-intl-grapheme" />
      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/console" />
      <excludeFolder url="file://$MODULE_DIR$/vendor/psr/log" />
      <excludeFolder url="file://$MODULE_DIR$/vendor/voku/portable-ascii" />
      <excludeFolder url="file://$MODULE_DIR$/vendor/vlucas/phpdotenv" />
      <excludeFolder url="file://$MODULE_DIR$/vendor/tijsverkoyen/css-to-inline-styles" />
      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/deprecation-contracts" />
      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/polyfill-intl-idn" />
      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/mime" />
      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/http-foundation" />
      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/http-kernel" />
      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/finder" />
      <excludeFolder url="file://$MODULE_DIR$/vendor/egulias/email-validator" />
      <excludeFolder url="file://$MODULE_DIR$/vendor/ramsey/collection" />
      <excludeFolder url="file://$MODULE_DIR$/vendor/symfony/translation-contracts" />
      <excludeFolder url="file://$MODULE_DIR$/vendor/league/commonmark" />
      <excludeFolder url="file://$MODULE_DIR$/vendor/phpunit/php-text-template" />
      <excludeFolder url="file://$MODULE_DIR$/vendor/sebastian/cli-parser" />
    </content>
    <orderEntry type="inheritedJdk" />
    <orderEntry type="sourceFolder" forTests="false" />
    <orderEntry type="library" name="@mdi/font" level="application" />
    <orderEntry type="library" name="jquery-3.5.1.slim" level="application" />
    <orderEntry type="library" name="popper.js" level="application" />
  </component>
</module>
```

```xml
<?xml version="1.0" encoding="utf-8"?>
<!--
  ~ Copyright (C) 2021 The Android Open Source Project.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<androidx.constraintlayout.widget.ConstraintLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/constraint_Layout"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <TextView
        android:id="@+id/text_action"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="@string/lemon_select"
        android:textSize="18sp"
        android:textAppearance="@style/TextAppearance.AppCompat.Body1"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintBottom_toTopOf="@id/image_lemon_state"/>

    <ImageView
        android:id="@+id/image_lemon_state"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:contentDescription="Lemon Tree"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintLeft_toLeftOf="parent"
        app:layout_constraintRight_toRightOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:srcCompat="@drawable/lemon_tree" />

</androidx.constraintlayout.widget.ConstraintLayout>
```

```xml
<Type Name="H264VideoProfile" FullName="Microsoft.Azure.Management.Media.Models.H264VideoProfile">
  <TypeSignature Language="C#" Value="public struct H264VideoProfile : IEquatable&lt;Microsoft.Azure.Management.Media.Models.H264VideoProfile&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit H264VideoProfile extends System.ValueType implements class System.IEquatable`1&lt;valuetype Microsoft.Azure.Management.Media.Models.H264VideoProfile&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.Media.Models.H264VideoProfile" />
  <TypeSignature Language="VB.NET" Value="Public Structure H264VideoProfile&#xA;Implements IEquatable(Of H264VideoProfile)" />
  <TypeSignature Language="F#" Value="type H264VideoProfile = struct" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.Media</AssemblyName>
    <AssemblyVersion>2.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;Microsoft.Azure.Management.Media.Models.H264VideoProfile&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Newtonsoft.Json.JsonConverter(typeof(Microsoft.Azure.Management.Media.Models.H264VideoProfileConverter))]</AttributeName>
      <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonConverter(typeof(Microsoft.Azure.Management.Media.Models.H264VideoProfileConverter))&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Defines values for H264VideoProfile.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Auto">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Azure.Management.Media.Models.H264VideoProfile Auto;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype Microsoft.Azure.Management.Media.Models.H264VideoProfile Auto" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Azure.Management.Media.Models.H264VideoProfile.Auto" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Auto As H264VideoProfile " />
      <MemberSignature Language="F#" Value=" staticval mutable Auto : Microsoft.Azure.Management.Media.Models.H264VideoProfile" Usage="Microsoft.Azure.Management.Media.Models.H264VideoProfile.Auto" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Media</AssemblyName>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Media.Models.H264VideoProfile</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Tells the encoder to automatically determine the appropriate H.264
            profile.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Baseline">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Azure.Management.Media.Models.H264VideoProfile Baseline;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype Microsoft.Azure.Management.Media.Models.H264VideoProfile Baseline" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Azure.Management.Media.Models.H264VideoProfile.Baseline" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Baseline As H264VideoProfile " />
      <MemberSignature Language="F#" Value=" staticval mutable Baseline : Microsoft.Azure.Management.Media.Models.H264VideoProfile" Usage="Microsoft.Azure.Management.Media.Models.H264VideoProfile.Baseline" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Media</AssemblyName>
        <AssemblyVersion>2.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Media.Models.H264VideoProfile</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Baseline profile
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Microsoft.Azure.Management.Media.Models.H264VideoProfile e);" />
```

```xml
<?xml version="1.0" encoding="UTF-8"?>
<ref id="cit17" class="ref">
 <element-citation publication-type="journal" class="element-citation">
  <person-group class="person-group">
   <name class="name">
    <span class="surname" xmlns="http://www.w3.org/1999/xhtml">Méndez</span>
    <span class="given-names" xmlns="http://www.w3.org/1999/xhtml">H.</span>
   </name>
   <name class="name">
    <span class="surname" xmlns="http://www.w3.org/1999/xhtml">Heimel</span>
    <span class="given-names" xmlns="http://www.w3.org/1999/xhtml">G.</span>
   </name>
   <name class="name">
    <span class="surname" xmlns="http://www.w3.org/1999/xhtml">Winkler</span>
    <span class="given-names" xmlns="http://www.w3.org/1999/xhtml">S.</span>
   </name>
   <name class="name">
    <span class="surname" xmlns="http://www.w3.org/1999/xhtml">Frisch</span>
    <span class="given-names" xmlns="http://www.w3.org/1999/xhtml">J.</span>
   </name>
   <name class="name">
    <span class="surname" xmlns="http://www.w3.org/1999/xhtml">Opitz</span>
```

```xml
If this class ("<i>A</i>") is extended by a subclass ("<i>B</i>"),
and the subclass <i>B</i> calls super.clone(), then it is likely that
<i>B</i>'s clone() method will return an object of type <i>A</i>,
which violates the standard contract for clone().</p>

<p> If all clone() methods call super.clone(), then they are guaranteed
to use Object.clone(), which always returns an object of the correct type.</p>

    ]]></Details>
  </BugPattern>
  <BugCode abbrev="CN" cweid="580">
    <Description>Bad implementation of cloneable idiom</Description>
  </BugCode>
  <Errors errors="0" missingClasses="0"></Errors>
  <FindBugsSummary timestamp="Wed, 14 Nov 2018 03:47:15 -0500" total_classes="1" referenced_classes="39" total_bugs="1" total_size="341" num_packages="1" java_version="1.8.0_121" vm_version="25.121-b13" cpu_seconds="9.12" clock_seconds="4.43" peak_mbytes="168.84" alloc_mbytes="1820.50" gc_seconds="0.02" priority_2="1">
    <FileStats path="org/jfree/data/time/TimeSeries.java" bugCount="1" size="341" bugHash="34b7431e3df27672a858b72618bb97ca"/>
    <PackageStats package="org.jfree.data.time" total_bugs="1" total_types="1" total_size="341" priority_2="1">
      <ClassStats class="org.jfree.data.time.TimeSeries" sourceFile="TimeSeries.java" interface="false" size="341" bugs="1" priority_2="1"/>
    </PackageStats>
    <FindBugsProfile>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.ClassInfoAnalysisEngine" totalMilliseconds="561" invocations="448" avgMicrosecondsPerInvocation="1252" maxMicrosecondsPerInvocation="95046" standardDeviationMicrosecondsPerInvocation="5415"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.ClassDataAnalysisEngine" totalMilliseconds="493" invocations="453" avgMicrosecondsPerInvocation="1088" maxMicrosecondsPerInvocation="40190" standardDeviationMicrosecondsPerInvocation="2555"/>
      <ClassProfile name="edu.umd.cs.findbugs.OpcodeStack$JumpInfoFactory" totalMilliseconds="140" invocations="164" avgMicrosecondsPerInvocation="858" maxMicrosecondsPerInvocation="19980" standardDeviationMicrosecondsPerInvocation="2441"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.UnconditionalValueDerefDataflowFactory" totalMilliseconds="131" invocations="44" avgMicrosecondsPerInvocation="2982" maxMicrosecondsPerInvocation="27885" standardDeviationMicrosecondsPerInvocation="5521"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.TypeDataflowFactory" totalMilliseconds="128" invocations="45" avgMicrosecondsPerInvocation="2862" maxMicrosecondsPerInvocation="34317" standardDeviationMicrosecondsPerInvocation="6031"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FieldItemSummary" totalMilliseconds="128" invocations="39" avgMicrosecondsPerInvocation="3296" maxMicrosecondsPerInvocation="25029" standardDeviationMicrosecondsPerInvocation="5188"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindNoSideEffectMethods" totalMilliseconds="127" invocations="39" avgMicrosecondsPerInvocation="3256" maxMicrosecondsPerInvocation="37081" standardDeviationMicrosecondsPerInvocation="7135"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.ValueNumberDataflowFactory" totalMilliseconds="110" invocations="45" avgMicrosecondsPerInvocation="2464" maxMicrosecondsPerInvocation="30765" standardDeviationMicrosecondsPerInvocation="5090"/>
```

```xml
<string name="radian_to_degree">Radians to Degrees</string>

    <!-- TODO: Remove or change this placeholder text -->
    <string name="hello_blank_fragment">Hello blank fragment</string>
    <string name="calculate">Calculate</string>
</resources>
```

```xml
<Type Name="IDbContextPool&lt;TContext&gt;" FullName="Microsoft.EntityFrameworkCore.Internal.IDbContextPool&lt;TContext&gt;">
  <TypeSignature Language="C#" Value="public interface IDbContextPool&lt;TContext&gt; : Microsoft.EntityFrameworkCore.Internal.IDbContextPool where TContext : DbContext" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDbContextPool`1&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext&gt; implements class Microsoft.EntityFrameworkCore.Internal.IDbContextPool" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Internal.IDbContextPool`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDbContextPool(Of TContext)&#xA;Implements IDbContextPool" />
  <TypeSignature Language="F#" Value="type IDbContextPool&lt;'Context (requires 'Context :&gt; DbContext)&gt; = interface&#xA;    interface IDbContextPool" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TContext">
      <Constraints>
        <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Internal.IDbContextPool</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TContext">To be added.</typeparam>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members />
</Type>
```

```xml
<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2015 Red Hat, Inc. and/or its affiliates.
  ~
  ~ Licensed under the Apache License version 2.0, available at http://www.apache.org/licenses/LICENSE-2.0
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>io.thorntail</groupId>
        <artifactId>build-parent</artifactId>
        <version>2.0.1.Final-SNAPSHOT</version>
        <relativePath>../../../build-parent/pom.xml</relativePath>
    </parent>

    <groupId>io.thorntail</groupId>
    <artifactId>microprofile-config</artifactId>
    <name>MicroProfile Config</name>
    <description>WildFly: Swarm Fraction for Eclipse MicroProfile Config</description>

    <packaging>jar</packaging>

    <properties>
        <swarm.fraction.stability>stable</swarm.fraction.stability>
        <swarm.fraction.tags>Eclipse MicroProfile,MicroServices,Config</swarm.fraction.tags>
    </properties>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>io.thorntail</groupId>
                    <artifactId>thorntail-fraction-plugin</artifactId>
                    <version>${version.thorntail.fraction.plugin}</version>
                    <executions>
                        <execution>
                            <id>process</id>
                            <phase>process-classes</phase>
                            <goals>
                                <goal>process</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>io.thorntail</groupId>
                <artifactId>thorntail-fraction-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>io.thorntail</groupId>
            <artifactId>container</artifactId>
        </dependency>
        <dependency>
            <groupId>io.thorntail</groupId>
            <artifactId>logging</artifactId>
        </dependency>
        <dependency>
            <groupId>io.thorntail</groupId>
            <artifactId>meta-spi</artifactId>
        </dependency>
        <dependency>
            <groupId>org.wildfly.swarm</groupId>
            <artifactId>microprofile-config-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.wildfly</groupId>
            <artifactId>wildfly-microprofile-config-implementation</artifactId>
        </dependency>
        <!-- CDI fraction is required to be able to inject Config -->
        <dependency>
            <groupId>io.thorntail</groupId>
            <artifactId>cdi</artifactId>
        </dependency>
        <!-- Provided APIs -->
        <dependency>
            <groupId>org.eclipse.microprofile.config</groupId>
            <artifactId>microprofile-config-api</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.osgi</groupId>
                    <artifactId>org.osgi.annotation.versioning</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.wildfly</groupId>
            <artifactId>wildfly-microprofile-config-feature-pack</artifactId>
            <version>${version.wildfly-microprofile-config}</version>
            <type>zip</type>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.wildfly.core</groupId>
            <artifactId>wildfly-core-feature-pack</artifactId>
            <type>zip</type>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.wildfly</groupId>
            <artifactId>wildfly-servlet-feature-pack</artifactId>
            <type>zip</type>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.wildfly</groupId>
            <artifactId>wildfly-feature-pack</artifactId>
            <type>zip</type>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>
</project>
```

```xml
<project xmlns="http://maven.apache.org/POM/4.0.0" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.azure</groupId>
        <artifactId>azure-client-sdk-parent</artifactId>
        <version>1.7.0</version> <!-- {x-version-update;com.azure:azure-client-sdk-parent;current} -->
        <relativePath>../../parents/azure-client-sdk-parent</relativePath>
    </parent>

    <groupId>com.azure.resourcemanager</groupId>
    <artifactId>azure-resourcemanager-servicefabric</artifactId>
    <version>1.0.0-beta.2</version> <!-- {x-version-update;com.azure.resourcemanager:azure-resourcemanager-servicefabric;current} -->
    <packaging>jar</packaging>

    <name>Microsoft Azure SDK for ServiceFabric Management</name>
    <description>This package contains Microsoft Azure SDK for ServiceFabric Management SDK. For documentation on how to use this package, please see https://aka.ms/azsdk/java/mgmt. Service Fabric Management Client. Package tag package-2019-03.</description>
    <url>https://github.com/Azure/azure-sdk-for-java</url>

    <licenses>
        <license>
            <name>The MIT License (MIT)</name>
            <url>http://opensource.org/licenses/MIT</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <scm>
        <url>https://github.com/Azure/azure-sdk-for-java</url>
        <connection>scm:git:git@github.com:Azure/azure-sdk-for-java.git</connection>
        <developerConnection>scm:git:git@github.com:Azure/azure-sdk-for-java.git</developerConnection>
        <tag>HEAD</tag>
    </scm>
    <developers>
        <developer>
            <id>microsoft</id>
            <name>Microsoft</name>
        </developer>
    </developers>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <legal><![CDATA[[INFO] Any downloads listed may be third party software.  Microsoft grants you no rights for third party software.]]></legal>
    </properties>
    <dependencies>
        <dependency>
            <groupId>com.azure</groupId>
            <artifactId>azure-core</artifactId>
            <version>1.18.0</version> <!-- {x-version-update;com.azure:azure-core;dependency} -->
        </dependency>
        <dependency>
            <groupId>com.azure</groupId>
            <artifactId>azure-core-management</artifactId>
            <version>1.3.1</version> <!-- {x-version-update;com.azure:azure-core-management;dependency} -->
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.5</version> <!-- {x-version-update;org.jacoco:jacoco-maven-plugin;external_dependency} -->
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
```

```xml
<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<GDTF DataVersion="1.1">

  <FixtureType CanHaveChildren="No" Description="" FixtureTypeID="9EE31948-675A-11EB-A421-2E4D546E0304" LongName="" Manufacturer="Custom" Name="Blizzard Lighting Stiletto Triad" RefFT="" ShortName="Blizzard Lighting Stiletto Triad" Thumbnail="">
    <AttributeDefinitions>
      <ActivationGroups/>
      <FeatureGroups>
        <FeatureGroup Name="Dimmer" Pretty="Dimmer">
          <Feature Name="Dimmer"/>
        </FeatureGroup>
      </FeatureGroups>
      <Attributes>
        <Attribute Feature="Dimmer.Dimmer" Name="Dimmer" PhysicalUnit="None" Pretty="Dim"/>
      </Attributes>
    </AttributeDefinitions>
    <Wheels/>
    <PhysicalDescriptions>
      <ColorSpace Mode="sRGB"/>
      <Filters/>
      <Emitters/>
      <DMXProfiles/>
      <CRIs/>
      <Connectors/>
      <Properties/>
      <OperatingTemperature High="40.000000" Low="0.000000"/>
```

```xml
<TextView
            android:id="@+id/guess_text_view"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:text=""
            android:textAlignment="center"
            android:saveEnabled="false"/>
    </LinearLayout>

    <Button
        android:id="@+id/check_button"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Check"
        android:layout_gravity="center"/>

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="horizontal">

        <TextView
            android:id="@+id/score_text_view"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:text="Score"
            android:enabled="false"/>

        <EditText
            android:id="@+id/score_edit_text"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:ems="10"
            android:inputType="number"
            android:text=""
            android:enabled="false"
            android:textAlignment="center"
            android:saveEnabled="false"/>
    </LinearLayout>

    <Button
        android:id="@+id/back_button"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Back"
        android:layout_gravity="center"/>
</LinearLayout>
```

```xml
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE typemap [
<!ELEMENT typemap (type)+>
<!ELEMENT type (#PCDATA)>
<!ELEMENT include (#PCDATA)>
<!ATTLIST type name CDATA #REQUIRED>
<!ATTLIST type fullname CDATA #IMPLIED>
<!ATTLIST type family CDATA #IMPLIED>
<!ATTLIST type foundry CDATA #IMPLIED>
<!ATTLIST type weight CDATA #IMPLIED>
<!ATTLIST type style CDATA #IMPLIED>
<!ATTLIST type stretch CDATA #IMPLIED>
<!ATTLIST type format CDATA #IMPLIED>
<!ATTLIST type metrics CDATA #IMPLIED>
<!ATTLIST type glyphs CDATA #REQUIRED>
<!ATTLIST type version CDATA #IMPLIED>
<!ATTLIST include file CDATA #REQUIRED>
]>
<typemap>
   <include file="type-ghostscript.xml" />
   <include file="type-achille.xml" />
</typemap>
```

```xml
<?xml version="1.0" encoding="utf-8"?>
<Messages>
	<Message severity="INFO" prefix="[HLS 200-10]" key="HLS_10_1312" tag="" content="Analyzing design file &apos;point_aux.c&apos; ..." resolution=""/>
	<Message severity="WARNING" prefix="[HLS 207-5324]" key="HLS 207-5324" tag="" content="unused parameter &apos;idx&apos;: point_aux.c:41:16" resolution=""/>
	<Message severity="INFO" prefix="[HLS 200-10]" key="HLS_10_1312" tag="" content="Analyzing design file &apos;fps.c&apos; ..." resolution=""/>
	<Message severity="INFO" prefix="[HLS 200-777]" key="HLS 200-777" tag="" content="Using interface defaults for &apos;Vitis&apos; target." resolution=""/>
	<Message severity="INFO" prefix="[HLS 214-178]" key="HLS 214-178" tag="" content="Inlining function &apos;fp_struct&lt;double&gt;::fp_struct(double)&apos; into &apos;int generic_isinf&lt;double&gt;(double)&apos; (/wrk/2020.1/continuous/2020_05_27_2902540/src/shared/hls/clib/hlsmath/include/FloatingPoint/hls_isinf.h:16:0)" resolution=""/>
	<Message severity="INFO" prefix="[HLS 214-178]" key="HLS 214-178" tag="" content="Inlining function &apos;fp_struct&lt;double&gt;::fp_struct(double)&apos; into &apos;int generic_isnan&lt;double&gt;(double)&apos; (/wrk/2020.1/continuous/2020_05_27_2902540/src/shared/hls/clib/hlsmath/include/FloatingPoint/hls_isnan.h:16:0)" resolution=""/>
```

```xml
<?xml version="1.0" encoding="UTF-8"?>
<log date="2015-08-28T08:53:32.279+01:00">
 <info method="org.xmlcml.ami2.plugins.phylotree.PhyloTreeArgProcessor.ensureOutputDirectory" message="PhyloTree output to: target/junk/1440748412279; suggest you setOutputDir()" millis="0"/>
 <error method="org.xmlcml.ami2.plugins.phylotree.PhyloTreeArgProcessor.processOtu" message="ERR_BAD_SYNTAX []" millis="20418"/>
```

```xml
<?xml version='1.0' encoding='utf-8'?>
<resources>
    <string name="app_name">ArbitriumClient</string>
    <string name="launcher_name">@string/app_name</string>
    <string name="activity_name">@string/launcher_name</string>
</resources>
```

```xml
<?xml version='1.0' encoding='utf-8' standalone='yes'?>
<song>
  <meta>
    <id>2980</id>
    <date>
      <year-start>1624</year-start>
      <year-end>1624</year-end>
    </date>
    <location>
      <orginal-name>[hoorn]</orginal-name>
      <standard-name>Hoorn, The Netherlands</standard-name>
      <coordinates>
        <lon>52.653272</lon>
        <lat>5.0735802</lat>
      </coordinates>
    </location>
    <tags/>
    <melody>Lady Laiton's allemande</melody>
  </meta>
  <text>
    <lg type="song">
      <lg id="s1" type="stanza">
        <l id="s1:l1" met="4" type="-+">DOor eygen-liefdes <rhyme label="a" type="m">opgeweck</rhyme>,</l>
        <l id="s1:l2" met="3" type="-+">Dat steedts het herte by <rhyme label="b" type="f">is</rhyme>,</l>
```

```xml
<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from ./robots/r2c5_dynamics.xacro   | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="r2" xmlns:xacro="http://www.ros.org/wiki/xacro">
  <link name="r2/world_ref"/>
  <joint name="r2/fixed/world_ref/robot_world" type="fixed">
    <parent link="r2/world_ref"/>
    <child link="r2/robot_world"/>
    <origin rpy="0 0 0" xyz="0 0 0"/>
  </joint>
  <link name="r2/robot_world">
    <inertial>
      <mass value="0.01"/>
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001"/>
    </inertial>
  </link>
  <joint name="r2/fixed/robot_world/robot_base" type="fixed">
    <parent link="r2/robot_world"/>
    <child link="r2/robot_base"/>
    <origin rpy="0.0 3.14159 3.14159" xyz="0.0 0.0 0.0"/>
  </joint>
  <link name="r2/robot_base">
    <inertial>
      <mass value="0.01"/>
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001"/>
    </inertial>
  </link>
  <material name="white">
    <color rgba="1.0 1.0 1.0 1.0"/>
  </material>
  <material name="dirty_white">
    <color rgba="0.322 0.322 0.322 1.0"/>
  </material>
  <material name="gold">
    <color rgba=".878 .49 0.008 1"/>
  </material>
  <material name="steel">
    <color rgba=".7 .7 .7 1"/>
  </material>
  <material name="blue">
    <color rgba="0 0 0.8 1"/>
  </material>
  <joint name="r2/fixed/robot_base/waist_mass" type="fixed">
    <parent link="r2/robot_base"/>
    <child link="r2/waist_mass"/>
    <origin rpy="0.0 0 0.0" xyz="0.0 0.0 -0.086855"/>
  </joint>
  <link name="r2/waist_mass">
    <inertial>
      <mass value="4.6259465"/>
      <origin rpy="0.0 0 0.0" xyz="-0.00012809088 0.000041480778 0.039080994"/>
      <inertia ixx="0.01684448" ixy="0.00021529806" ixz="-0.0000036013959" iyy="0.017313387" iyz="0.0" izz="0.028769348"/>
    </inertial>
  </link>
  <joint name="r2/waist/joint0" type="revolute">
    <parent link="r2/robot_base"/>
    <child link="r2/waist_center"/>
    <axis xyz="0 0 1"/>
    <origin rpy="0.0 0 0.0" xyz="0.0 0.0 0.0"/>
    <dynamics damping="10.0" friction="0.0"/>
    <limit effort="10000000.0" lower="-3.14" upper="3.14" velocity="1000"/>
  </joint>
  <!--includes mass properties of all torso componenents-->
  <link name="r2/waist_center">
    <visual>
      <geometry>
        <mesh filename="package://r2_description/meshes/r2_upperbody/Body.dae"/>
      </geometry>
      <origin rpy="-1.5708 0 -1.5708" xyz="0.02 0.05 -0.5625"/>
    </visual>
    <collision>
      <geometry>
        <mesh filename="package://r2_description/meshes/r2_upperbody/Body.dae"/>
      </geometry>
      <origin rpy="-1.5708 0 -1.5708" xyz="0.02 0.05 -0.5625"/>
    </collision>
    <inertial>
      <mass value="47.770842"/>
```

```xml
<?xml version="1.0" encoding="UTF-8"?>
<cesAna version="1.0.4" xmlns="http://www.xces.org/schema/2003" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.xces.org/schema/2003 http://www.xces.org/schema/2003/xcesAna.xsd">
 <struct from="0" id="a00577612_wf1" to="4" type="man">
  <feat name="wnsk" value="make%2:30:00::"/>
  <feat name="text" value="made"/>
 </struct>
 <struct from="5" id="a00577612_wf2" to="15" type="un">
  <feat name="text" value="compatible"/>
 </struct>
 <struct from="19" id="a00577612_wf4" to="29" type="man">
  <feat name="wnsk" value="consistent%3:00:00::"/>
  <feat name="text" value="consistent"/>
 </struct>
 <struct from="31" id="a00577698_wf1" to="34" type="auto">
  <feat name="wnsk" value="not%4:02:00::"/>
  <feat name="text" value="not"/>
 </struct>
 <struct from="35" id="a00577698_wf2" to="53" type="man">
  <feat name="wnsk" value="self-contradictory%3:00:00:inconsistent:00"/>
  <feat name="text" value="self-contradictory"/>
 </struct>
 <struct from="73" id="a00577782_wf4" to="77" type="un">
  <feat name="text" value="same"/>
 </struct>
 <struct from="78" id="a00577782_wf5" to="88" type="man">
  <feat name="wnsk" value="principle%1:09:01::"/>
  <feat name="text" value="principles"/>
 </struct>
 <struct from="109" id="a00577782_wf10" to="113" type="un">
  <feat name="text" value="over"/>
 </struct>
 <struct from="114" id="a00577782_wf11" to="118" type="un">
  <feat name="text" value="time"/>
 </struct>
 <struct from="120" id="a00577920_wf1" to="130" type="un">
  <feat name="text" value="displaying"/>
 </struct>
 <struct from="133" id="a00577920_wf3" to="137" type="man">
  <feat name="wnsk" value="lack%1:26:00::"/>
  <feat name="text" value="lack"/>
 </struct>
 <struct from="141" id="a00577920_wf5" to="152" type="man">
  <feat name="wnsk" value="consistency%1:26:00::"/>
  <feat name="text" value="consistency"/>
 </struct>
 <struct from="154" id="a00577920_wf7" to="166" type="auto">
  <feat name="wnsk" value="inconsistent%3:00:00::"/>
  <feat name="text" value="inconsistent"/>
 </struct>
 <struct from="167" id="a00577920_wf8" to="177" type="un">
  <feat name="text" value="statements"/>
 </struct>
 <struct from="185" id="a00577920_wf11" to="189" type="un">
  <feat name="text" value="both"/>
 </struct>
```

```xml
<resources>

        <string-array name="pref_units_options">
            <item>@string/pref_units_label_metric</item>
            <item>@string/pref_units_label_imperial</item>
        </string-array>

        <string-array name="pref_units_values">
            <item>@string/pref_units_metric</item>
            <item>@string/pref_units_imperial</item>
        </string-array>
    </resources>
```

```xml
<groupId>com.musenbrock</groupId>
    <artifactId>gitflow-maven-test</artifactId>
    <packaging>pom</packaging>
    <version>3.0.0-SNAPSHOT</version>
</project>
```

```xml
<?xml version="1.0" encoding="utf-8"?> 
<RDCMan schemaVersion="1"> 
    <version>2.2</version> 
    <file> 
        <properties> 
            <name></name> 
            <expanded>True</expanded> 
            <comment /> 
            <logonCredentials inherit="None"> 
                <userName></userName> 
                <domain></domain> 
                <password storeAsClearText="False"></password> 
            </logonCredentials> 
            <connectionSettings inherit="FromParent" /> 
            <gatewaySettings inherit="FromParent" /> 
            <remoteDesktop inherit="FromParent" /> 
            <localResources inherit="FromParent" /> 
            <securitySettings inherit="FromParent" /> 
            <displaySettings inherit="FromParent" /> 
        </properties> 
		<group> 
            <properties> 
                <name></name> 
                <expanded>True</expanded> 
                <comment /> 
                <logonCredentials inherit="FromParent" /> 
                <connectionSettings inherit="FromParent" /> 
                <gatewaySettings inherit="None"> 
                    <userName></userName> 
                    <domain></domain> 
                    <password storeAsClearText="False" /> 
                    <enabled>False</enabled> 
                    <hostName /> 
                    <logonMethod>4</logonMethod> 
                    <localBypass>False</localBypass> 
                    <credSharing>False</credSharing> 
                </gatewaySettings> 
                <remoteDesktop inherit="FromParent" /> 
                <localResources inherit="FromParent" /> 
                <securitySettings inherit="FromParent" /> 
                <displaySettings inherit="FromParent" /> 
            </properties> 
            <server> 
                <name></name> 
                <displayName></displayName> 
                <comment />
```

```xml
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>SchemeUserState</key>
	<dict>
		<key>KYBezierBounceView.xcscheme</key>
		<dict>
			<key>orderHint</key>
			<integer>0</integer>
		</dict>
	</dict>
	<key>SuppressBuildableAutocreation</key>
	<dict>
		<key>5F7FADA11A930DEA00CEF622</key>
		<dict>
			<key>primary</key>
			<true/>
		</dict>
		<key>5F7FADBA1A930DEA00CEF622</key>
		<dict>
			<key>primary</key>
			<true/>
		</dict>
	</dict>
</dict>
</plist>
```

```xml
<Sysmon schemaversion="4.1">
   <EventFiltering>
      <FileCreate onmatch="include">
			     <TargetFilename condition="end with">.py</TargetFilename> <!--Python [ More information: https://attack.mitre.org/wiki/Group/G0035 ] -->
			     <TargetFilename condition="end with">.pyc</TargetFilename> <!--Python compiled code -->
           <TargetFilename condition="end with">.pyw</TargetFilename> <!--Python script to be ran with console suppressed -->
		</FileCreate>
  </EventFiltering>
</Sysmon>
```

```xml
<?xml version="1.0" encoding="UTF-8"?>
<section name="Workbench">
	<section name="org.eclipse.ui.internal.QuickAccess">
		<item key="dialogHeight" value="-1"/>
		<item key="dialogWidth" value="-1"/>
		<list key="orderedElements">
		</list>
		<list key="orderedProviders">
		</list>
		<list key="textEntries">
		</list>
		<list key="textArray">
		</list>
	</section>
	<section name="NewWizardAction">
		<item key="NewWizardSelectionPage.STORE_SELECTED_ID" value="org.eclipse.wb.swing.JFrame"/>
		<list key="NewWizardSelectionPage.STORE_EXPANDED_CATEGORIES_ID">
			<item value="org.eclipse.jdt.ui.java"/>
			<item value="org.eclipse.wb"/>
			<item value="org.eclipse.wb/org.eclipse.wb.swing"/>
		</list>
	</section>
</section>
```

```scala
package Problems

object p17 extends Problem {
  
  val simple_name = Array("zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "ten",
    "eleven", "twelve", "thirteen", "fourteen", "fifteen", "sixteen", "seventeen", "eighteen", "nineteen")
    .map(_.length)
  
  val tens = Array("", "ten", "twenty", "thirty", "forty", "fifty", "sixty", "seventy", "eighty", "ninety")
    .map(_.length)
  
  val hundred = "hundred".length
  
  val thousand = "thousand".length
  
  val and = "and".length
  
  lazy val name: Int => Int = {
    case n if n < 20 =>
      simple_name(n)
    case n if n < 100 =>
      tens(n / 10) + (if (n % 10 > 0) simple_name(n % 10) else 0)
    case n if n < 1000 =>
      simple_name(n / 100) + hundred + (if (n % 100 > 0) and + name(n % 100) else 0)
    case n if n < 10000 =>
      simple_name(n / 1000) + thousand + (if (n % 1000 > 0) and + name(n % 1000) else 0)
  }
  
  override def solve(): Long = (1 to 1000).map(name).sum
}
```

```scala
object Main {

  import java.util.Scanner
  
  def main(args: Array[String]): Unit = {
    val sc = new Scanner(System.in)
    val writer = new java.io.PrintWriter(System.out)
    writer.println(solve(sc))
    writer.flush()
  }

  def solve(sc: Scanner): String = {
    val (a, b) = (sc.nextInt(), sc.nextInt())
    debug(a, b)

    (if (a >= 13) {
      b
    } else if (a >= 6 && a <= 12) {
      b / 2
    } else {
      0
    }).toString
  }

  private def debug(x: Any): Unit = {
    if (System.getenv("LOCAL_DEBUG") != null) println(x)
  }
}
```

```scala
package hmda.publisher.query.lar

import hmda.model.publication.Msa
import org.scalatest.{ FreeSpecLike, MustMatchers, PropSpec }
import org.scalatestplus.scalacheck.ScalaCheckPropertyChecks
import org.scalacheck.ScalacheckShapeless._
import org.scalacheck._

class LarEntityImpl2019Test extends PropSpec with ScalaCheckPropertyChecks with MustMatchers {

  property("LarEntityImpl2019 must convert to and from psv") {
    forAll { (lar: LarEntityImpl2019) =>
      val psvRow     = lar.toRegulatorPSV
      val larFromPsv = LarEntityImpl2019.parseFromPSVUnsafe(psvRow)
      larFromPsv mustBe lar.copy(larPartSeven = LarPartSeven2019())
    }
  }

  property("LarEntityImpl2019WithMsa must convert to and from psv") {
    forAll { (lar: LarEntityImpl2019WithMsa) =>
      // csv uses only some columns of part seven
      val partSeven = {
        val empty = LarPartSeven2019()
        lar.larEntityImpl2019.larPartSeven.copy(
          ethnicityCategorization = empty.ethnicityCategorization,
          raceCategorization = empty.raceCategorization,
          sexCategorization = empty.sexCategorization,
          dwellingCategorization = empty.dwellingCategorization,
          loanProductTypeCategorization = empty.loanProductTypeCategorization
        )
      }
      val psvRow     = lar.toRegulatorPSV
      val larFromPsv = LarEntityImpl2019WithMsa.parseFromPSVUnsafe(psvRow)
      larFromPsv mustBe lar.copy(
        msa = Msa(lar.msa.id, lar.msa.name),// csv uses only those 2 columns, rest will be default
        larEntityImpl2019 = lar.larEntityImpl2019.copy(larPartSeven = partSeven)
      )
    }
  }

}
```

```scala
/*
 * Copyright 2021 HM Revenue & Customs
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package uk.gov.hmrc.healthindicators.persistence

import org.mongodb.scala.model.Indexes._
import org.mongodb.scala.model.{IndexModel, IndexOptions}
import uk.gov.hmrc.healthindicators.models.AveragePlatformScore
import uk.gov.hmrc.mongo.MongoComponent
import uk.gov.hmrc.mongo.play.json.PlayMongoRepository

import javax.inject.Inject
import scala.concurrent.{ExecutionContext, Future}

class AveragePlatformScoreRepository @Inject() (
  mongoComponent: MongoComponent
)(implicit ec: ExecutionContext)
    extends PlayMongoRepository[AveragePlatformScore](
      collectionName = "averagePlatformScores",
      mongoComponent = mongoComponent,
      domainFormat = AveragePlatformScore.format,
      indexes = Seq(
        IndexModel(descending("timestamp"), IndexOptions().background(true))
      )
    ) {

  def insert(averagePlatformScore: AveragePlatformScore): Future[Unit] =
    collection
      .insertOne(
        averagePlatformScore
      )
      .toFuture()
      .map(_ => ())

  def findLatest: Future[Option[AveragePlatformScore]] =
    collection
      .find()
      .sort(descending("timestamp"))
      .headOption()

  def findAll(): Future[Seq[AveragePlatformScore]] =
    collection
      .find()
      .sort(descending("timestamp"))
      .toFuture()

}
```

```scala
package org.aiotrade.lib.math.algebra


/**
 * The basic interface including numerous convenience functions <p/> NOTE: All implementing classes must have a
 * constructor that takes an int for cardinality and a no-arg constructor that can be used for marshalling the Writable
 * instance <p/> NOTE: Implementations may choose to reuse the Vector.Element in the Iterable methods
 */
@cloneable
trait Vector extends Iterable[Vector.Element] {

  type Element = Vector.Element
  
  /** @return a formatted String suitable for output */
  def asFormatString: String

  /**
   * Assign the value to all elements of the receiver
   *
   * @param value a Double value
   * @return the modified receiver
   */
  def assign(value: Double): Vector

  /**
   * Assign the values to the receiver
   *
   * @param values a Double[] of values
   * @return the modified receiver
   * @throws CardinalityException if the cardinalities differ
   */
  def assign(values: Array[Double]): Vector

  /**
   * Assign the other vector values to the receiver
   *
   * @param other a Vector
   * @return the modified receiver
   * @throws CardinalityException if the cardinalities differ
   */
  def assign(other: Vector): Vector

  /**
   * Apply the function to each element of the receiver
   *
   * @param function a Double => Double to apply
   * @return the modified receiver
   */
  def assign(function: Double => Double): Vector

  /**
   * Apply the function to each element of the receiver and the corresponding element of the other argument
   *
   * @param other    a Vector containing the second arguments to the function
```

```scala
package centaur

import better.files._
import cats.data.Validated.{Invalid, Valid}
import cats.effect.IO
import cats.instances.list._
import cats.syntax.flatMap._
import cats.syntax.traverse._
import centaur.reporting.{ErrorReporters, SuccessReporters, TestEnvironment}
import centaur.test.CentaurTestException
import centaur.test.standard.CentaurTestCase
import centaur.test.submit.{SubmitResponse, SubmitWorkflowResponse}
import org.scalatest._

import scala.concurrent.Future

@DoNotDiscover
abstract class AbstractCentaurTestCaseSpec(cromwellBackends: List[String], cromwellTracker: Option[CromwellTracker] = None) extends AsyncFlatSpec with Matchers {

  /*
  NOTE: We need to statically initialize the object so that the exceptions appear here in the class constructor.
  Otherwise instead of seeing 'java.lang.ExceptionInInitializerError' with a stack trace, there will be no tests
  generated, and no errors, resulting in 'Total number of tests run: 0' and 'No tests were executed.'
   */
  ErrorReporters.getClass
  SuccessReporters.getClass

  private def testCases(baseFile: File): List[CentaurTestCase] = {
    val files = baseFile.list.filter(_.isRegularFile).toList
    val testCases = files.traverse(CentaurTestCase.fromFile(cromwellTracker))

    testCases match {
      case Valid(l) => l
      case Invalid(e) => throw new IllegalStateException("\n" + e.toList.mkString("\n") + "\n")
    }
  }

  def allTestCases: List[CentaurTestCase] = {
    val optionalTestCases = CentaurConfig.optionalTestPath map (File(_)) map testCases getOrElse List.empty
    val standardTestCases = testCases(CentaurConfig.standardTestCasePath)
    optionalTestCases ++ standardTestCases
  }

  def executeStandardTest(testCase: CentaurTestCase): Unit = {
    def nameTest = s"${testCase.testFormat.testSpecString} ${testCase.workflow.testName}"

    def runTest(): IO[SubmitResponse] = testCase.testFunction.run

    // Make tags, but enforce lowercase:
    val tags = (testCase.testOptions.tags :+ testCase.workflow.testName :+ testCase.testFormat.name) map { x => Tag(x.toLowerCase) }
    val isIgnored = testCase.isIgnored(cromwellBackends)
    val retries = if (testCase.workflow.retryTestFailures) ErrorReporters.retryAttempts else 0

    runOrDont(nameTest, tags, isIgnored, retries, runTest())
  }

  def executeWdlUpgradeTest(testCase: CentaurTestCase): Unit =
    executeStandardTest(wdlUpgradeTestWdl(testCase))

  private def wdlUpgradeTestWdl(testCase: CentaurTestCase): CentaurTestCase = {
    import better.files.File
    import womtool.WomtoolMain

    // The suffix matters because WomGraphMaker.getBundle() uses it to choose the language factory
    val rootWorkflowFile = File.newTemporaryFile(suffix = ".wdl").append(testCase.workflow.data.workflowContent.get)
    val workingDir = File.newTemporaryDirectory()
    val upgradedImportsDir = File.newTemporaryDirectory()
    val rootWorkflowFilepath = workingDir / rootWorkflowFile.name

    // Un-upgraded imports go into the working directory
    testCase.workflow.data.zippedImports match {
      case Some(importsZip: File) =>
        importsZip.unzipTo(workingDir)
      case None => ()
    }

    // Upgrade the imports and copy to main working dir (precludes transitive imports; no recursion yet)
    workingDir.list.toList.map { file: File =>
      val upgradedWdl = WomtoolMain.upgrade(file.pathAsString).stdout.get
      upgradedImportsDir.createChild(file.name).append(upgradedWdl)
    }

    // Copy to working directory after we operate on the imports that are in it
    rootWorkflowFile.copyTo(rootWorkflowFilepath)

    val upgradeResult = WomtoolMain.upgrade(rootWorkflowFilepath.pathAsString)

    upgradeResult.stderr match {
```

```scala
/*
 * Copyright 2011-2019 GatlingCorp (https://gatling.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.gatling.http.action.sse

import io.gatling.core.session.{ Expression, SessionPrivateAttributes }
import io.gatling.http.check.sse.SseMessageCheck
import io.gatling.http.request.builder.sse.SseConnectRequestBuilder

object Sse {
  private val DefaultSseName = SessionPrivateAttributes.PrivateAttributePrefix + "http.sse"

  @SuppressWarnings(Array("org.wartremover.warts.DefaultArguments"))
  // binary compat
  def apply(requestName: Expression[String], sseName: String = DefaultSseName): Sse = new Sse(requestName, sseName)

  def checkMessage(name: String) = SseMessageCheck(name, Nil, Nil)
}

class Sse(requestName: Expression[String], sseName: String) {

  def sseName(sseName: String) = new Sse(requestName, sseName)

  def connect(url: Expression[String]) = SseConnectRequestBuilder(requestName, url, sseName)

  def setCheck = SseSetCheckBuilder(requestName, sseName, Nil)

  def close() = SseCloseBuilder(requestName, sseName)
}
```

```scala
object Main extends App {
  val Array(n, k) = io.StdIn.readLine().split(' ').map(_.toInt)
  val pn = io.StdIn.readLine().split(' ').map(_.toInt)
  var max: Double = 0
  var start = 0
  var end = 0
  for (i <- 0 to n-k) {
    val sub = pn.slice(i, i+k)
    val sum = sub.sum
    if (max < sum) {max = sum; start = i; end = i+k}
  }

  val exp = pn.slice(start,end).map(x => (1 to x).sum / x.toDouble).sum
  println(exp)
}
```

```scala
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

package smithy4s.codegen.cli

import smithy4s.codegen.ModelLoader
import software.amazon.smithy.model.node.Node
import software.amazon.smithy.model.shapes.ModelSerializer

object DumpModel {
  def run(args: Smithy4sCommand.DumpModelArgs): String = {
    val (_, model) = ModelLoader.load(
      args.specs.map(_.toIO).toSet,
      args.dependencies,
      args.repositories,
      args.transformers,
      discoverModels = false
    )

    Node.prettyPrintJson(ModelSerializer.builder().build.serialize(model))
  }
}
```

```scala
package typingsSlinky.ethers.ethersMod.utils

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

@JSImport("ethers/lib/ethers", "utils.soliditySha256")
@js.native
object soliditySha256 extends js.Object {
  
  def apply(types: js.Array[String], values: js.Array[_]): String = js.native
}
```

```scala
/*
 * Copyright 2022 HM Revenue & Customs
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package v1.models.request.createAmendOtherCgt

import play.api.mvc.AnyContentAsJson
import api.models.request.RawData

case class CreateAmendOtherCgtRawData(nino: String, taxYear: String, body: AnyContentAsJson) extends RawData
```

```scala
override protected[sql] lazy val analyzer: Analyzer =
      new Analyzer(catalog, functionRegistry, caseSensitive = false) {
        override val extendedResolutionRules =
          PreInsertCastAndRename ::
          Nil

        override val extendedCheckRules = Seq(
          sources.PreWriteCheck(catalog)
        )
      }
  }
}
```

```scala
package org.jetbrains.sbtidea.structure

trait ProjectStructureExtractor {
  type NodeType <: ProjectNode
  type ProjectDataType

  def collectChildren(node: NodeType, data: ProjectDataType): Seq[NodeType]
  def collectParents(node: NodeType, data: ProjectDataType): Seq[NodeType]
  def collectLibraries(data: ProjectDataType): Seq[Library]
  def buildStub(data: ProjectDataType): NodeType
  def updateNode(node: NodeType, data: ProjectDataType) : NodeType
  def extract: Seq[NodeType]
}
```

```scala
package com.github.fluency03.multibase

object Base16Impl {

  def encode(data: Array[Byte], base16: Base16RFC4648): String =
    data.flatMap(b => byteToChars(b, base16.alphabet.toCharArray))
      .mkString

  private def byteToChars(byte: Byte, alphabet: Array[Char]): Array[Char] = Array(
    alphabet(MASK_4BITS(byte >>> 4)),
    alphabet(MASK_4BITS(byte))
  )


  def decode(data: String, base16: Base16RFC4648): Array[Byte] =
    data.toCharArray
      .grouped(2)
      .map(g => twoCharsToByte(g, base16.alphabetPos))
      .toArray

  private def twoCharsToByte(tuple: Array[Char], pos: Map[Char, Int]): Byte =
    (pos(tuple(0)) << 4 | pos(tuple(1))).toByte

}
```

```scala
import lspace.structure.{Property => LProperty, OntologyDef}
object CreativeWorkSeries extends OntologyDef(
        iri = "http://schema.org/CreativeWorkSeries",
        iris = Set("http://schema.org/CreativeWorkSeries"),
        label = "CreativeWorkSeries",
        comment = """A CreativeWorkSeries in schema.org is a group of related items, typically but not necessarily of the same kind. CreativeWorkSeries are usually organized into some order, often chronological. Unlike <a class="localLink" href="http://schema.org/ItemList">ItemList</a> which is a general purpose data structure for lists of things, the emphasis with CreativeWorkSeries is on published materials (written e.g. books and periodicals, or media such as tv, radio and games).<br/><br/>

Specific subtypes are available for describing <a class="localLink" href="http://schema.org/TVSeries">TVSeries</a>, <a class="localLink" href="http://schema.org/RadioSeries">RadioSeries</a>, <a class="localLink" href="http://schema.org/MovieSeries">MovieSeries</a>, <a class="localLink" href="http://schema.org/BookSeries">BookSeries</a>, <a class="localLink" href="http://schema.org/Periodical">Periodical</a> and <a class="localLink" href="http://schema.org/VideoGameSeries">VideoGameSeries</a>. In each case, the <a class="localLink" href="http://schema.org/hasPart">hasPart</a> / <a class="localLink" href="http://schema.org/isPartOf">isPartOf</a> properties can be used to relate the CreativeWorkSeries to its parts. The general CreativeWorkSeries type serves largely just to organize these more specific and practical subtypes.<br/><br/>

It is common for properties applicable to an item from the series to be usefully applied to the containing group. Schema.org attempts to anticipate some of these cases, but publishers should be free to apply properties of the series parts to the series as a whole wherever they seem appropriate.""",
        `@extends` = List(CreativeWork.ontology, Series.ontology)
       ){
object keys extends lspace.ns.vocab.schema.CreativeWork.Properties with lspace.ns.vocab.schema.Series.Properties{
lazy val endDate = lspace.ns.vocab.schema.endDate.property
lazy val issn = lspace.ns.vocab.schema.issn.property
lazy val startDate = lspace.ns.vocab.schema.startDate.property
}
override lazy val properties: List[LProperty] = List(endDate, issn, startDate)
trait Properties extends lspace.ns.vocab.schema.CreativeWork.Properties with lspace.ns.vocab.schema.Series.Properties{
lazy val endDate = lspace.ns.vocab.schema.endDate.property
lazy val issn = lspace.ns.vocab.schema.issn.property
lazy val startDate = lspace.ns.vocab.schema.startDate.property
}
}
```

```scala
// Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0

package com.daml.platform.store.entries

import java.time.Instant

import com.daml.ledger.participant.state.v1.SubmissionId
import com.daml.ledger.api.domain.PackageEntry

sealed abstract class PackageLedgerEntry extends Product with Serializable {
  def submissionId: SubmissionId
  def toDomain: PackageEntry
}

object PackageLedgerEntry {

  final case class PackageUploadAccepted(
      submissionId: SubmissionId,
      recordTime: Instant
  ) extends PackageLedgerEntry {
    override def toDomain: PackageEntry =
      PackageEntry.PackageUploadAccepted(
        submissionId,
        recordTime
      )
  }

  final case class PackageUploadRejected(
      submissionId: SubmissionId,
      recordTime: Instant,
      reason: String
  ) extends PackageLedgerEntry {
    override def toDomain: PackageEntry =
      PackageEntry.PackageUploadRejected(
        submissionId,
        recordTime,
        reason
      )
  }
}
```

```scala
val reqResource = s"${req.method.toString.toUpperCase} ${req.uri} ${req.version}"

    svc(req).onSuccess { rsp =>
      val statusCode = rsp.statusCode
      val responseBytes = rsp.contentLength.map(_.toString).getOrElse("-")
      val requestEndTime = new TimeFormat("dd/MM/yyyy:HH:mm:ss Z").format(Time.now)
      log.info(s"""$hostHeader $remoteHost $identd $user [$requestEndTime] "$reqResource" $statusCode $responseBytes "$referer" "$userAgent"""")
    }
  }
}

object AccessLogger {

  object param {
    case class File(path: String)
    implicit object File extends Stack.Param[File] {
      val default = File("")
    }

    case class RollPolicy(policy: Policy)
    implicit object RollPolicy extends Stack.Param[RollPolicy] {
      val default = RollPolicy(Policy.Never)
    }

    case class Append(append: Boolean)
    implicit object Append extends Stack.Param[Append] {
      val default = Append(true)
    }

    case class RotateCount(count: Int)
    implicit object RotateCount extends Stack.Param[RotateCount] {
      val default = RotateCount(-1)
    }
  }

  val module: Stackable[ServiceFactory[Request, Response]] =
    new Stack.Module4[param.File, param.RollPolicy, param.Append, param.RotateCount, ServiceFactory[Request, Response]] {
      val role = Stack.Role("HttpAccessLogger")
      val description = "Log Http requests/response summaries to a file"
      def make(
        file: param.File,
        roll: param.RollPolicy,
```

```scala
/*
 * Copyright 2021 Carlos Conyers
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package little.time

import java.time.{ DayOfWeek, Duration, LocalDateTime, Period, YearMonth }

import DayOfWeek.*
import TimePrecision.*

class LocalDateTimeMethodsSpec extends org.scalatest.flatspec.AnyFlatSpec:
  private val dateTime = LocalDateTime.parse("2019-07-11T12:38:45.123456789")

  "LocalDateTime" should "have duration added" in {
    assert(dateTime + Duration.ofSeconds(1) == LocalDateTime.parse("2019-07-11T12:38:46.123456789"))
    assert(dateTime + Duration.ofMinutes(2) == LocalDateTime.parse("2019-07-11T12:40:45.123456789"))
    assert(dateTime + Duration.ofHours(31)  == LocalDateTime.parse("2019-07-12T19:38:45.123456789"))
    assert(dateTime + Duration.ofMillis(5)  == LocalDateTime.parse("2019-07-11T12:38:45.128456789"))
    assert(dateTime + Duration.ofNanos(2)   == LocalDateTime.parse("2019-07-11T12:38:45.123456791"))
    assert(dateTime + Duration.ofDays(7)    == LocalDateTime.parse("2019-07-18T12:38:45.123456789"))

    assert(dateTime + Duration.ofSeconds(-1) == LocalDateTime.parse("2019-07-11T12:38:44.123456789"))
    assert(dateTime + Duration.ofMinutes(-2) == LocalDateTime.parse("2019-07-11T12:36:45.123456789"))
    assert(dateTime + Duration.ofHours(-31)  == LocalDateTime.parse("2019-07-10T05:38:45.123456789"))
    assert(dateTime + Duration.ofMillis(-5)  == LocalDateTime.parse("2019-07-11T12:38:45.118456789"))
    assert(dateTime + Duration.ofNanos(-2)   == LocalDateTime.parse("2019-07-11T12:38:45.123456787"))
    assert(dateTime + Duration.ofDays(-7)    == LocalDateTime.parse("2019-07-04T12:38:45.123456789"))
  }

  it should "be have duration subtracted" in {
    assert(dateTime - Duration.ofSeconds(1) == LocalDateTime.parse("2019-07-11T12:38:44.123456789"))
    assert(dateTime - Duration.ofMinutes(2) == LocalDateTime.parse("2019-07-11T12:36:45.123456789"))
    assert(dateTime - Duration.ofHours(31)  == LocalDateTime.parse("2019-07-10T05:38:45.123456789"))
    assert(dateTime - Duration.ofMillis(5)  == LocalDateTime.parse("2019-07-11T12:38:45.118456789"))
    assert(dateTime - Duration.ofNanos(2)   == LocalDateTime.parse("2019-07-11T12:38:45.123456787"))
    assert(dateTime - Duration.ofDays(7)    == LocalDateTime.parse("2019-07-04T12:38:45.123456789"))

    assert(dateTime - Duration.ofSeconds(-1) == LocalDateTime.parse("2019-07-11T12:38:46.123456789"))
    assert(dateTime - Duration.ofMinutes(-2) == LocalDateTime.parse("2019-07-11T12:40:45.123456789"))
```

```scala
package examples.benchmarks.symbolic_benchmarks

import examples.benchmarks.AggregationFunctions
import org.apache.spark.rdd.RDD
import org.apache.spark.{SparkConf, SparkContext}
import sparkwrapper.SparkContextWithDP
import symbolicprimitives.{SymInt, SymString, Utils}

/**
  * Created by ali on 7/20/17.
  * Copied from BigSiftUI repo by jteoh on 4/16/20
  * https://github.com/maligulzar/BigSiftUI/blob/master/src/airport/AirportTransitAnalysis.scala
  * Logging and other miscellaneous bigsift-specific functionality is removed.
  */
object AirportTransitSymbolic {
  def main(args: Array[String]): Unit = {
    //set up spark configuration
    val sparkConf = new SparkConf()
    var logFile = ""
    var local = 500
    if (args.length < 2) {
      sparkConf.setMaster("local[6]")
      sparkConf.setAppName("Airport Transit Time Analysis").set("spark.executor.memory", "2g")
      logFile = "datasets/airportdata"
    } else {
      logFile = args(0)
      local = args(1).toInt
    } //set up spark context
    val ctx = new SparkContext(sparkConf) //set up lineage context and start capture lineage
    val scdp = new SparkContextWithDP(ctx)
    val input = scdp.textFileSymbolic(logFile)
    Utils.setUDFAwareDefaultValue(true)
    
    val map = input.map { s =>
      val tokens = s.split(",")
      val dept_hr = tokens(3).split(":")(0)
      val diff = getDiff(tokens(2), tokens(3))
      val airport = tokens(4)
      ((airport, dept_hr), diff)
    }
    val fil = map.filter { v =>
      v._2 < 45
    }
    // TODO: define some sort of influence function
    val out = AggregationFunctions.sumByKey(fil)
    
    out.collectWithProvenance().foreach(println)
  }
  
  def getDiff(arr: SymString, dep: SymString): SymInt = {
    val arr_min = arr.split(":")(0).toInt * 60 + arr.split(":")(1).toInt
    val dep_min = dep.split(":")(0).toInt * 60 + dep.split(":")(1).toInt
    if(dep_min - arr_min < 0){
      return dep_min - arr_min + 24*60
    }
    return dep_min - arr_min
  }
  
  
}
```

```scala
package io.sphere.json


import cats.data.Validated.Valid
import cats.data.ValidatedNel
import cats.syntax.apply._
import cats.syntax.option._

import scala.annotation.meta.getter
import scala.collection.mutable.ListBuffer
import scala.language.experimental.macros
import scala.reflect.{ClassTag, classTag}
import io.sphere.util.{Logging, Memoizer, Reflect}
import org.json4s.JsonAST._
import org.json4s.jackson.compactJson
import org.json4s.JsonDSL._

/** The generic package provides generic functions for deriving JSON instances via
  * some runtime & compile-time reflection. */
package object generic extends Logging {
  // Type aliases for more convenient use of the annotations in Scala code
  type JSONEmbedded = io.sphere.json.annotations.JSONEmbedded @getter
  type JSONKey = io.sphere.json.annotations.JSONKey @getter
  type JSONIgnore = io.sphere.json.annotations.JSONIgnore @getter
  type JSONTypeHint = io.sphere.json.annotations.JSONTypeHint
  type JSONTypeHintField = io.sphere.json.annotations.JSONTypeHintField
```

```scala
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.apache.spark.sql.internal

import java.util.Locale

import org.apache.spark.sql.catalyst.catalog.CatalogStorageFormat

case class HiveSerDe(
  inputFormat: Option[String] = None,
  outputFormat: Option[String] = None,
  serde: Option[String] = None)

object HiveSerDe {
  val serdeMap = Map(
    "sequencefile" ->
      HiveSerDe(
        inputFormat = Option("org.apache.hadoop.mapred.SequenceFileInputFormat"),
        outputFormat = Option("org.apache.hadoop.mapred.SequenceFileOutputFormat")),

    "rcfile" ->
      HiveSerDe(
        inputFormat = Option("org.apache.hadoop.hive.ql.io.RCFileInputFormat"),
        outputFormat = Option("org.apache.hadoop.hive.ql.io.RCFileOutputFormat"),
        serde = Option("org.apache.hadoop.hive.serde2.columnar.LazyBinaryColumnarSerDe")),

    "orc" ->
      HiveSerDe(
        inputFormat = Option("org.apache.hadoop.hive.ql.io.orc.OrcInputFormat"),
        outputFormat = Option("org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat"),
        serde = Option("org.apache.hadoop.hive.ql.io.orc.OrcSerde")),

    "parquet" ->
      HiveSerDe(
        inputFormat = Option("org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat"),
        outputFormat = Option("org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat"),
        serde = Option("org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe")),

    "textfile" ->
      HiveSerDe(
        inputFormat = Option("org.apache.hadoop.mapred.TextInputFormat"),
        outputFormat = Option("org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat")),

    "avro" ->
      HiveSerDe(
        inputFormat = Option("org.apache.hadoop.hive.ql.io.avro.AvroContainerInputFormat"),
        outputFormat = Option("org.apache.hadoop.hive.ql.io.avro.AvroContainerOutputFormat"),
        serde = Option("org.apache.hadoop.hive.serde2.avro.AvroSerDe")))

  /**
   * Get the Hive SerDe information from the data source abbreviation string or classname.
   *
   * @param source Currently the source abbreviation can be one of the following:
   *               SequenceFile, RCFile, ORC, PARQUET, and case insensitive.
   * @return HiveSerDe associated with the specified source
   */
  def sourceToSerDe(source: String): Option[HiveSerDe] = {
    val key = source.toLowerCase(Locale.ROOT) match {
      case s if s.startsWith("org.apache.spark.sql.parquet") => "parquet"
      case s if s.startsWith("org.apache.spark.sql.orc") => "orc"
      case s if s.equals("orcfile") => "orc"
      case s if s.equals("parquetfile") => "parquet"
      case s if s.equals("avrofile") => "avro"
      case s => s
    }

    serdeMap.get(key)
  }

  def getDefaultStorage(conf: SQLConf): CatalogStorageFormat = {
    val defaultStorageType = conf.getConfString("hive.default.fileformat", "textfile")
    val defaultHiveSerde = sourceToSerDe(defaultStorageType)
    CatalogStorageFormat.empty.copy(
      inputFormat = defaultHiveSerde.flatMap(_.inputFormat)
        .orElse(Some("org.apache.hadoop.mapred.TextInputFormat")),
      outputFormat = defaultHiveSerde.flatMap(_.outputFormat)
        .orElse(Some("org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat")),
      serde = defaultHiveSerde.flatMap(_.serde)
        .orElse(Some("org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe")))
  }
}
```

```scala
/*
 * Copyright (c) Neo4j Sweden AB (http://neo4j.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.opencypher.v9_0.frontend.phases

import org.opencypher.v9_0.ast.semantics.SemanticErrorDef
import org.opencypher.v9_0.util.CancellationChecker
import org.opencypher.v9_0.util.CypherExceptionFactory
import org.opencypher.v9_0.util.ErrorMessageProvider
import org.opencypher.v9_0.util.InternalNotificationLogger

trait BaseContext {
  def tracer: CompilationPhaseTracer
  def notificationLogger: InternalNotificationLogger
  def cypherExceptionFactory: CypherExceptionFactory
  def monitors: Monitors
  def errorHandler: Seq[SemanticErrorDef] => Unit

  def errorMessageProvider: ErrorMessageProvider

  def cancellationChecker: CancellationChecker
}
```

```scala
package sharkhacks.client

import japgolly.scalajs.react.vdom.all._
import sharkhacks.client.utils.CSSUtils
import sharkhacks.models.geometry.Rectangle

/**
 * Created by timmerman on 6/27/15.
 */
trait Region {
  def region: Rectangle

  def getStyles: Array[TagMod] = {
    Array(
      top := CSSUtils.px(region.top),
      left := CSSUtils.px(region.left),
      width := CSSUtils.px(region.width),
      height := CSSUtils.px(region.height)
    )
  }
}
```

```scala
*/
object ServerConfigParser {

  /**
    * Attempts to extract a server configuration from the given resource
    *
    * @param file the given configuration [[File file]]
    * @return a [[ServerConfig]]
    */
  def parse(file: File): Try[ServerConfig] = {
    for {
      doc <- Try(XML.loadFile(file))
      directories <- parseDirectories(doc)
    } yield ServerConfig(directories)
  }

  /**
    * Parses the <directories base="...">...</directories> tag
    *
    * @param root the given XML node
    * @return a [[java.util.Properties]] object containing the specified properties
    */
  private def parseDirectories(root: Node) = Try {
    (root \ "directories" map { node =>
      Directories(new File(node \@ "base"))
    } headOption) orDie "Only one directories element is allowed"
  }

}
```

```scala
package services

import com.google.inject.Inject
import models.Job
import repositories.repo.UnitOfWork

import scala.concurrent.Future


/**
  * Created by abhishekj on 5/8/16.
  */
class JobService @Inject()(uow: UnitOfWork) {
  private val jobRepository = uow.jobRepository

  def saveJob(job: Job) = {
    jobRepository.saveJob(job)
  }


  def getJobs = {
    jobRepository.getAllAsync(0, 100)
  }

  def get(id: Int): Future[Option[Job]] = {
    jobRepository.get(id)
  }

}
```

```scala
type S = s
    val factory = Rules.this
  }

  def success[Out, A](out: Out, a: A) = rule { in: Any => Success(out, a) }

  def failure = rule { in: Any => Failure }

  def error[In] = rule { in: In => Error(in) }
  def error[X](err: X) = rule { in: Any => Error(err) }

  def oneOf[In, Out, A, X](rules: Rule[In, Out, A, X] *): Rule[In, Out, A, X] = new Choice[In, Out, A, X] {
    val factory = Rules.this
    val choices = rules.toList
  }

  def ruleWithName[In, Out, A, X](_name: String, f: In => Result[Out, A, X]): Rule[In, Out, A, X] with Name =
    new DefaultRule(f) with Name {
      val name = _name
    }

  class DefaultRule[In, Out, A, X](f: In => Result[Out, A, X]) extends Rule[In, Out, A, X] {
    val factory = Rules.this
    def apply(in: In) = f(in)
  }

 /** Converts a rule into a function that throws an Exception on failure. */
```

```scala
package typingsSlinky.awsSdkRegionProvider

import typingsSlinky.awsSdkRegionProvider.defaultProviderMod.RegionProviderConfiguration
import typingsSlinky.awsSdkRegionProvider.fromEnvMod.EnvConfiguration
import typingsSlinky.awsSdkRegionProvider.fromSharedConfigFilesMod.SharedConfigInit
import typingsSlinky.awsSdkTypes.utilMod.Provider
import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

object mod {
  
  @JSImport("@aws-sdk/region-provider", "ENV_PROFILE")
  @js.native
  val ENV_PROFILE: /* "AWS_PROFILE" */ String = js.native
  
  @JSImport("@aws-sdk/region-provider", "ENV_REGION")
  @js.native
  val ENV_REGION: /* "AWS_REGION" */ String = js.native
  
  @JSImport("@aws-sdk/region-provider", "defaultProvider")
  @js.native
  def defaultProvider(): Provider[String] = js.native
  @JSImport("@aws-sdk/region-provider", "defaultProvider")
  @js.native
  def defaultProvider(configuration: RegionProviderConfiguration): Provider[String] = js.native
  
  @JSImport("@aws-sdk/region-provider", "fromEnv")
  @js.native
  def fromEnv(): Provider[String] = js.native
  @JSImport("@aws-sdk/region-provider", "fromEnv")
  @js.native
  def fromEnv(hasEnvironmentVariableName: EnvConfiguration): Provider[String] = js.native
  
  @JSImport("@aws-sdk/region-provider", "fromSharedConfigFiles")
  @js.native
  def fromSharedConfigFiles(): Provider[String] = js.native
  @JSImport("@aws-sdk/region-provider", "fromSharedConfigFiles")
  @js.native
  def fromSharedConfigFiles(init: SharedConfigInit): Provider[String] = js.native
}
```

```scala
/*
 * Copyright 2021 HM Revenue & Customs
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package uk.gov.hmrc.nisp.utils

import uk.gov.hmrc.play.test.UnitSpec

class CountrySpec extends UnitSpec {
  "isAbroad" should {
    "should return true if the Country is not in the UK" in {
      Country.isAbroad("FRANCE") shouldBe true
    }

    "should return false if the Country is GREAT BRITAIN" in {
     Country.isAbroad("GREAT BRITAIN") shouldBe false
    }

    "should return false if the Country is ISLE OF MAN" in {
     Country.isAbroad("ISLE OF MAN") shouldBe false
    }

    "should return false if the Country is NORTHERN IRELAND" in {
     Country.isAbroad("NORTHERN IRELAND") shouldBe false
    }

    "should return false if the Country is ENGLAND" in {
     Country.isAbroad("ENGLAND") shouldBe false
    }

    "should return false if the Country is SCOTLAND" in {
     Country.isAbroad("SCOTLAND") shouldBe false
    }

    "should return false if the Country is WALES" in {
     Country.isAbroad("WALES") shouldBe false
    }

    "should return false if the Country is NOT SPECIFIED OR NOT USED" in {
      Country.isAbroad("NOT SPECIFIED OR NOT USED") shouldBe false
    }

  }
}
```

```scala
import java.util.Scanner

object Main {
  def main(args: Array[String]): Unit = {
    val sc = new Scanner(System.in)
    val n = sc.next()
    for (i <- n)
      {print(if (i == '1') {"9"} else {"1"})}
    println()
  }
}
```

```scala
val cluster = Cluster(system)
    cluster.join(joinTo.getOrElse(cluster.selfAddress))

    cluster.registerOnMemberUp {
      system.actorOf(
        ClusterSingletonManager.props(
          singletonProps = Props[Singleton],
          terminationMessage = PoisonPill,
          settings = ClusterSingletonManagerSettings(system).withRemovalMargin(5.seconds)),
        name = "singletonManager")
    }

    val proxy = system.actorOf(
      ClusterSingletonProxy.props("user/singletonManager", settings = ClusterSingletonProxySettings(system)),
      s"singletonProxy-${cluster.selfAddress.port.getOrElse(0)}")

    def testProxy(msg: String): Unit = {
      val probe = TestProbe()
      probe.send(proxy, msg)
      // 25 seconds to make sure the singleton was started up
      probe.expectMsg(25.seconds, s"while testing the proxy from ${cluster.selfAddress}", "Got " + msg)
    }
  }

  val cfg = """
    akka {
      loglevel = INFO
      cluster.jmx.enabled = off
      actor.provider = "cluster"
      remote {
        classic.log-remote-lifecycle-events = off
        classic.netty.tcp {
          hostname = "127.0.0.1"
          port = 0
        }
        artery.canonical {
          hostname  = "127.0.0.1"
          port = 0
        }
      }
    }
  """

  class Singleton extends Actor with ActorLogging {

    log.info("Singleton created on {}", Cluster(context.system).selfAddress)

    def receive: Actor.Receive = {
      case msg =>
        log.info(s"Got $msg")
        sender() ! "Got " + msg
    }
  }

}
```

```scala
/*
 * Tencent is pleased to support the open source community by making Angel available.
 *
 * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in
 * compliance with the License. You may obtain a copy of the License at
 *
 * https://opensource.org/licenses/Apache-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 *
 */
package org.apache.spark.angel.graph.params

import org.apache.spark.angel.ml.param.{BooleanParam, Params}

trait HasIsCompressed extends Params {
  /**
    * Param for isCompressed.
    *
    * @group param
    */
  final val isCompressed = new BooleanParam(this, "isCompressed", "is compressed edge or not")

  final def getIsCompressed : Boolean = $(isCompressed)

  setDefault(isCompressed, false)

  final def setIsCompressed (bool: Boolean): this.type = set(isCompressed, bool)
}
```

```scala
package com.github.xiaodongw.swagger.finatra

import io.swagger.models.{ArrayModel, Model, RefModel}
import io.swagger.models.properties.{ArrayProperty, Property, RefProperty}

object SchemaUtil {
  def toModel(schema: Property): Model = {
    val model = schema match {
      case null => null
      case p: RefProperty => new RefModel(p.getSimpleRef)
      case p: ArrayProperty => {
        val arrayModel = new ArrayModel()
        arrayModel.setItems(p.getItems)
        arrayModel
      }
      case _ => null
    }
    model
  }
}
```

```scala
package pretty.plantuml

import pretty.KiamaPretty
import pretty.config.PrettyConfig
import uml.{FromTo, Relationship, RelationshipInfo, ToFrom}
import pretty.KiamaPretty._

case class RelationshipPretty()(override implicit val config: PrettyConfig) extends PlantUMLPrettyPrinter[Relationship] {
  override def toDoc(umlElement: Relationship): KiamaPretty.Doc = umlElement match {
    case Relationship(
    relationshipType,
    relationshipDirection,
    RelationshipInfo(
      sourceMultiplicity,
      targetMultiplicity,
      from,
      to,
      relationshipIdentifier,
      identifierDirection,
      _
    ),
    stereotype) =>
      RelationshipElementPretty().toDoc(from) <+>
        opt(sourceMultiplicity, (s:String) => surround(text(s),'"')) <>
        showRelationshipConnector(relationshipType,relationshipDirection) <+>
        opt(targetMultiplicity, (s:String) => surround(text(s),'"')) <>
        RelationshipElementPretty().toDoc(to) <+>
        (if(relationshipIdentifier.isDefined || stereotype.nonEmpty) {
          ":" <+>
            (if (identifierDirection.equals(ToFrom)) {
              "<" <> space
            } else {
              emptyDoc
            }) <>
            showStereotype(stereotype) <>
            opt(relationshipIdentifier, text)  <>
            (if (identifierDirection.equals(FromTo)) {
              space <> ">" <> space
            } else {
              emptyDoc
            })
        } else {
          emptyDoc
        })

  }
}
```

```scala
* @param offsetDesc Description of the current offsets up to which data has been written
 *                   by the sink.
 * @since 2.0.0
 */
@Experimental
class SinkStatus private(
    val description: String,
    val offsetDesc: String) {

  /** The compact JSON representation of this status. */
  def json: String = compact(render(jsonValue))

  /** The pretty (i.e. indented) JSON representation of this status. */
  def prettyJson: String = pretty(render(jsonValue))

  override def toString: String =
    "Status of sink " + indent(prettyString).trim

  private[sql] def jsonValue: JValue = {
    ("description" -> JString(description)) ~
    ("offsetDesc" -> JString(offsetDesc))
  }

  private[sql] def prettyString: String = {
    s"""$description
       |Committed offsets: $offsetDesc
       |""".stripMargin
  }
}

/** Companion object, primarily for creating SinkStatus instances internally */
private[sql] object SinkStatus {
  def apply(desc: String, offsetDesc: String): SinkStatus = new SinkStatus(desc, offsetDesc)
}
```

```scala
object Main extends App {
  var a = readInt
  var get = readLine
  var sum = 0
  var check = 0
  if(a>1){
  for(i <- 0 to get.size - 1){
    if(get(i) == '#') {
      check = 1
    } else if (check == 1 && get(i) != '#'){
      sum = sum + 1
    } else {
      check = 0
    }
  }
  }
  println(sum)
}
```

```scala
package fr.acinq.eclair

import akka.actor.ActorSystem
import fr.acinq.bitcoin.Crypto.PublicKey
import fr.acinq.bitcoin.{BinaryData, Satoshi, Script, Transaction, TxIn, TxOut}
import fr.acinq.eclair.blockchain.ExtendedBitcoinClient
import fr.acinq.eclair.blockchain.ExtendedBitcoinClient.SignTransactionResponse
import fr.acinq.eclair.blockchain.peer.{NewBlock, NewTransaction}
import fr.acinq.eclair.blockchain.rpc.BitcoinJsonRPCClient
import fr.acinq.eclair.transactions.Scripts

import scala.concurrent.duration._
import scala.concurrent.{ExecutionContext, Future}

/**
  * Created by PM on 26/04/2016.
  */
class TestBitcoinClient()(implicit system: ActorSystem) extends ExtendedBitcoinClient(new BitcoinJsonRPCClient("", "", "", 0)) {

  import scala.concurrent.ExecutionContext.Implicits.global

  system.scheduler.schedule(100 milliseconds, 100 milliseconds, new Runnable {
    override def run(): Unit = system.eventStream.publish(NewBlock(null)) // blocks are not actually interpreted
  })

  override def makeFundingTx(ourCommitPub: PublicKey, theirCommitPub: PublicKey, amount: Satoshi)(implicit ec: ExecutionContext): Future[(Transaction, Int)] = {
    val anchorTx = Transaction(version = 1,
      txIn = Seq.empty[TxIn],
      txOut = TxOut(amount, Script.pay2wsh(Scripts.multiSig2of2(ourCommitPub, theirCommitPub))) :: Nil,
      lockTime = 0
    )
    Future.successful((anchorTx, 0))
  }

  override def publishTransaction(tx: Transaction)(implicit ec: ExecutionContext): Future[String] = {
    system.eventStream.publish(NewTransaction(tx))
    Future.successful(tx.txid.toString())
  }

  override def getTxConfirmations(txId: String)(implicit ec: ExecutionContext): Future[Option[Int]] = Future.successful(Some(10))

  override def getTransaction(txId: String)(implicit ec: ExecutionContext): Future[Transaction] = ???

  override def fundTransaction(tx: Transaction)(implicit ec: ExecutionContext): Future[ExtendedBitcoinClient.FundTransactionResponse] = ???

  override def signTransaction(tx: Transaction)(implicit ec: ExecutionContext): Future[SignTransactionResponse] = ???

  override def getTransactionShortId(txId: String)(implicit ec: ExecutionContext): Future[(Int, Int)] = Future.successful((400000, 42))

}
```

```scala
package typingsSlinky.arcgisJsApi.esri

import typingsSlinky.arcgisJsApi.arcgisJsApiStrings.point
import typingsSlinky.arcgisJsApi.esri.geometry.Geometry
import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

@js.native
trait Point
  extends Geometry_
     with Geometry
     with geometryGeometry {
  
  /**
    * Copies all values from another Point instance.
    *
    * [Read more...](https://developers.arcgis.com/javascript/latest/api-reference/esri-geometry-Point.html#copy)
    */
  def copy(other: Point): Unit = js.native
  
  /**
    * Computes the Euclidean distance between this Point and a given Point.
    *
    * [Read more...](https://developers.arcgis.com/javascript/latest/api-reference/esri-geometry-Point.html#distance)
    */
  def distance(other: Point): Double = js.native
  
  /**
    * Determines if the input point is equal to the point calling the function.
    *
    * [Read more...](https://developers.arcgis.com/javascript/latest/api-reference/esri-geometry-Point.html#equals)
    */
  def equals(point: Point): Boolean = js.native
  
  /**
    * The latitude of the point.
    *
    * [Read more...](https://developers.arcgis.com/javascript/latest/api-reference/esri-geometry-Point.html#latitude)
    */
  var latitude: Double = js.native
  
  /**
    * The longitude of the point.
    *
    * [Read more...](https://developers.arcgis.com/javascript/latest/api-reference/esri-geometry-Point.html#longitude)
    */
  var longitude: Double = js.native
  
  /**
    * The m-coordinate of the point in map units.
    *
    * [Read more...](https://developers.arcgis.com/javascript/latest/api-reference/esri-geometry-Point.html#m)
    */
  var m: Double = js.native
  
  /**
    * Modifies the point geometry in-place by shifting the X-coordinate to within +/- 180 span in map units.
    *
    * [Read more...](https://developers.arcgis.com/javascript/latest/api-reference/esri-geometry-Point.html#normalize)
    */
  def normalize(): Point = js.native
  
  /**
    * The string value representing the type of geometry.
    *
    * [Read more...](https://developers.arcgis.com/javascript/latest/api-reference/esri-geometry-Point.html#type)
    */
  @JSName("type")
  val type_Point: point = js.native
  
  /**
    * The x-coordinate (easting) of the point in map units.
    *
    * [Read more...](https://developers.arcgis.com/javascript/latest/api-reference/esri-geometry-Point.html#x)
    */
  var x: Double = js.native
  
  /**
    * The y-coordinate (northing) of the point in map units.
    *
    * [Read more...](https://developers.arcgis.com/javascript/latest/api-reference/esri-geometry-Point.html#y)
    */
  var y: Double = js.native
  
  /**
    * The z-coordinate (or elevation) of the point in map units.
    *
    * [Read more...](https://developers.arcgis.com/javascript/latest/api-reference/esri-geometry-Point.html#z)
    */
  var z: Double = js.native
}
```

```scala
package typingsSlinky.request.mod

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

@js.native
trait ExtraPoolOptions extends PoolOptions {
  
  var maxSockets: js.UndefOr[Double] = js.native
}
object ExtraPoolOptions {
  
  @scala.inline
  def apply(): ExtraPoolOptions = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[ExtraPoolOptions]
  }
  
  @scala.inline
  implicit class ExtraPoolOptionsMutableBuilder[Self <: ExtraPoolOptions] (val x: Self) extends AnyVal {
    
    @scala.inline
    def setMaxSockets(value: Double): Self = StObject.set(x, "maxSockets", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setMaxSocketsUndefined: Self = StObject.set(x, "maxSockets", js.undefined)
  }
}
```

```scala
}

      def optionalPath(ext: String): Option[String] = {
        val path = new Path(fastaPath + ext)
        val fs = path.getFileSystem(sc.hadoopConfiguration)
        if (fs.exists(path)) {
          Some(canonicalizePath(fs, path))
        } else {
          None
        }
      }

      val pathsWithScheme = requiredExtensions.map(ext => {
        optionalPath(ext).getOrElse({
          throw new IllegalStateException(
            "Required index file %s%s does not exist.".format(fastaPath, ext))
        })
      })

      val optionalPathsWithScheme = optionalExtensions.flatMap(optionalPath)

      pathsWithScheme ++ optionalPathsWithScheme
    }

    val readGroup = Option(args.readGroup).getOrElse(args.createReadGroup)

    val builder = CommandBuilders.create(args.useDocker, args.useSingularity)
      .setExecutable(args.executable)
      .add("mem")
      .add("-t")
      .add("1")
      .add("-R")
      .add(readGroup.toSAMReadGroupRecord().getSAMString().replace("\t", "\\t"))
      .add("-p")
      .add(if (args.addFiles) "$0" else args.indexPath)
      .add("-")

    if (args.addFiles) {
      getIndexPaths(args.indexPath).foreach(builder.addFile(_))
    }

    if (args.useDocker || args.useSingularity) {
      builder
        .setImage(args.image)
        .setSudo(args.sudo)
        .addMount(if (args.addFiles) "$root" else root(args.indexPath))
    }

    info("Piping %s to bwa-mem2 with command: %s files: %s".format(
      fragments, builder.build(), builder.getFiles()))

    implicit val tFormatter = InterleavedFASTQInFormatter
    implicit val uFormatter = new AnySAMOutFormatter

    val alignments = fragments.pipe[Alignment, AlignmentProduct, AlignmentDataset, InterleavedFASTQInFormatter](
      cmd = builder.build(),
      files = builder.getFiles()
    )

    alignments.replaceReadGroups(ReadGroupDictionary(Seq(readGroup)))
  }
}
```

```scala
val name = "jack"

  def mewo() :String = {
    val c = "Mewo"
    return "a"
    "bc2"
  }

  def sayName() = {
    name
  }
}
```

```scala
package snake.scenes

import indigo._

import snake.init.GameAssets

object SharedElements {

  def drawHitSpaceToStart(center: Int, blinkDelay: Seconds, gameTime: GameTime): List[SceneGraphNode] =
    Signal
      .Pulse(blinkDelay)
      .map { on =>
        if (on)
          List(Text("hit space to start", center, 220, 1, GameAssets.fontKey).alignCenter)
        else Nil
      }
      .at(gameTime.running)

}
```

```scala
package typingsSlinky.antDesignIconsVue.mod

import typingsSlinky.antDesignIconsVue.antdIconMod.AntdIconProps
import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

object BookTwoTone {
  
  @JSImport("@ant-design/icons-vue/lib", "BookTwoTone")
  @js.native
  def apply(
    props: AntdIconProps,
    context: /* import warning: transforms.QualifyReferences#resolveTypeRef many Couldn't qualify SetupContext */ js.Any
  ): js.Any = js.native
  @JSImport("@ant-design/icons-vue/lib", "BookTwoTone")
  @js.native
  val ^ : js.Any = js.native
  
  @JSImport("@ant-design/icons-vue/lib", "BookTwoTone.displayName")
  @js.native
  def displayName: String = js.native
  @scala.inline
  def displayName_=(x: String): Unit = ^.asInstanceOf[js.Dynamic].updateDynamic("displayName")(x.asInstanceOf[js.Any])
  
  @JSImport("@ant-design/icons-vue/lib", "BookTwoTone.inheritAttrs")
  @js.native
  def inheritAttrs: Boolean = js.native
  @scala.inline
```

```typescript
import { Injectable } from '@angular/core';
import { Router } from '@angular/router';
import { Location } from '@angular/common';

import { Effect, Actions } from '@ngrx/effects';
import * as RouterActions from '../actions/router.actions';

import { tap, map } from 'rxjs/operators';

@Injectable()
export class RouterEffects {
  constructor(
    private actions$: Actions,
    private router: Router,
    private location: Location
  ) {}

  @Effect({ dispatch: false })
  navigate$ = this.actions$.ofType(RouterActions.GO).pipe(
    map((action: RouterActions.Go) => action.payload),
    tap(({ path, query: queryParams, extras }) => {
      this.router.navigate(path, { queryParams, ...extras });
    })
  );

  @Effect({ dispatch: false })
  navigateBack$ = this.actions$
    .ofType(RouterActions.BACK)
    .pipe(tap(() => this.location.back()));

  @Effect({ dispatch: false })
  navigateForward$ = this.actions$
    .ofType(RouterActions.FORWARD)
    .pipe(tap(() => this.location.forward()));
}
```

```typescript
import { IUserRepository } from '@itddd/backend-feature-user';

import { ICircleRepository } from '../../domain/models';
import {
  CircleGetSummariesRequest,
  CircleGetSummariesResponse,
  CircleSummaryData,
  ICircleGetSummariesUseCase,
} from '../../usecases';

export class CircleGetSummariesQueryService
  implements ICircleGetSummariesUseCase
{
  public async handle(
    request: CircleGetSummariesRequest,
  ): Promise<CircleGetSummariesResponse> {
    const { page, size } = request;

    if (page < 1 || size < 1) throw new RangeError();

    const all = await this.circleRepository.findAll();
    const chunk = Array.from(all).slice((page - 1) * size, page * size);

    const summaries = await Promise.all(
      chunk.map(async (circle) => {
        const owner = await this.userRepository.findBy(circle.owner);

        return new CircleSummaryData(
          circle.id.toString(),
          circle.name.toString(),
          owner.name.toString(),
        );
      }),
    );

    return new CircleGetSummariesResponse(summaries);
  }

  public constructor(
    circleRepository: ICircleRepository,
    userRepository: IUserRepository,
  ) {
    this.circleRepository = circleRepository;
    this.userRepository = userRepository;
  }

  private readonly circleRepository: ICircleRepository;

  private readonly userRepository: IUserRepository;
}
```

```typescript
ngOnInit(): void {
    }



}
```

```typescript
import * as React from 'react';

function IconSendMessageSizeXs(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg viewBox="0 0 12 12" {...props}>
      <path d="M1.725 1.055a.5.5 0 00-.688.633l1.529 3.82L6.504 6l-3.938.492-1.529 3.82a.5.5 0 00.688.633l8.999-4.498a.5.5 0 000-.894L1.725 1.055z" />
    </svg>
  );
}

export default IconSendMessageSizeXs;
```

```typescript
/**
 * Copyright (c) 2019 mol* contributors, licensed under MIT, See LICENSE file for more info.
 *
 * @author Alexander Rose <alexander.rose@weirdbyte.de>
 */

import { Vec3, Quat } from '../../../../mol-math/linear-algebra';

export interface CellPack {
    cell: Cell
    packings: CellPacking[]
}

export interface CellPacking {
    name: string,
    location: 'surface' | 'interior' | 'cytoplasme',
    ingredients: Packing['ingredients']
}

//

export interface Cell {
    recipe: Recipe
    cytoplasme?: Packing
    compartments?: { [key: string]: Compartment }
}

export interface Recipe {
    setupfile: string
    paths: [string, string][] // [name: string, path: string][]
    version: string
    name: string
}

export interface Compartment {
    surface?: Packing
    interior?: Packing
}

export interface Packing {
    ingredients: { [key: string]: Ingredient }
}

export interface Positions {
    coords?: Vec3[];
}

export interface Radii {
    radii?: number[];
}

export interface Ingredient {
    source: IngredientSource;
    results: [Vec3, Quat][];
    name: string;
    /** Vec3[]];CoarseGraind Beads coordinates LOD */
    positions?: [Positions];
    /** number[]];CoarseGraind Beads radii LOD */
    radii?: [Radii];
    /** Number of `curveX` properties in the object where `X` is a 0-indexed number */
    nbCurve?: number;
    /** Curve properties are Vec3[] but that is not expressable in TypeScript */
    [curveX: string]: unknown;
    /** the orientation in the membrane */
    principalAxis?: Vec3;
    /** offset along membrane */
    offset?: Vec3;
}

export interface IngredientSource {
    pdb: string;
    bu?: string;  /** biological unit e.g AU,BU1,etc.. */
    selection?: string; /** NGL selection or :A or :B etc.. */
    model?: string;     /** model number e.g 0,1,2... */
    transform: {
        center: boolean;
        translate?: Vec3;
    };
    biomt?: boolean;
}
```

```typescript
ids.push(parseInt($(row).attr('data-id')));
        });
        if (ids.length < 1) {
            this.notify.showWarning('Please select at least one entry');
            return;
        }
        this.assignActions.ids = ids;
        if (this.assignActions.repairModel === null) {
            this.notify.showWarning('Please select at least one Technician');
        }

        let userObject = {
            ids: [], 
            repairModel: {
                users: '',
                comments: '',
                deviceErrors: [],
                failureFound: '',
                parts: [],
                qaTest: '',
                repairCentre: '',
                repairStatus: '',
                reportedDefects: '',
        }
    };
        userObject.repairModel.users = this.assignActions.repairModel;
        userObject.ids = this.assignActions.ids;

        
        this.stewardService.put(this.endpoint + '/' + 'update', userObject).subscribe((response) => {
            if (response.code === 200) {
                this.dialogRef.close();
                this.notify.showSuccess('Technician Assigned Successfully');
                $($.fn.dataTable.tables(true)).DataTable().ajax.reload(null, false);
                this.resetForm(form);
            } else {
                // this.notify.showWarning(response.message);
                this.notify.showWarning('Oops Something went wrong! please try again later');
            }
            form.resetForm();
        });
    }

    resetForm(form: NgForm) {
        form.resetForm();
    }

    onNoClick(): void {
        this.dialogRef.close();
    }

}
```

```typescript
import React from 'react';
import {StatefulPinCode} from 'baseui/pin-code';

export default function Example() {
  return (
    <StatefulPinCode
      initialState={{values: ['', '', '', '']}}
      onChange={console.log}
    />
  );
}
```

```typescript
import { name, version } from "./package.json";
import { Sha256 } from "@aws-crypto/sha256-browser";
import { FetchHttpHandler, streamCollector } from "@aws-sdk/fetch-http-handler";
import { invalidFunction } from "@aws-sdk/invalid-dependency";
import { parseUrl } from "@aws-sdk/url-parser-browser";
import { fromBase64, toBase64 } from "@aws-sdk/util-base64-browser";
import { calculateBodyLength } from "@aws-sdk/util-body-length-browser";
import { defaultUserAgent } from "@aws-sdk/util-user-agent-browser";
import { fromUtf8, toUtf8 } from "@aws-sdk/util-utf8-browser";
import { ClientDefaults } from "./KinesisVideoMediaClient";
import { ClientSharedValues } from "./runtimeConfig.shared";

export const ClientDefaultValues: Required<ClientDefaults> = {
  ...ClientSharedValues,
  runtime: "browser",
  base64Decoder: fromBase64,
  base64Encoder: toBase64,
  bodyLengthChecker: calculateBodyLength,
  credentialDefaultProvider: invalidFunction("Credential is missing") as any,
  defaultUserAgent: defaultUserAgent(name, version),
  maxAttemptsDefaultProvider: (() => "3") as any,
  regionDefaultProvider: invalidFunction("Region is missing") as any,
  requestHandler: new FetchHttpHandler(),
  sha256: Sha256,
  streamCollector,
  urlParser: parseUrl,
  utf8Decoder: fromUtf8,
  utf8Encoder: toUtf8,
};
```

```typescript
import { ThemeProvider } from '@emotion/react';
import { ThemeProvider as MuiThemeProvider } from '@mui/material';
import { theme } from './theme';
import React from 'react';
import { AppContent } from './components/Layout';
import { QrCodeService } from './services';
import { ServicesContext } from './contexts';

const qrCodeService = new QrCodeService();

export const App = () => {
  return (
    <MuiThemeProvider theme={theme}>
      <ThemeProvider theme={theme}>
        <ServicesContext.Provider value={{
          qrCodeService
        }}>
          <AppContent />
        </ServicesContext.Provider>
      </ThemeProvider>
    </MuiThemeProvider>
  );
}
```

```typescript
// Copyright (C) 2020 Intel Corporation
//
// SPDX-License-Identifier: MIT

import React, { useState, useEffect, useRef } from 'react';
import { Col } from 'antd/lib/grid';
import Select from 'antd/lib/select';
import Radio, { RadioChangeEvent } from 'antd/lib/radio';
import Checkbox, { CheckboxChangeEvent } from 'antd/lib/checkbox';
import Input from 'antd/lib/input';
import InputNumber from 'antd/lib/input-number';
import Text from 'antd/lib/typography/Text';

import consts from 'consts';
import { clamp } from 'utils/math';

interface Props {
    attrInputType: string;
    attrValues: string[];
    attrValue: string;
    attrName: string;
    attrID: number;
    changeAttribute(attrID: number, value: string): void;
}

function attrIsTheSame(prevProps: Props, nextProps: Props): boolean {
    return (
        nextProps.attrID === prevProps.attrID &&
        nextProps.attrValue === prevProps.attrValue &&
        nextProps.attrName === prevProps.attrName &&
        nextProps.attrInputType === prevProps.attrInputType &&
        nextProps.attrValues
            .map((value: string, id: number): boolean => prevProps.attrValues[id] === value)
            .every((value: boolean): boolean => value)
    );
}

function ItemAttributeComponent(props: Props): JSX.Element {
    const { attrInputType, attrValues, attrValue, attrName, attrID, changeAttribute } = props;

    const attrNameStyle: React.CSSProperties = { wordBreak: 'break-word', lineHeight: '1em' };

    if (attrInputType === 'checkbox') {
        return (
            <Col span={24}>
                <Checkbox
                    className='cvat-object-item-checkbox-attribute'
                    checked={attrValue === 'true'}
                    onChange={(event: CheckboxChangeEvent): void => {
                        const value = event.target.checked ? 'true' : 'false';
                        changeAttribute(attrID, value);
                    }}
                >
                    <Text style={attrNameStyle} className='cvat-text'>
                        {attrName}
                    </Text>
                </Checkbox>
            </Col>
        );
    }

    if (attrInputType === 'radio') {
        return (
            <Col span={24}>
                <fieldset className='cvat-object-item-radio-attribute'>
                    <legend>
                        <Text style={attrNameStyle} className='cvat-text'>
                            {attrName}
                        </Text>
                    </legend>
                    <Radio.Group
                        size='small'
                        value={attrValue}
                        onChange={(event: RadioChangeEvent): void => {
                            changeAttribute(attrID, event.target.value);
                        }}
                    >
                        {attrValues.map(
                            (value: string): JSX.Element => (
                                <Radio key={value} value={value}>
                                    {value === consts.UNDEFINED_ATTRIBUTE_VALUE ? consts.NO_BREAK_SPACE : value}
                                </Radio>
                            ),
                        )}
                    </Radio.Group>
                </fieldset>
            </Col>
        );
    }

    if (attrInputType === 'select') {
        return (
            <>
                <Col span={8} style={attrNameStyle}>
                    <Text className='cvat-text'>{attrName}</Text>
```

```typescript
import { createRenderer, NbRendererOpts, Notebook } from '.'

export * from '.'


function unescapeHTML (input: string): string {
  return new DOMParser()
    .parseFromString(input, 'text/html')
    .documentElement
    .textContent ?? ''
}

/**
 * Renders the given Jupyter *notebook* to HTML. It's a shorthand for
 * `createRenderer(document, opts)(notebook)`.
 *
 * @example
 *   document.body.appendChild(ipynb2html.render(notebook))
 *
 * @param notebook Object in Jupyter Notebook Format 4.0+.
 * @param opts The renderer options.
 * @return An HTMLElement with the rendered *notebook*.
 * @see createRenderer
 */
export function render (notebook: Notebook, opts: NbRendererOpts = {}): HTMLElement {
  return createRenderer(document, opts)(notebook)
}

/**
 * Renders Jupyter Notebook inside each
 * `<script type="application/x-ipynb+json">...</script>` found in
 * the page's body.
 *
 * @param opts The renderer options.
 */
export function autoRender (opts: NbRendererOpts = {}): void {
  const selector = 'script[type="application/x-ipynb+json"]'
  const render = createRenderer(document, opts)

  document.querySelectorAll(selector).forEach(script => {
    if (script.textContent && script.parentElement) {
      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
      const notebook = JSON.parse(unescapeHTML(script.textContent))
      const nbElement = render(notebook)
      script.parentElement.replaceChild(nbElement, script)
    }
  })
}
```

```typescript
import { Address, Hash, HexString, RpcSignature, RsvSignature, Signature, SignedEntity, SignStrategy } from "../types";
import EncryptionKey from "./encryption-key";
export { EncryptionKey };
/**
 * Determines whether the provided value is a defined value.
 * A defined value is anything that IS NOT null NOR undefined
 * @param val value to check
 */
export declare function isDefined(val: any): boolean;
/**
 * Determines whether the provided value is strictly a number or a
 * string representing a number (radix 10)
 * @param val value to check
 */
export declare function isNumeric(val: any): boolean;
/**
 * Determines whether the provided value is a prefixed(0x) hex string.
 * If byteLength is specified, the provided value will also be required
 * to have the given byte length for it to retur true.
 * @param str value to check
 * @param byteLength reminder: half the amount of chars after the prefix
 */
export declare function isHexString<L extends number = any>(str: any, byteLength?: number): str is HexString<L>;
/**
 * Determines whether the provided value is a valid address (hex prefixed string of 20 bytes)
 * @param str value to check
 */
export declare function isAddress(str: any): str is Address;
/**
 * Determines whether the provided value is a valid hash (hex prefixed string of 32 bytes)
 * @param str value to check
 */
export declare function isHash(str: any): str is Hash;
/**
 * Determines whether the provided value is a valid rsv representation of
 * a signature, meaning:
 *  - It is an array of lenght 3
 *  - first two values are prefixed hex strings of 32 bytes
 *  - last value is a prefixed hex strings of 1 byte
 * @param signature
 */
export declare function isRsvSignature(signature: any): signature is RsvSignature;
/**
 * Determines whether the provided value is a valid signature, meaning it
 * is either a rsv-formatted signature {@link isRsvSignature} or it is a
 * prefixed hex string of 65 bytes
 * @param signature
 * @see {@link isRsvSignature}
 */
export declare function isSignature(signature: any): signature is Signature;
/**
 * Returns the rsv-array-formatted version of the given signature.
 * @param signature
 * @throws if provided value is not a known signature format
 */
export declare function normalizeSignature(signature: any): RsvSignature;
/**
 * Returns a rpc formatted signatrue version of the given signature.
 * @param signature
 * @throws if provided value is not a known signature format
 */
export declare function toRpcSignature(signature: any): RpcSignature;
/**
 * Returns the value for the given propertyName or index from the provided
 * mixed. If both keys have a value, propertyName value will be returned.
 *
```

```typescript
/**
 * @hidden
 */
export declare class PagerModule {
    static exports(): any[];
}
```

```typescript
import * as React from "react";

import { EmailTooltip } from "@/components/email-tooltip";
import { VercelLogo } from "@/components/logo";
import siteConfig from "@/config/site";
import { useEmail } from "@/hooks/app";
import routes from "@/routes";
import {
  Box,
  Button,
  Container,
  HStack,
  Link,
  Stack,
  Text,
  useColorModeValue,
  useToken,
} from "@chakra-ui/react";

import NextLink from "next/link";
import { useRouter } from "next/router";

export const Footer: React.FC = () => {
  const [lightColor, darkColor] = useToken("colors", [
    "gator.200",
    "gator.800",
  ]) as [string, string];

  const bgColor = useColorModeValue(lightColor, darkColor);

  const copyEmail = useEmail();
  const { locale } = useRouter();

  return (
    <Box fontSize={["xs", "sm"]}>
      <Box as="svg" mb={-1} viewBox="0 0 1440 320">
        <path
          d="M0 256l48-26.7C96 203 192 149 288 154.7c96 5.3 192 69.3 288 64C672 213 768 139 864 128s192 43 288 69.3c96 26.7 192 26.7 240 26.7h48v96H0z"
          fill={bgColor}
        />
      </Box>
      <Box bgColor={bgColor} p={[4, 8]}>
        <Container
          d="flex"
          flexDir={{ base: "column-reverse", md: "row" }}
          justifyContent="space-between"
          maxW="6xl"
          textAlign={{ base: "center", md: "initial" }}
        >
          <Box pb={12}>
            <Text>
              Made with{" "}
              <Link fontWeight="bold" href="https://nextjs.org" isExternal>
                Next.js
              </Link>
              ,{" "}
              <Link fontWeight="bold" href="https://chakra-ui.com" isExternal>
                Chakra UI
              </Link>
              , and{" "}
              <Link fontWeight="bold" href="https://contentful.com" isExternal>
                Contentful
              </Link>
              .
            </Text>
            <HStack justify={{ base: "center", md: "flex-start" }} spacing={1}>
              <Text>Business inquiries at</Text>
              <EmailTooltip>
                <Button
                  colorScheme="black"
                  d="inline-block"
                  fontWeight="bold"
                  onClick={copyEmail}
                  size="sm"
                  variant="link"
                >
                  {siteConfig.email}
                </Button>
              </EmailTooltip>
              .
            </HStack>
            <br />
            <Text>
              MIT License &copy; {new Date().getFullYear()}-present{" "}
              <NextLink href="/" passHref>
                {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}
                <Link fontWeight="bold">{siteConfig.title}</Link>
              </NextLink>
              .
            </Text>
            <br />
            <Text>
              Powered by{" "}
              <Link
                href="https://vercel.com/?utm_source=surabayajs&utm_campaign=oss"
                isExternal
              >
                <VercelLogo h="auto" maxW={24} />
              </Link>
            </Text>
          </Box>

          <HStack
            align="flex-start"
            justify="center"
            pb={12}
            pt={{ base: 12, md: 0 }}
            spacing={16}
          >
            <Stack>
              <Text variant="sitemap-title">Navigate</Text>
              {Object.entries(routes(locale)).map(([href, { name }]) => (
                <NextLink key={name} href={href} passHref>
                  {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}
                  <Link variant="sitemap-link">{name}</Link>
                </NextLink>
              ))}
            </Stack>
            <Stack>
              <Text variant="sitemap-title">Socials</Text>
              {Object.entries(siteConfig.socials).map(([name, href]) => (
                <Link key={name} href={href} isExternal variant="sitemap-link">
                  {name}
                </Link>
              ))}
            </Stack>
          </HStack>
        </Container>
      </Box>
    </Box>
  );
};
```

```typescript
/**
 * Copyright (c) 2017 Panjie Setiawan Wicaksono <panjie@panjiesw.com>
 *
 * This software is released under the MIT License.
 * https://panjiesw.mit-license.org
 */

import OriginalLoadable, { LoadedComponent, LoadableComponent } from 'react-loadable';
import { observer } from 'mobx-react';
import LoadingComponent from './LoadingComponent';

export type Options<Props, T extends object> = IOptionsWithoutResolve<Props> | IOptionsWithResolve<Props, T>;

export interface ICommonOptions {
	/**
	 * In order for Loadable to require() a component synchronously (when possible) instead of waiting for
	 * the promise returned by import() to resolve. If you are using Webpack you should use this option.
	 *
	 * ```ts
	 * Loadable({
	 *     // ...
	 *     webpackRequireWeakId: () => require.resolveWeak('./MyComponent')
	 * });
	 * ```
	 *
	 * If you are using Babel, you might want to use the Babel plugin to add this option automatically.
	 */
	webpackRequireWeakId?(): number | string;
}

export interface IOptionsWithoutResolve<Props> extends ICommonOptions {
	/**
	 * Function returning promise returning a React component displayed on success.
	 *
	 * Resulting React component receives all the props passed to the generated component.
	 */
	loader(): Promise<LoadedComponent<Props> | { default: LoadedComponent<Props> }>;
}

export interface IOptionsWithResolve<Props, T extends object> extends ICommonOptions {
	/**
	 * Function returning promise returning a React component displayed on success.
	 *
	 * Resulting React component receives all the props passed to the generated component.
	 */
	loader(): Promise<T>;
	/**
	 * If the component that you want to load is not the default exported from a module you can use this
	 * function to resolve it.
	 *
	 * ```ts
	 * Loadable({
	 *     // ...
	 *     resolveModule: module => module.MyComponent
	 * });
	 * ```
	 */
	resolveModule(obj: T): LoadedComponent<Props>;
}

function Loadable<P, T extends object>(options: Options<P, T>): LoadedComponent<P> & LoadableComponent {
	return observer<P, any>(
		OriginalLoadable<P, T>({
			LoadingComponent,
			delay: 200,
			...options,
		}),
	);
}

export default Loadable;
```

```typescript
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
export { default } from './PluginForm';
export { default as PluginFormZhCN } from './locales/zh-CN';
export { default as PluginFormEnUS } from './locales/en-US';
```

```typescript
import { Injectable } from '@angular/core';

@Injectable({
  providedIn: 'root'
})
export class GlobalService {
  api='http://localhost:8000';
  constructor() { }
  getAPI() {
   return this.api;
 }
}
```

```typescript
import * as sp from '../cocos/spine';

export { sp };
```

```typescript
import React from 'react';
import { openConfirmModal } from '../../helpers/modal';
import { createBemBlock } from '../../helpers/styleCreators';
import { BoxEntity } from '../../models/Box';

interface ElementsListBoxItemProps {
	box: BoxEntity;
	editBox: () => void;
	deleteBox: (boxName: string) => void;
	activeBox: BoxEntity | null;
	setOutlinerSelectedBox: (box: BoxEntity | null) => void;
	color: string;
	isFilterPassed: boolean;
}

const ElementsListBoxItem = ({
	box,
	editBox,
	deleteBox,
	activeBox,
	setOutlinerSelectedBox,
	color,
	isFilterPassed,
```

```typescript
import angular from "angular"
import "../codeMap/threeViewer/threeViewer.module"
import { viewCubeComponent } from "./viewCube.component"
import { ViewCubeMouseEventsService } from "./viewCube.mouseEvents.service"
import _ from "lodash"

angular
	.module("app.codeCharta.ui.viewCube", ["app.codeCharta.ui.codeMap.threeViewer"])
	.component(viewCubeComponent.selector, viewCubeComponent)
	.service(_.camelCase(ViewCubeMouseEventsService.name), ViewCubeMouseEventsService)
```

```typescript
@NgModule({
  imports: [
    NbSharedModule,
  ],
  declarations: [
    NbAlertComponent,
  ],
  exports: [
    NbAlertComponent,
  ],
})
export class NbAlertModule {
}
```

```typescript
*/
export type FluidObjectSymbolProvider<T> = {
    [P in keyof T]?: P;
};

/**
 * This is a condensed version of Record that requires the object has all
 * the IFluidObject properties as its type mapped to an object that implements
 * the property.
 */
export type AsyncRequiredFluidObjectProvider<T> =  T extends undefined ? Record<string, never> : {
    [P in keyof T]: Promise<NonNullable<Exclude<T[P], undefined | null>>>
};

/**
 * This is a condensed version of Record that requires the object has all
 * the IFluidObject properties as its type, mapped to an object that implements
 * the property or undefined.
 */
export type AsyncOptionalFluidObjectProvider<T> = T extends undefined
    ? Record<string, never>
    : {
        [P in keyof T]?: Promise<T[P] | undefined>;
    };

/**
 * Combined type for Optional and Required Async Fluid object Providers
 */
export type AsyncFluidObjectProvider<O, R = undefined>
    = AsyncOptionalFluidObjectProvider<O> & AsyncRequiredFluidObjectProvider<R>;

/**
 * Multiple ways to provide a Fluid object.
 */
export type FluidObjectProvider<T> =
    NonNullable<T>
    | Promise<NonNullable<T>>
    | ((dependencyContainer: IFluidDependencySynthesizer) => NonNullable<T>)
    | ((dependencyContainer: IFluidDependencySynthesizer) => Promise<NonNullable<T>>);
```

```typescript
import React from 'react';
import { Link } from 'react-router-dom';
import {
  Box,
  IconButton,
  Grid,
  GridItem,
  VStack,
  Container,
  Heading,
  Progress,
  useColorModeValue
} from '@chakra-ui/react';
import { Helmet } from 'react-helmet';
import { MdHome } from 'react-icons/md';

interface Props {
  title: string;
  children: React.ReactNode;
  actionComponent?: React.ReactNode;
  isLoading?: boolean;
  isAdmin?: boolean;
}

const Layout = ({ children, title, actionComponent, isAdmin, isLoading }: Props) => {
  const background = useColorModeValue('gray.50', 'gray.900');

  return (
    <VStack display="flex" flexDirection="column" minHeight="100%">
      <Helmet title={`${isLoading ? 'Loading' : title} | buildr`} />
      <Container width="100%" maxW="container.xl">
        <Grid alignItems="center" py={4} width="100%" templateColumns="2.5rem auto 2.5rem">
          <GridItem>
            <IconButton
              as={Link}
              to={isAdmin ? '/admin' : '/'}
              aria-label="Home"
              icon={<MdHome />}
            />
          </GridItem>
          <GridItem alignContent="center">
            <Heading textAlign="center" size="sm">
              {title}
            </Heading>
          </GridItem>
          <GridItem>{actionComponent}</GridItem>
        </Grid>
      </Container>
      <Box mt="0 !important" width="100%" background={background} display="flex" flex={1}>
        {isLoading ? (
          <Progress width="100%" isIndeterminate />
        ) : (
          <Container display="flex" flex={1} width="100%" p={4} maxW="container.xl">
            <VStack alignItems="flex-start" width="100%">
              {children}
            </VStack>
          </Container>
        )}
      </Box>
    </VStack>
  );
};

export default Layout;
```

```typescript
import { Observable } from "rxjs";

export interface Localidade {
  id: number;
  pais: string;
  estado: string;
  cidade: string;
}

export abstract class LocalidadeData {
  abstract getListData(): Observable<Localidade[]>;
  abstract insertData(data): Observable<Localidade>;
  abstract updateData(id, data): Observable<Localidade>;
  abstract deleteData(id: number): Observable<Localidade>;
}
```

```typescript
/// <reference path="Object.d.ts" />
/// <reference path="dojox.grid.TreeGrid.d.ts" />
module dojox.grid{
export class LazyTreeGrid extends dojox.grid.TreeGrid {
colSpans : Object;
reqQueueIndex : number;
expandoRowIndex : any;
stateChangeNode : Object;
_cleanup () : any;
_fetchItems (idx:any,onBegin:any,onComplete:any,onError:any) : any;
expandoFetch (rowIndex:any,open:any) : any;
_onExpandoComplete (childItems:any,request:any,size:any) : any;
toggleLoadingClass (flag:any) : any;
}
}
```

```typescript
import * as fs from 'fs';

function main(input) {
  input = input.split("\n");
  const [N, M] = input[0].split(' ').map(i => parseInt(i));
  let ABList = input.splice(1).map(l => l.split(' ').map(i => parseInt(i))).splice(0, M);
  let friendList = new Array(N).fill(0).map(i => []);
  let numFriendList = new Array(N).fill(0);
  let checkedList = new Array(N).fill(false);
  // console.log(ABList)
  for (let [i, j] of ABList) {
    friendList[i - 1].push(j - 1);
    friendList[j - 1].push(i - 1);
  }

  // console.log(friendList)

  for (let i = 0; i < N; i++) {
    if (checkedList[i]) {
      continue;
    }
    checkedList[i] = true;
    let openList = friendList[i].slice(0, friendList[i].length);
    while (openList.length > 0) {
      let j = openList.pop();
      if (!checkedList[j]) {
        numFriendList[i]++;
        checkedList[j] = true;
        openList = openList.concat(friendList[j]);
      }
    }
  }

  let ans = numFriendList.reduce((prev, current) => prev > current ? prev : current);

  console.log('%s', ans + 1);
}

main(fs.readFileSync("/dev/stdin", "utf8"));
```

```typescript
import * as fs from 'fs';

var g_root: number[];
var g_count: number[];

function main(input: string[]) {
	var work0: number[] = input.shift().split(" ").map(x => Number(x));
	var n: number = work0[0];
	var m: number = work0[1];
	g_root = [];
  	g_count = [];
  /*
    for (var i = 0; i < n; i++) {
        g_root[i] = -1;
        g_count[i] = 1;
    }
  	for (var i = 0; i < m; i ++) {
      	var work1 = input[i].split(" ").map(x => Number(x) - 1));
		var a: number = work1[0];
		var b: number = work1[1];
		var roota: number = getRoot(a);
		var rootb: number = getRoot(b);
		if (roota == rootb) return;
		if (roota > rootb) [roota, rootb] = [rootb, roota];
		mergeRoot(roota, rootb);
	});
    */
	console.log(Math.max(...g_count));
}

function getRoot(index: number) {
  return index;
	if (g_root[index] < 0) {
		return index;
	} else {
		var work0: number = getRoot(g_root[index]);
		g_root[index] = work0;
		return work0
	}
}

function mergeRoot(root0: number, root1: number) {
	g_count[root0] += g_count[root1];
	g_count[root1] = 0;
	g_root[root1] = root0;
}

const input = fs.readFileSync("/dev/stdin", "utf8").trim().split("\n");
main(input);
```

```typescript
/*!
 * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 */

import {IMediaEventListener} from '../IMediaEventListener';
import {PlaybackState} from '../Resource';

export enum EmitBehavior {
    Dedup = 'DEDUP',
    AlwaysEmit = 'ALWAYS_EMIT'
}

export enum PlaybackStateTransitionResult {
    StateUpdatedDidEmit = 'TRANSITION_EMIT',
    StateNotUpdatedDidNotEmit = 'NO_TRANSITION_NO_EMIT'
}

export interface IPlaybackStateHandler {
    transitionToState(playbackState: PlaybackState): PlaybackStateTransitionResult;

    isState(playbackState: PlaybackState): boolean;
}

export interface PlaybackStateArgs {
    eventListener: IMediaEventListener;
    initialPlaybackState?: PlaybackState;
}

function emitPlaybackStateChangeEvent(eventListener: IMediaEventListener) {
    eventListener.onEvent(this.currentPlaybackState);
}

export function PlaybackStateHandler(args: PlaybackStateArgs): IPlaybackStateHandler {
    const defaultArgs = {
        initialPlaybackState: PlaybackState.IDLE
    };

    args = Object.assign(defaultArgs, args);
    const {
        eventListener,
        initialPlaybackState
    } = args;

    const playbackStateHandler: IPlaybackStateHandler = {
        // tslint:disable-next-line:max-line-length
        transitionToState(playbackState: PlaybackState, emitBehavior: EmitBehavior = EmitBehavior.Dedup): PlaybackStateTransitionResult {
            if (emitBehavior === EmitBehavior.Dedup && playbackState === this.currentPlaybackState) {
                return PlaybackStateTransitionResult.StateNotUpdatedDidNotEmit;
            }
            this.currentPlaybackState = playbackState;
            emitPlaybackStateChangeEvent.call(this, eventListener);
            return PlaybackStateTransitionResult.StateUpdatedDidEmit;
        },
        isState(playbackState: PlaybackState): boolean {
            return this.currentPlaybackState === playbackState;
        }
    };

    return Object.defineProperties(playbackStateHandler, {
        currentPlaybackState: {
            value: initialPlaybackState,
            writable: true,
            configurable: false
        }
    });
}
```

```typescript
import { Component, OnInit } from '@angular/core';

@Component({
  selector: 'app-rental',
  templateUrl: './rental.component.html',
  styleUrls: ['./rental.component.scss']
})
export class RentalComponent implements OnInit {

  constructor() { }

  ngOnInit() {
  }

}
```

```typescript
import * as React from "react";
import * as Styles from "./search-legend.styles";

export interface SearchLegendItem {
  key: string;
  type: 'field';
  value: string;
  description: string;
}

export interface SearchLegendProps {
  className?: string;
  name: string;
  items: SearchLegendItem[];
}

export const SearchLegend: React.SFC<SearchLegendProps> = function SearchLegend(props) {
  return (
    <Styles.StyledSearchLegend className={props.className}>
      {props.name && <Styles.StyledLegendName>{props.name}</Styles.StyledLegendName>}
      <Styles.StyledSearchLegendBox>
        {props.items.map(field => {
          return (
            <Styles.StyledField key={field.key}>
              <Styles.StyledFieldLink title={field.description} query={{ search: field.value }}>
                {field.key}
              </Styles.StyledFieldLink>
            </Styles.StyledField>
          );
        })}
      </Styles.StyledSearchLegendBox>
    </Styles.StyledSearchLegend>
  );
}
```

```typescript
import { CardScript, CardActionConfig } from "../../types/CardScript"
import { cardScripts } from "../../CardScripts"
import { GameState } from "../../../shared/gamestate/GameState"

const cardScript: CardScript = {
    // Play: Deal 3<D> to a creature. If it is not destroyed, its owner discards a random card from their hand.
    amber: () => 1,
    onPlay: {
        perform: (state: GameState, config: CardActionConfig) => {
            //Add onPlay code here
        }
    },
}
cardScripts.scripts.set("gongoozle", cardScript)
```

```typescript
}
                ]
              }
            ]
          },
          {
            "kind": "LinkedField",
            "alias": null,
            "name": "installations",
            "storageKey": null,
            "args": null,
            "concreteType": "InstallationConnection",
            "plural": false,
            "selections": [
              {
                "kind": "LinkedField",
                "alias": null,
                "name": "edges",
                "storageKey": null,
                "args": null,
                "concreteType": "InstallationEdge",
                "plural": true,
                "selections": [
                  {
                    "kind": "LinkedField",
                    "alias": null,
                    "name": "node",
                    "storageKey": null,
                    "args": null,
                    "concreteType": "Installation",
                    "plural": false,
                    "selections": v1
                  }
                ]
              }
            ]
          },
          v0
        ]
      }
    ]
  }
};
})();
(node as any).hash = '19edc51f686890d53a03b905c65ce4b5';
export default node;
```

```typescript
export class Device {
    constructor(
        public addr: string,
        public name: string,
        public startTime: string,
        public endTime: string,
        public status: string,
        public token: string
    )
    {

    }
}
```

```typescript
//repository are class decorated with @EntityRepository which extends Repostiory from typeorm and gives the type of the entity the repository tends to

import { EntityRepository, Repository } from 'typeorm';
import { Auth } from '../entities/auth.entity';
import * as bcrypt from 'bcrypt';
import { AuthDto } from './dto/auth.dto';
import { payloadInterface } from './dto/payload.interface';
@EntityRepository(Auth) // to denote the repository of the Auth entity
export class AuthRepository extends Repository<Auth> {
  async creatingUser(req: AuthDto): Promise<{}> {
    try {
      const { username, password } = req;
      const salt = await bcrypt.genSalt();
      const hashedPassword = await bcrypt.hash(password, salt);
      await this.createQueryBuilder()
        .insert()
        .into(Auth)
        .values({ username, password: hashedPassword })
        .execute();
      return { mes: 'user created successfully' };
    } catch (error) {
      //   console.log(error.code);
      if (error.code == 23505) return { mes: 'user already exists' };
      else return { mes: 'error in signup' };
    }
  }
  async finduser(req: AuthDto, jwtService): Promise<{}> {
    try {
      const { username, password } = req;
      const user = await this.createQueryBuilder().where({ username }).getOne();
      const unhashedpassword = await bcrypt.compare(password, user.password);
      if (user && unhashedpassword) {
        const payload: payloadInterface = { username }; //payload should be an object
        const accessToken = await jwtService.sign(payload);
        return { accessToken }; // common practice is to sent token in obj
      } else return { mes: 'invaid username or password' };
    } catch (err) {
      return { mes: 'error in login' };
    }
  }
}
```

```typescript
// tslint:disable:no-consecutive-blank-lines ordered-imports align trailing-comma whitespace class-name
// tslint:disable:no-unused-variable
// tslint:disable:no-unbound-method
import { BaseContract } from '@0x/base-contract';
import { BlockParam, BlockParamLiteral, CallData, ContractAbi, ContractArtifact, DecodedLogArgs, MethodAbi, TxData, TxDataPayable, SupportedProvider } from 'ethereum-types';
import { BigNumber, classUtils, logUtils, providerUtils } from '@0x/utils';
import { SimpleContractArtifact } from '@0x/types';
import { Web3Wrapper } from '@0x/web3-wrapper';
import * as ethers from 'ethers';
import * as _ from 'lodash';
// tslint:enable:no-unused-variable


/* istanbul ignore next */
// tslint:disable:no-parameter-reassignment
// tslint:disable-next-line:class-name
export class DutchAuctionContract extends BaseContract {
    public getAuctionDetails = {
        async sendTransactionAsync(
            order: {makerAddress: string;takerAddress: string;feeRecipientAddress: string;senderAddress: string;makerAssetAmount: BigNumber;takerAssetAmount: BigNumber;makerFee: BigNumber;takerFee: BigNumber;expirationTimeSeconds: BigNumber;salt: BigNumber;makerAssetData: string;takerAssetData: string},
            txData: Partial<TxData> = {},
        ): Promise<string> {
            const self = this as any as DutchAuctionContract;
            const encodedData = self._strictEncodeArguments('getAuctionDetails((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes))', [order
    ]);
            const txDataWithDefaults = await BaseContract._applyDefaultsToTxDataAsync(
                {
                    to: self.address,
                    ...txData,
                    data: encodedData,
                },
                self._web3Wrapper.getContractDefaults(),
                self.getAuctionDetails.estimateGasAsync.bind(
                    self,
                    order
                ),
            );
            const txHash = await self._web3Wrapper.sendTransactionAsync(txDataWithDefaults);
            return txHash;
        },
        async estimateGasAsync(
```

```typescript
import type { MempoolTransaction, Transaction } from '@stacks/stacks-blockchain-api-types';
import type { Getter } from 'jotai';
import type { ApiResponseWithResultsOffset } from '@common/types/api';
import { atom } from 'jotai';
import { QueryFunctionContext, QueryKey } from 'react-query';
import { getNextPageParam } from '@store/common';
import { DEFAULT_POLLING_INTERVAL } from '@common/constants';
import { isPendingTx } from '@common/utils';
import { GetTransactionListTypeEnum } from '@store/recoil/filter';

// ----------------
// types
// ----------------
export type TransactionsListResponse = ApiResponseWithResultsOffset<Transaction>;
export type MempoolTransactionsListResponse = ApiResponseWithResultsOffset<MempoolTransaction>;
export type OptionalTransactionAddress =
  | { address?: string; recipientAddress?: never; senderAddress?: never }
  | { recipientAddress?: string; address?: never; senderAddress?: never }
  | { senderAddress?: string; recipientAddress?: never; address?: never };

export type LimitWithOptionalAddress = [limit: number, options?: OptionalTransactionAddress];
export type LimitWithTypesOptionalAddress = [
  limit: number,
  types?: GetTransactionListTypeEnum[],
  options?: OptionalTransactionAddress | null
];

// ----------------
// keys
// ----------------
export enum TransactionQueryKeys {
  CONFIRMED = 'transactions/CONFIRMED',
  MEMPOOL = 'transactions/MEMPOOL',
  SINGLE = 'transactions/SINGLE',
}

export const getTxQueryKey = {
  confirmed: (
    limit: number,
    types: GetTransactionListTypeEnum[],
    options?: OptionalTransactionAddress
  ): QueryKey => makeQueryKey(TransactionQueryKeys.CONFIRMED, [limit, types, options]),
  mempool: (limit: number, options?: OptionalTransactionAddress): QueryKey =>
```

```typescript
/*
 * CloudBeaver - Cloud Database Manager
 * Copyright (C) 2020-2021 DBeaver Corp and others
 *
 * Licensed under the Apache License, Version 2.0.
 * you may not use this file except in compliance with the License.
 */

import type { AdminAuthProviderConfiguration } from '@cloudbeaver/core-sdk';

export function authConfigurationContext(): AdminAuthProviderConfiguration {
  return {
    id: '',
    providerId: '',
    displayName: '',
    disabled: false,
    parameters: {},
    description: '',
    iconURL: '',
  };
}
```

```typescript
declare var require: (x: string) => any;

function Main(input: string[]) {
  const r = parseInt(input[0]);

  console.log((r < 1200) ? 'ABC' : (r < 2800) ? 'ARC' : 'AGC');
}

Main(require('fs').readFileSync('/dev/stdin', 'utf8').split('\n'));
```

```typescript
export interface CashierState {
  totalSales: number;
  totalCash: number;
  totalCard: number;
  totalVoucher: number;
  opened?: boolean;
}
```

```typescript
},
                instance: pinoLogger,
                logEvents: false,
                mergeHapiLogData: false,
                ignorePaths: ['/testRoute'],
                level: 'debug',
                redact: ['test.property'],
            },
        })
        .then(() => {
            server.logger.debug('using logger object directly');

            server.route({
                method: 'GET',
                path: '/',
                handler: (request, h) => {
                    request.logger.debug('using logger directly');
                },
            });
        });
}

function example2() {
    server.register({
        plugin: HapiPino,
        options: {
            redact: {
                paths: ['test.property', 'another.property'],
                remove: true,
            },
            logRequestStart: true,
            logRequestComplete: true,
            prettyPrint: {
                levelFirst: true,
                colorize: true,
                translateTime: 'SYS:yyyy-mm-dd HH:MM:ss.l',
                ignore: 'hostname,pid',
            },
            getChildBindings: (req: Request) => ({
                'x-request-id': req.headers['x-request-id'],
            }),
        },
    });
}
```

```typescript
export default function createStore(
    withLogger: boolean = true,
    withDevtools: boolean = true
): Store<State> {
    const middleware: [Middleware] = [thunkMiddleware]
    if (withLogger) {
        middleware.push(createLogger())
    }

    const appliedMiddleware =
        applyMiddleware(...middleware)

    return createReduxStore<State>(
        reducer,
        new State(),
        withDevtools
            ? composeWithDevTools(appliedMiddleware)
            : appliedMiddleware
    )
}
```

```typescript
import * as React from 'react';
import * as classNames from 'classnames';
import {
  useAnchor,
  RectAnchor,
  useHover,
  Node,
  createSvgIdUrl,
  useDragNode,
  WithSelectionProps,
  WithDndDropProps,
  observer,
  useCombineRefs,
} from '@console/topology';
import NodeShadows, { NODE_SHADOW_FILTER_ID_HOVER, NODE_SHADOW_FILTER_ID } from '../NodeShadows';
import useSearchFilter from '../../filters/useSearchFilter';
import GroupNode from '../nodes/GroupNode';
import { nodeDragSourceSpec } from '../../componentUtils';
import { TYPE_HELM_RELEASE } from '../../const';

export type HelmReleaseNodeProps = {
  element: Node;
} & WithSelectionProps &
  WithDndDropProps;

const HelmReleaseNode: React.FC<HelmReleaseNodeProps> = ({
  element,
  onSelect,
  selected,
  dndDropRef,
}) => {
  useAnchor((e: Node) => new RectAnchor(e, 4));
  const [hover, hoverRef] = useHover();
  const [{ dragging }, dragNodeRef] = useDragNode(nodeDragSourceSpec(TYPE_HELM_RELEASE, false), {
    element,
  });
  const refs = useCombineRefs<SVGRectElement>(dragNodeRef, dndDropRef, hoverRef);
  const [filtered] = useSearchFilter(element.getLabel());
  const { width, height } = element.getBounds();

  return (
    <g
      ref={refs}
      onClick={onSelect}
      className={classNames('odc-helm-release', {
        'is-dragging': dragging,
        'is-selected': selected,
        'is-filtered': filtered,
      })}
    >
      <NodeShadows />
      <rect
        filter={createSvgIdUrl(
          hover || dragging ? NODE_SHADOW_FILTER_ID_HOVER : NODE_SHADOW_FILTER_ID,
        )}
        className="odc-helm-release__bg"
        x={0}
        y={0}
        width={width}
        height={height}
        rx="5"
        ry="5"
      />
      <GroupNode
        kind="HelmRelease"
        element={element}
        typeIconClass="icon-helm"
        groupResources={element.getData().groupResources}
      />
    </g>
  );
};

export default observer(HelmReleaseNode);
```

```rust
//! Data type for scripts. The four-letter values defined by ISO 15924.

use rich_sdl2_rust::{Result, SdlError};
use std::os::raw::c_int;

use crate::bind;

#[derive(Debug, Clone, Copy, PartialEq, Eq)]
#[allow(missing_docs)]
pub enum Script {
    Common,
    Inherited,
    Unknown,
    Arabic,
    Armenian,
    Bengali,
    Cyrillic,
    Devanagari,
    Georgian,
    Greek,
    Gujarati,
    Gurmukhi,
    Hangul,
    Han,
    Hebrew,
    Hiragana,
    Kannada,
    Katakana,
    Lao,
    Latin,
    Malayalam,
    Oriya,
    Tamil,
    Telugu,
    Thai,
    Tibetan,
    Bopomofo,
```

```rust
use binread::BinRead;

#[derive(BinRead)]
#[br(assert(does_not_exist == 0))]
struct Foo {
    a: i32,
}

// This tests that fields from one variant do not leak to all variants
#[derive(BinRead)]
#[br(assert(a == 0))]
enum Bar {
    A { a: i32 },
    B { b: i32 },
}

// This tests that fields from one variant do not leak to subsequent variants
#[derive(BinRead)]
enum Baz {
    A { a: i32 },
    #[br(assert(a == 0))]
    B { b: i32 },
}

fn main() {}
```

```rust
use std::io::{stdin, Read};
use std::str::FromStr;

// https://qiita.com/tubo28/items/e6076e9040da57368845
fn read<T: FromStr>() -> T {
    let stdin = stdin();
    let stdin = stdin.lock();
    let token: String = stdin
        .bytes()
        .map(|c| c.expect("failed to read char") as char)
        .skip_while(|c| c.is_whitespace())
        .take_while(|c| !c.is_whitespace())
        .collect();
    token.parse().ok().expect("failed to parse token")
}

#[allow(dead_code)]
fn main() {
    let n = read::<usize>();
    let k = read::<usize>();
    let mut hh = (0..n).map(|_| read::<usize>()).collect::<Vec<_>>();
    hh.sort();

    use std::cmp::min;
    let mut ans = usize::max_value();
    for i in k - 1..n {
        ans = min(ans, hh[i] - hh[i - (k - 1)]);
    }
    println!("{}", ans)
}
```

```rust
#[clap(long)]
    scope: String,
    /// Pravega stream
    #[clap(long)]
    stream: String,
    /// Pravega keycloak file
    #[clap(long, default_value = "", setting(clap::ArgSettings::AllowEmptyValues))]
    keycloak_file: String,

    /// Check period
    #[clap(long, default_value = "60", setting(clap::ArgSettings::AllowEmptyValues))]
    check_period: u64,
}

/// Demonstrate ability to write using the byte stream writer and read using the event reader.
fn main() {
    env_logger::init();
    let opts: Opts = Opts::parse();
    let keycloak_file = if opts.keycloak_file.is_empty() {
        None
    } else {
        Some(opts.keycloak_file)
    };
    let client_config = utils::create_client_config(opts.controller, keycloak_file).expect("creating config");
    let client_factory = ClientFactory::new(client_config);
    let scope = Scope::from(opts.scope);
    let stream_name = format!("{}-index", opts.stream);
    let stream = Stream::from(stream_name);
    let index_scoped_stream = ScopedStream {
        scope: scope,
        stream: stream,
    };
    let runtime = client_factory.runtime();
    let index_reader = runtime.block_on(client_factory.create_byte_reader(index_scoped_stream));
    let mut index_searcher = IndexSearcher::new(SyncByteReader::new(index_reader, client_factory.runtime_handle()));
    let check_period = time::Duration::from_secs(opts.check_period);

    info!("Checking period is {} seconds",  opts.check_period);

    loop {
        let first_record = index_searcher.get_first_record().unwrap();
        info!("The first index record: timestamp={}", first_record.timestamp);
        let last_record = index_searcher.get_last_record().unwrap();
        info!("The last index record: timestamp={}", last_record.timestamp);
```

```rust
#[allow(unused_macros)]
macro_rules! input {
    (source = $s:expr, $($r:tt)*) => {
        let mut iter = $s.split_whitespace();
        input_inner!{iter, $($r)*}
    };
    ($($r:tt)*) => {
        let s = {
            use std::io::Read;
            let mut s = String::new();
            std::io::stdin().read_to_string(&mut s).unwrap();
            s
        };
        let mut iter = s.split_whitespace();
        input_inner!{iter, $($r)*}
    };
}

#[allow(unused_macros)]
macro_rules! input_inner {
    ($iter:expr) => {};
    ($iter:expr, ) => {};

    ($iter:expr, $var:ident : $t:tt $($r:tt)*) => {
        let $var = read_value!($iter, $t);
        input_inner!{$iter $($r)*}
    };
}

#[allow(unused_macros)]
macro_rules! read_value {
    ($iter:expr, ( $($t:tt),* )) => {
        ( $(read_value!($iter, $t)),* )
    };

    ($iter:expr, [ $t:tt ; $len:expr ]) => {
        (0..$len).map(|_| read_value!($iter, $t)).collect::<Vec<_>>()
    };

    ($iter:expr, chars) => {
        read_value!($iter, String).chars().collect::<Vec<char>>()
    };

    ($iter:expr, usize1) => {
        read_value!($iter, usize) - 1
    };

    ($iter:expr, $t:ty) => {
        $iter.next().unwrap().parse::<$t>().expect("Parse error")
    };
}

fn gcd(a: i64, b: i64) -> i64 {
    if b == 0 {
        a
    } else {
        gcd(b, a % b)
    }
}

fn main() {
    input! {
        n: usize,
        a: [i64; n],
    }

    let mut gcd_l = vec![0; n];
    let mut gcd_r = vec![0; n];
    gcd_l[0] = a[0];
    for i in 1..n {
        gcd_l[i] = gcd(a[i], gcd_l[i-1]);
    }

    gcd_r[n-1] = a[n-1];
    for i in (0..n - 1).rev() {
        gcd_r[i] = gcd(a[i], gcd_r[i+1]);
    }

    let mut ans = Vec::new();
    for i in 0..n {
        if i == 0 {
            ans.push(gcd_r[1]);
        } else if i == n - 1 {
            ans.push(gcd_l[n-2]);
        } else {
            ans.push(gcd(gcd_l[i-1], gcd_r[i+1]));
        }
    }
    println!("{}", ans.into_iter().max().unwrap());
}
```

```rust
use num_enum::IntoPrimitive;
use num_enum::TryFromPrimitive;
use std::convert::TryFrom;

use crate::protocol::Serializable;
use crate::communication::extractor::Extractor;


// -- HeaderType ----------------------------------------------------------------------------------------------
#[derive(Clone, Copy, Debug, Eq, PartialEq, IntoPrimitive, TryFromPrimitive)]
#[repr(u8)]
pub enum HeaderType {
    #[num_enum(default)]
    Monitor0    = 0x00,
    Monitor4    = 0x01,
    Monitor8    = 0x02
}


impl HeaderType {
    pub fn from_u8(data_u8: u8) -> HeaderType {
        match HeaderType::try_from( data_u8 ) {
            Ok(data) => { data },
            _ => { HeaderType::Monitor0 },
        }
    }
}


// -- DataType ----------------------------------------------------------------------------------------------
#[derive(Clone, Copy, Debug, Eq, PartialEq, IntoPrimitive, TryFromPrimitive)]
#[repr(u8)]
pub enum DataType {
    #[num_enum(default)]
    U8      = 0x00,
    S8      = 0x01,
    U16     = 0x02,
    S16     = 0x03,
    U32     = 0x04,
    S32     = 0x05,
    U64     = 0x06,
    S64     = 0x07,
    F32     = 0x08,
    F64     = 0x09
}


impl DataType {
    pub fn from_u8(data_u8: u8) -> DataType {
        match DataType::try_from( data_u8 ) {
            Ok(data) => { data },
            _ => { DataType::U8 },
        }
    }
}


// -- MonitorType -----------------------------------------------------------------------------------------------
#[derive(Debug, Copy, Clone)]
pub struct MonitorType {
    pub header_type: HeaderType,
}


impl MonitorType {
    pub fn new() -> MonitorType{
        MonitorType {
            header_type: HeaderType::Monitor4,
        }
    }


    pub const fn size() -> usize { 1 }


    pub fn parse(slice_data: &[u8]) -> Result<MonitorType, &'static str> {
        if slice_data.len() == MonitorType::size() {
            let mut ext: Extractor = Extractor::from_slice(slice_data);
```

```rust
use crate::value::Value;
use smallvec::SmallVec;

pub struct Stack {
    container: SmallVec<[Value; 32]>,
}

// default
impl Default for Stack {
    fn default() -> Self {
        Stack {
            container: Default::default(),
```

```rust
//! General purpose tcp server

mod accept;
mod builder;
mod config;
mod counter;
mod server;
mod services;
mod signals;
pub mod ssl;
mod worker;

pub use self::builder::ServerBuilder;
pub use self::config::{ServiceConfig, ServiceRuntime};
pub use self::server::Server;
pub use self::services::{ServerMessage, ServiceFactory, StreamServiceFactory};

/// Socket id token
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]
pub(crate) struct Token(usize);

impl Token {
    pub(crate) fn next(&mut self) -> Token {
        let token = Token(self.0 + 1);
        self.0 += 1;
        token
    }
}

/// Start server building process
pub fn build() -> ServerBuilder {
    ServerBuilder::default()
}
```

```rust
#[inline]
    pub fn from_bits(bits: u32) -> Self {
        Self { bits }
    }

    /// Returns the contents of the register as raw bits
    #[inline]
    pub fn bits(self) -> u32 {
        self.bits
    }

    /// Read the Negative condition code flag
    #[inline]
    pub fn n(self) -> bool {
        self.bits & (1 << 31) != 0
    }

    /// Sets the Negative condition code flag
    #[inline]
    pub fn set_n(&mut self, n: bool) {
        let mask = 1 << 31;
        match n {
            true => self.bits |= mask,
            false => self.bits &= !mask,
        }
    }

    /// Read the Zero condition code flag
    #[inline]
    pub fn z(self) -> bool {
        self.bits & (1 << 30) != 0
    }

    /// Sets the Zero condition code flag
    #[inline]
    pub fn set_z(&mut self, z: bool) {
        let mask = 1 << 30;
        match z {
            true => self.bits |= mask,
            false => self.bits &= !mask,
        }
    }

    /// Read the Carry condition code flag
    #[inline]
    pub fn c(self) -> bool {
```

```rust
#[allow(unused_macros)]
macro_rules! parse_line {
    ( $t:ty ) => (
        {
            let mut line = String::new();
            ::std::io::stdin().read_line(&mut line).unwrap();
            let mut iter = line.split_whitespace();
            iter.next().unwrap().parse::<$t>().unwrap()
        }
    );

    ( $( $t:ty), +) => (
        {
            let mut line = String::new();
            ::std::io::stdin().read_line(&mut line).unwrap();
            let mut iter = line.split_whitespace();
            ( $(iter.next().unwrap().parse::<$t>().unwrap()),* )
        }
    );
}

#[allow(unused_macros)]
macro_rules! read_line {
    () => {{
        let mut line = String::new();
        ::std::io::stdin().read_line(&mut line).unwrap();
        line.trim_right();
        line
    }};
}

#[allow(unused_macros)]
macro_rules! parse_vec {
    ( $t:ty ) => {{
        let mut line = String::new();
        ::std::io::stdin().read_line(&mut line).unwrap();
        let iter = line.split_whitespace();
        iter.map(|v| v.parse::<$t>().unwrap()).collect::<Vec<_>>()
    }};
}

fn is_kaibun(s: &String) -> bool {
    let n = s.len();
    let s = s.chars().collect::<Vec<_>>();

    for i in 0..n {
        if s[i] != s[n - 1 - i] {
            return false;
        }
    }

    true
}

fn main() {
    let s = read_line!();
    let n = s.len();
    println!(
        "{}",
        if is_kaibun(&s)
            && is_kaibun(&s[0..((n - 1) / 2)].to_string())
            && is_kaibun(&s[((n + 3) / 2 - 1)..].to_string())
        {
            "Yes"
        } else {
            "No"
        }
    );
}
```

```rust
where
    F: Fn(I) -> T,
    T: ToTokens,
{
    input.fold(quote! {}, |acc, x| {
        let y = f(x);
        quote! { #acc #y }
    })
}

pub fn is_unit(v: &syn::Variant) -> bool {
    matches!(v.fields, syn::Fields::Unit)
}

/// Pretty-print the output of proc macro using rustfmt.
pub(crate) fn debug_with_rustfmt(input: &TokenStream) {
    use std::io::Write;
    use std::process::{Command, Stdio};

    let mut child = Command::new("rustfmt")
        .stdin(Stdio::piped())
        .stdout(Stdio::piped())
        .spawn()
        .expect("Failed to spawn rustfmt in stdio mode");
    {
        let stdin = child.stdin.as_mut().expect("Failed to get stdin");
        stdin
            .write_all(format!("{}", input).as_bytes())
            .expect("Failed to write to stdin");
    }
    let rustfmt_output = child.wait_with_output().expect("rustfmt has failed");

    eprintln!(
        "{}",
        String::from_utf8(rustfmt_output.stdout).expect("rustfmt returned non-UTF8 string")
    );
}
```

```rust
use xshell::{cmd, pushd};

fn main() {
    // When run locally, results may differ from actual CI runs triggered by
    // .github/workflows/ci.yml
    // - Official CI runs latest stable
    // - Local runs use whatever the default Rust is locally

    // See if any code needs to be formatted
    cmd!("cargo fmt --all -- --check")
        .run()
        .expect("Please run 'cargo fmt --all' to format your code.");

    // See if clippy has any complaints.
    // - Type complexity must be ignored because we use huge templates for queries
    cmd!("cargo clippy --workspace --all-targets --all-features -- -D warnings -A clippy::type_complexity -W clippy::doc_markdown")
        .run()
        .expect("Please fix clippy errors in output above.");

    // Run UI tests (they do not get executed with the workspace tests)
    // - See crates/bevy_ecs_compile_fail_tests/README.md
    {
        let _bevy_ecs_compile_fail_tests = pushd("crates/bevy_ecs_compile_fail_tests")
            .expect("Failed to navigate to the 'bevy_ecs_compile_fail_tests' crate");
        cmd!("cargo test")
            .run()
            .expect("Compiler errors of the ECS compile fail tests seem to be different than expected! Check locally and compare rust versions.");
    }
}
```

```rust
#[doc = "PDM_CLK = 32 MHz / 26 = 1.231 MHz"]
    _1231K,
    #[doc = "PDM_CLK = 32 MHz / 25 = 1.280 MHz. Nominal clock for RATIO=Ratio80."]
    _1280K,
    #[doc = "PDM_CLK = 32 MHz / 24 = 1.333 MHz"]
    _1333K,
    #[doc = r" Reserved"]
    _Reserved(u32),
}
impl FREQR {
    #[doc = r" Value of the field as raw bits"]
    #[inline]
    pub fn bits(&self) -> u32 {
        match *self {
            FREQR::_1000K => 134217728,
            FREQR::DEFAULT => 138412032,
            FREQR::_1067K => 142606336,
            FREQR::_1231K => 159383552,
            FREQR::_1280K => 167772160,
            FREQR::_1333K => 176160768,
            FREQR::_Reserved(bits) => bits,
        }
    }
    #[allow(missing_docs)]
    #[doc(hidden)]
    #[inline]
    pub fn _from(value: u32) -> FREQR {
        match value {
            134217728 => FREQR::_1000K,
            138412032 => FREQR::DEFAULT,
            142606336 => FREQR::_1067K,
            159383552 => FREQR::_1231K,
            167772160 => FREQR::_1280K,
            176160768 => FREQR::_1333K,
            i => FREQR::_Reserved(i),
        }
    }
    #[doc = "Checks if the value of the field is `_1000K`"]
    #[inline]
    pub fn is_1000k(&self) -> bool {
        *self == FREQR::_1000K
    }
    #[doc = "Checks if the value of the field is `DEFAULT`"]
    #[inline]
    pub fn is_default(&self) -> bool {
```

```rust
let clock_bounds = Bounds { row_offset: 1, max_row: 2, .. bounds };
            gal.add_term_opt(&olmc.clock, &clock_bounds)?;
        }
    }

    Ok(())
}

// Set the XOR bits for inverting outputs, if necessary.
fn set_xors(gal: &mut GAL, blueprint: &Blueprint) {
    let num_olmcs = blueprint.olmcs.len();
    for (olmc, i) in blueprint.olmcs.iter().zip(0..) {
        if olmc.output.is_some() && olmc.active == Active::High {
            gal.xor[num_olmcs - 1 - i] = true;
        }
    }
}

// We don't do anything with the PT bits in the GALxxV8s.
fn set_pts(gal: &mut GAL) {
    for bit in gal.pt.iter_mut() {
        *bit = true;
    }
}

////////////////////////////////////////////////////////////////////////
// Other helper functions.
//

// Adjust the bounds for the main term of there's a tristate enable
// term etc. in the first rows.
fn adjust_main_bounds(
    gal: &GAL,
    output: &Option<(PinMode, gal::Term)>,
    bounds: &Bounds
) -> Bounds {
    match gal.chip {
        Chip::GAL16V8 | Chip::GAL20V8 => {
            // Registered outputs don't have a tristate enable, or
            // indeed any pins in Mode 1.
            let reg_out = if let Some((PinMode::Registered, _)) = output {
                true
            } else {
                false
            };
            if gal.get_mode() == Mode::Mode1 || reg_out {
                *bounds
            } else {
                // Skip the tristate enable row.
                Bounds { row_offset: 1, ..*bounds }
            }
        }
        // Skip tristate enable.
        Chip::GAL22V10 => Bounds { row_offset: 1, ..*bounds },
        // Skip ARST, APRST, CLK.
        Chip::GAL20RA10 => Bounds { row_offset: 4, .. *bounds },
    }
}

// Check that we're not trying to use GAL20RA10-specific features.
fn check_not_gal20ra10(blueprint: &Blueprint) -> Result<(), Error> {
    for olmc in blueprint.olmcs.iter() {
        if let Some(term) = &olmc.clock {
            return at_line(term.line_num, Err(ErrorCode::DisallowedCLK));
        }
        if let Some(term) = &olmc.arst {
            return at_line(term.line_num, Err(ErrorCode::DisallowedARST));
        }
        if let Some(term) = &olmc.aprst {
            return at_line(term.line_num, Err(ErrorCode::DisallowedAPRST));
        }
    }
    Ok(())
}

// Check that the main output is in the right mode to use a tristate.
fn check_tristate(chip: Chip, olmc: &OLMC) -> Result<(), ErrorCode> {
    match olmc.output {
        None =>
            Err(ErrorCode::SoloEnable),
        Some((PinMode::Registered, _)) if chip == Chip::GAL16V8 || chip == Chip::GAL20V8 =>
            Err(ErrorCode::TristateReg),
        Some((PinMode::Combinatorial, _)) =>
            Err(ErrorCode::UnmatchedTristate),
        _ => Ok(())
    }
}

fn check_aux(field: &Option<gal::Term>, olmc: &OLMC, missing_err: ErrorCode) -> Result<(), Error> {
    if let Some(ref term) = field {
        at_line(term.line_num, match olmc.output {
            None => Err(missing_err),
            Some((PinMode::Registered, _)) => Ok(()),
            _ => Err(ErrorCode::InvalidControl),
        })
    } else {
        Ok(())
    }
}

////////////////////////////////////////////////////////////////////////
// GALxV8 analysis - determine which mode to run the chip in.

fn set_mode(gal: &mut GAL, blueprint: &Blueprint) {
    gal.set_mode(analyse_mode(&blueprint.olmcs));
}

fn analyse_mode(olmcs: &[OLMC]) -> Mode {
    // If there's a registered pin, it's mode 3.
    for n in 0..8 {
        if let Some((PinMode::Registered, _)) = olmcs[n].output  {
            return Mode::Mode3;
        }
    }
    // If there's a tristate, it's mode 2.
    for n in 0..8 {
        if let Some((PinMode::Tristate, _)) = olmcs[n].output {
            return Mode::Mode2;
        }
    }
    // If we can't use mode 1, use mode 2.
    for n in 0..8 {
        // Some OLMCs cannot be configured as pure inputs in Mode 1.
        if olmcs[n].feedback && olmcs[n].output.is_none() {
            if n == 3 || n == 4 {
                return Mode::Mode2;
            }
        }
        // OLMC pins cannot be used as combinatorial feedback in Mode 1.
        if olmcs[n].feedback && olmcs[n].output.is_some() {
            return Mode::Mode2;
        }
    }
    // If there is still no mode defined, use mode 1.
    return Mode::Mode1;
}
```

```rust
//! Generic operators defined by user-provided closures.

pub mod operator;
pub mod builder_rc;
pub mod builder_raw;
// pub mod builder_ref;
mod handles;
mod notificator;
mod operator_info;

pub use self::handles::{InputHandle, FrontieredInputHandle, OutputHandle, OutputWrapper};
pub use self::notificator::{Notificator, FrontierNotificator};

pub use self::operator::{Operator, source};
pub use self::operator_info::OperatorInfo;
```

```rust
//! etcd's authentication and authorization API.
//!
//! These API endpoints are used to manage users and roles.

use std::str::FromStr;

use futures::{Future, IntoFuture, Stream};
use hyper::client::connect::Connect;
use hyper::{StatusCode, Uri};
use serde_derive::{Deserialize, Serialize};
use serde_json;

use crate::client::{Client, ClusterInfo, Response};
use crate::error::{ApiError, Error};
use crate::first_ok::first_ok;

/// The structure returned by the `GET /v2/auth/enable` endpoint.
#[derive(Clone, Copy, Debug, Deserialize, Eq, Hash, PartialEq, Serialize)]
struct AuthStatus {
    /// Whether or not the auth system is enabled.
    pub enabled: bool,
}
```

```rust
use std::io::{self, BufRead};
use std::mem::swap;

const M: usize = 1000000007;

fn create_div_floor(n: usize) -> Vec<usize> {
  let mut divfloor: Vec<usize> = Vec::new();
  let mut i: usize = 1;
  while i * i <= n {
    divfloor.push(i);
    i += 1;
  }
  let j = divfloor.len();
  for i in (0..j) {
    let k = n / divfloor[j-i-1];
    if *(divfloor.last().unwrap()) != k {
      divfloor.push(k);
    }
  }
  divfloor
}

fn main() {
  let stdin = io::stdin();
  let mut lines = stdin.lock().lines();
  let xs: Vec<usize> = lines.next().unwrap().unwrap().split(' ').map(|x| x.parse().unwrap()).collect();
  let (n, k) = (xs[0], xs[1]);
  let df = create_div_floor(n);
  let mut counts = df.clone();
  for l in 0..(k-1) {
    let mut temp = vec![0; df.len()];
    temp[0] = counts[df.len()-1];
    for i in 1..df.len() {
      let j = df.len() - i - 1;
      let k = df[i] - df[i-1];
      temp[i] = (temp[i-1] + (k * counts[j] % M)) % M;
    }
    swap(&mut counts, &mut temp);
  }
  println!("{}", counts[df.len()-1]);
}
```

```rust
// Copyright 2015 The coio Developers.
//
// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or
// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license
// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your
// option. This file may not be copied, modified, or distributed
// except according to those terms.

extern crate coio;

use std::sync::Arc;
use std::sync::atomic::{AtomicUsize, Ordering};

use coio::Scheduler;

fn main() {
    let counter = Arc::new(AtomicUsize::new(0));
    let cloned_counter = counter.clone();

    let result = Scheduler::new().run(move || {
        // Spawn a new coroutine
        Scheduler::spawn(move || {
            struct Guard(Arc<AtomicUsize>);

            impl Drop for Guard {
                fn drop(&mut self) {
                    self.0.store(1, Ordering::SeqCst);
                }
            }

            let _guard = Guard(cloned_counter);

            coio::sleep_ms(10_000);
            unreachable!("Not going to run this line");
        });

        // Exit right now, which will cause the coroutine to be destroyed.
        panic!("Exit right now!!");
    });

    assert!(result.is_err());
    assert!(counter.load(Ordering::SeqCst) == 1);
}
```

```rust
// Try AtCoder
// author: Leonardone @ NEETSDKASU

fn main() {
	let mut stdin = String::new();
    std::io::Read::read_to_string(
    	&mut std::io::stdin(),
        &mut stdin).unwrap();
    let mut stdin = stdin.split_whitespace();
    let mut get = || stdin.next().unwrap();
    macro_rules! get {
    	($t:ty) => (get().parse::<$t>().unwrap());
        () => (get!(i64));
    }
    
    let n = get!();
    let mut ans = 0;
    let mut p = 0;
    for _ in 0..n {
    	let mut x = get!();
        if x % 2 != 0 {
        	ans += 1;
            p += 1;
        }
        while x % 2 == 0 {
        	x /= 1;
            ans += 1;
        }
    }
    if p == n {
    	ans -= 1;
    }
    println!("{}", ans);
}
```

```rust
use serde::{Deserialize, Serialize};
struct NamedUnit;
#[doc(hidden)]
#[allow(non_upper_case_globals, unused_attributes, unused_qualifications)]
const _: () = {
    #[allow(unused_extern_crates, clippy::useless_attribute)]
    extern crate serde as _serde;
    #[automatically_derived]
    impl _serde::Serialize for NamedUnit {
        fn serialize<__S>(
            &self,
            __serializer: __S,
        ) -> _serde::__private::Result<__S::Ok, __S::Error>
        where
            __S: _serde::Serializer,
        {
            _serde::Serializer::serialize_unit_struct(__serializer, "NamedUnit")
        }
    }
};
#[doc(hidden)]
#[allow(non_upper_case_globals, unused_attributes, unused_qualifications)]
const _: () = {
    #[allow(unused_extern_crates, clippy::useless_attribute)]
    extern crate serde as _serde;
    #[automatically_derived]
    impl<'de> _serde::Deserialize<'de> for NamedUnit {
        fn deserialize<__D>(__deserializer: __D) -> _serde::__private::Result<Self, __D::Error>
        where
            __D: _serde::Deserializer<'de>,
        {
            struct __Visitor;
            impl<'de> _serde::de::Visitor<'de> for __Visitor {
                type Value = NamedUnit;
                fn expecting(
                    &self,
                    __formatter: &mut _serde::__private::Formatter,
                ) -> _serde::__private::fmt::Result {
                    _serde::__private::Formatter::write_str(__formatter, "unit struct NamedUnit")
                }
                #[inline]
                fn visit_unit<__E>(self) -> _serde::__private::Result<Self::Value, __E>
                where
                    __E: _serde::de::Error,
                {
                    _serde::__private::Ok(NamedUnit)
                }
            }
            _serde::Deserializer::deserialize_unit_struct(__deserializer, "NamedUnit", __Visitor)
        }
    }
};
```

```rust
use std::io;
use std::cmp;

fn read_line() -> String{
    let mut s = String::new();
    io::stdin().read_line(&mut s).unwrap();
    s
}

fn read_ints() -> Vec<i64>{
    let s = read_line();
    let split:Vec<&str> = s.trim().split(" ").collect();
    split.iter().map(|&x| x.to_string().parse().unwrap()).collect()
}

fn main(){
    let _n = read_ints()[0];
    let xs = read_ints();
    let s : i64 = xs.iter().sum();
    
    let mut m = (s+1).abs();
    let mut a : i64 = 0;
    
    for (idx,x) in xs.iter().enumerate(){
        if idx == xs.len() -1{
            break;
        }
        a += *x;
        m = cmp::min(m,(s - 2*a).abs());
    }
    println!("{}",m);
}
```

```rust
extern crate blurz;

use std::error::Error;
use std::fs;
use std::fs::File;
use std::io::Write;
use std::path::Path;

use blurz::bluetooth_adapter::BluetoothAdapter as Adapter;
use blurz::bluetooth_device::BluetoothDevice as Device;
use blurz::bluetooth_obex::{
    BluetoothOBEXSession as OBEXSession, BluetoothOBEXTransfer as OBEXTransfer,
};
use blurz::bluetooth_session::BluetoothSession as Session;

fn test_obex_file_transfer() -> Result<(), Box<dyn Error>> {
    let session = &Session::create_session(None)?;
    let adapter: Adapter = Adapter::init(session)?;
    let devices: Vec<String> = adapter.get_device_list()?;

    let filtered_devices = devices
        .iter()
        .filter(|&device_id| {
            let device = Device::new(session, device_id);
            device.is_ready_to_receive().unwrap()
        })
        .cloned()
        .collect::<Vec<String>>();

    let device_id: &str = &filtered_devices[0];
    let device = Device::new(session, device_id);

    let session = OBEXSession::new(session, &device)?;

    let mut empty_file = File::create("./test.png")?;
    empty_file.write_all(b"1111")?;

    let file_path = Path::new("./test.png").canonicalize()?;
    let file_str = file_path.to_str().unwrap();
    let transfer = OBEXTransfer::send_file(&session, file_str)?;
    transfer.wait_until_transfer_completed()?;

    session.remove_session()?;
    fs::remove_file(&file_path)?;
    Ok(())
}

fn main() {
    match test_obex_file_transfer() {
        Ok(_) => (),
        Err(e) => println!("{:?}", e),
    }
}
```

```rust
let _guard = c.loops.push(Loop {
            label: self.label.map(|(label, _)| label),
            continue_label,
            continue_var_count: var_count,
            break_label,
            break_var_count: var_count,
            needs,
            drop: None,
        });

        c.asm.label(continue_label)?;
```

```rust
use crate::{
    generated::{
        bpf_attach_type::{BPF_SK_SKB_STREAM_PARSER, BPF_SK_SKB_STREAM_VERDICT},
        bpf_prog_type::BPF_PROG_TYPE_SK_SKB,
    },
    maps::sock::SocketMap,
    programs::{load_program, LinkRef, ProgAttachLink, ProgramData, ProgramError},
    sys::bpf_prog_attach,
};

/// The kind of [`SkSkb`] program.
#[derive(Copy, Clone, Debug)]
pub enum SkSkbKind {
    /// A Stream Parser
    StreamParser,
    /// A Stream Verdict
    StreamVerdict,
}

/// A program used to intercept ingress socket buffers.
///
/// [`SkSkb`] programs are attached to [socket maps], and can be used to
/// inspect, redirect or filter incoming packet. See also [`SockMap`] and
/// [`SockHash`].
///
/// # Minimum kernel version
///
/// The minimum kernel version required to use this feature is 4.14.
///
/// # Examples
///
/// ```no_run
/// # let mut bpf = aya::Bpf::load(&[])?;
/// use std::convert::{TryFrom, TryInto};
/// use aya::maps::SockMap;
/// use aya::programs::SkSkb;
///
/// let intercept_ingress = SockMap::try_from(bpf.map_mut("INTERCEPT_INGRESS")?)?;
/// let prog: &mut SkSkb = bpf.program_mut("intercept_ingress_packet").unwrap().try_into()?;
/// prog.load()?;
/// prog.attach(&intercept_ingress)?;
/// # Ok::<(), aya::BpfError>(())
/// ```
///
/// [socket maps]: crate::maps::sock
/// [`SockMap`]: crate::maps::SockMap
/// [`SockHash`]: crate::maps::SockHash
#[derive(Debug)]
#[doc(alias = "BPF_PROG_TYPE_SK_SKB")]
pub struct SkSkb {
    pub(crate) data: ProgramData,
    pub(crate) kind: SkSkbKind,
}

impl SkSkb {
    /// Loads the program inside the kernel.
    ///
    /// See also [`Program::load`](crate::programs::Program::load).
    pub fn load(&mut self) -> Result<(), ProgramError> {
        load_program(BPF_PROG_TYPE_SK_SKB, &mut self.data)
    }

    /// Attaches the program to the given socket map.
    pub fn attach(&mut self, map: &dyn SocketMap) -> Result<LinkRef, ProgramError> {
        let prog_fd = self.data.fd_or_err()?;
        let map_fd = map.fd_or_err()?;

        let attach_type = match self.kind {
            SkSkbKind::StreamParser => BPF_SK_SKB_STREAM_PARSER,
            SkSkbKind::StreamVerdict => BPF_SK_SKB_STREAM_VERDICT,
        };
        bpf_prog_attach(prog_fd, map_fd, attach_type).map_err(|(_, io_error)| {
            ProgramError::SyscallError {
                call: "bpf_prog_attach".to_owned(),
                io_error,
            }
        })?;
        Ok(self
            .data
            .link(ProgAttachLink::new(prog_fd, map_fd, attach_type)))
    }
}
```

```rust
let deserialized_bank = snapshot_utils::bank_from_archive(
                    &account_paths,
                    &process_options.frozen_accounts,
                    &snapshot_config.snapshot_path,
                    &archive_filename,
                    compression,
                    genesis_config,
                    process_options.debug_keys.clone(),
                    Some(&crate::builtins::get(
                        genesis_config.cluster_type,
                        process_options.bpf_jit,
                    )),
                )
                .expect("Load from snapshot failed");

                let deserialized_snapshot_hash = (
                    deserialized_bank.slot(),
                    deserialized_bank.get_accounts_hash(),
                );

                if deserialized_snapshot_hash != (archive_slot, archive_snapshot_hash) {
                    error!(
                        "Snapshot has mismatch:\narchive: {:?}\ndeserialized: {:?}",
                        archive_snapshot_hash, deserialized_snapshot_hash
                    );
                    process::exit(1);
                }

                return to_loadresult(
                    blockstore_processor::process_blockstore_from_root(
                        blockstore,
                        deserialized_bank,
                        &process_options,
                        &VerifyRecyclers::default(),
                        transaction_status_sender,
                    ),
                    Some(deserialized_snapshot_hash),
                );
            }
            None => info!("No snapshot package available"),
        }
    } else {
        info!("Snapshots disabled");
    }

    info!("Processing ledger from genesis");
    to_loadresult(
        blockstore_processor::process_blockstore(
            &genesis_config,
            &blockstore,
            account_paths,
            process_options,
        ),
        None,
    )
}
```

```rust
// Try CADDi 2018 for Beginners
// author: Leonardone @ NEETSDKASU

fn main() {
	let mut stdin = String::new();
    std::io::Read::read_to_string(
    	&mut std::io::stdin(),
        &mut stdin).unwrap();
	let mut stdin = stdin.split_whitespace();
    let mut get = || stdin.next().unwrap();
    macro_rules! get {
    	($t:ty) => (get().parse::<$t>().unwrap());
        () => (get!(i64));
    }
    
    let n = get!();
    let mut p = get!();
    if n== 1 {
    	println!("{}", p);
        return;
    }
    
    let mut ans = 1_i64;
    let mut i = 2;
    while i * i <= p {
    	if p % i == 0 {
        	let mut c = 0;
            while p % i == 0 {
            	p /= i;
                c += 1;
            }
            let x = c / n;
            for _ in 0..x {
            	ans *= i;
            }
        }
        i += 1;
    }
    println!("{}", ans);
}
```

```rust
// Copyright 2012 The Rust Project Developers. See the COPYRIGHT
// file at the top-level directory of this distribution and at
// http://rust-lang.org/COPYRIGHT.
//
// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or
// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license
// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your
// option. This file may not be copied, modified, or distributed
// except according to those terms.

use abi;
use ast::{P, Ident, Generics, NodeId, Expr};
use ast;
use ast_util;
use attr;
use codemap::{Span, respan, Spanned, DUMMY_SP, Pos};
use ext::base::ExtCtxt;
use fold::Folder;
```

```rust
Ok(())
}

fn main() {
    let filename = std::env::args_os().nth(1).expect("Missing PDB filename");

    match dump_stream_names(&filename) {
        Ok(_) => (),
        Err(e) => eprintln!("error dumping PDB: {}", e),
    }
}
```

```rust
fn main() {
    fn read<T: std::str::FromStr>() -> T {
        let mut s = String::new();
        std::io::stdin().read_line(&mut s).ok();
        s.trim().parse().ok().unwrap()
    }
    fn read_vec<T: std::str::FromStr>() -> Vec<T> {
        read::<String>().split_whitespace().map(|e| e.parse().ok().unwrap()).collect()
    }
    let ab = read_vec::<u64>();
    let a = ab[0];
    let b = ab[1];
    println!("{}", solve(a, b));
}

fn solve(a: u64, b: u64) -> u64 {
  f(a-1)^(f(b))
}
fn f(x: u64) -> u64{
  if x % 2 == 0 {
    x^(x/2%2)
  } else {
    f(x+1)^(x+1)
  }
}
```

```rust
use crate::_loop::Loop;
use crate::circuit::Circuit;
use crate::condition::StopCondition;
use crate::measure::Measure;
use crate::operation::CircuitElement;
use crate::operation::QuantumOperation;

pub struct QuantumCircuitBuilder {
    nb_qbits: u8,
    operations: Vec<CircuitElement>,
}

impl QuantumCircuitBuilder {
    pub(crate) fn new(nb_qbits: u8) -> Self {
        return Self { nb_qbits, operations: Vec::new() };
    }

    pub fn build(&self) -> Result<Circuit, String> {
        let circuit = Circuit { nb_qbits: self.nb_qbits, elements: self.operations.clone() };
        circuit.check_validity(self.nb_qbits).map(|()| circuit)
    }

    pub fn add_loop(&mut self, circuit: impl Into<Circuit>, loop_condition: StopCondition) -> &mut QuantumCircuitBuilder {
        self.add_operation(Loop { circuit: circuit.into(), stop_condition: loop_condition })
    }

    /// Add a measurement operation that will measure a given qbits.
    /// After measurement, the quantum state is in the measured state (there is no superposition)
    /// # Arguments
    /// - id : an id that can be used for further reference in [`StopCondition`]
    ///
    ///
    /// [`StopCondition`]: condition/StopCondition
    pub fn add_measure(&mut self, id: &str, qbit_target: u8) -> &mut QuantumCircuitBuilder {
        self.add_operation(Measure { id: id.to_string(), qbit_target })
    }

    pub fn add_operation(&mut self, operation: impl Into<CircuitElement>) -> &mut QuantumCircuitBuilder {
        self.operations.push(operation.into());
        self
    }
}

impl From<QuantumCircuitBuilder> for Circuit {
    fn from(b: QuantumCircuitBuilder) -> Self {
        return b.build().unwrap();
    }
}

impl From<&mut QuantumCircuitBuilder> for Circuit {
    fn from(b: &mut QuantumCircuitBuilder) -> Self {
        return b.build().unwrap();
    }
}
```

```rust
use std::cmp::min;
use std::io::*;
use std::str::FromStr;

fn read<T: FromStr>() -> T {
    let stdin = stdin();
    let stdin = stdin.lock();
    let token: String = stdin
        .bytes()
        .map(|c| c.expect("Failed to read bytes") as char)
        .skip_while(|c| c.is_whitespace())
        .take_while(|c| !c.is_whitespace())
        .collect();
    token.parse().ok().expect("failed to parse token")
}

fn main() {
    let n:usize = read();
    let w:usize = read();
    let mut weight = Vec::with_capacity(n);
    let mut value = Vec::with_capacity(n);
    for _ in 0..n {
        weight.push(read::<usize>());
        value.push(read::<usize>());
    }
    let mut dp = vec![vec![1<<60; 100000]; n+1];

    dp[0][0] = 0;

    for i in 0..n {
        for sum_v in 0..100000 {
            if sum_v >= value[i] {
                dp[i+1][sum_v] = min(dp[i+1][sum_v], dp[i][sum_v - value[i]] + weight[i]);
            }
            dp[i+1][sum_v] = min(dp[i+1][sum_v], dp[i][sum_v]);
        }
    }

    let mut ans = 0;

    for sum_v in 0..100000 {
        if dp[n][sum_v] <= w {
            ans = sum_v;
        }
    }
    println!("{}", ans);
}
```

```rust
//! Echoes lines read on stdin to stdout.

use async_std::io;
use async_std::prelude::*;
use async_std::task;

fn main() -> io::Result<()> {
    task::block_on(async {
        let stdin = io::stdin();
        let mut stdout = io::stdout();
        let mut line = String::new();

        loop {
            // Read a line from stdin.
            let n = stdin.read_line(&mut line).await?;

            // If this is the end of stdin, return.
            if n == 0 {
                return Ok(());
            }

            // Write the line to stdout.
            stdout.write_all(line.as_bytes()).await?;
            stdout.flush().await?;
            line.clear();
        }
    })
}
```

```rust
use std::io;

fn main() {
    let mut line = String::new();
    io::stdin().read_line(&mut line).unwrap();
    let mut it = line.split_whitespace();
    let a = it.next().unwrap().parse::<usize>().unwrap();
    let b = it.next().unwrap().parse::<usize>().unwrap();

    if (a * b) % 2 == 0 {
        println!("Even");
    } else {
        println!("Odd");
    }
}
```

```rust
use proconio::input;
use proconio::fastout;


#[fastout]
fn main() {
    input! {
        n: usize,
        mut a: [usize; n],
    }

    let mut appear = [0; 1000001];
    for v in &a {
        appear[*v] += 1;
    }

    let mut ans = 0;
    a.sort();
    for v in &a {
        if appear[*v] == 1 {
            ans += 1;
        }
        if appear[*v] > 0 {
            for i in (*v .. 1000001).step_by(*v) {
                appear[i] = 0;
            }
        }
    }

    println!("{}", ans);
}
```

```rust
use crate::memory::Frame;

pub trait FrameAllocator {
    fn alloc_one(&mut self) -> Option<Frame>;
    fn free(&mut self, f: Frame);
}
```

```rust
// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT
// file at the top-level directory of this distribution and at
// http://rust-lang.org/COPYRIGHT.
//
// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or
// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license
// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your
// option. This file may not be copied, modified, or distributed
// except according to those terms.

/*!
# Debug Info Module

This module serves the purpose of generating debug symbols. We use LLVM's
[source level debugging](http://llvm.org/docs/SourceLevelDebugging.html)
features for generating the debug information. The general principle is this:

Given the right metadata in the LLVM IR, the LLVM code generator is able to
create DWARF debug symbols for the given code. The
[metadata](http://llvm.org/docs/LangRef.html#metadata-type) is structured much
like DWARF *debugging information entries* (DIE), representing type information
```

```rust
use std::{convert::TryFrom, ops::Not};

use itertools::Itertools;
use regex::Regex;
use wiremock::{Match, Request};

use super::{HttpQueryParamsStub, super::matcher::RequestMatcherStub};

pub struct QueryRegexMatcher(String, Regex, bool);

impl QueryRegexMatcher {
    fn matches(&self, value: &str) -> bool {
        ((self.2) ^ (self.1.is_match(value))).not()
    }
}

impl Match for QueryRegexMatcher {
    fn matches(&self, req: &Request) -> bool {
        req.url.query_pairs()
            .find(|(k, _)| k == self.0.as_str())
            .map(|(_, v)| self.matches(v.as_ref()))
            .unwrap_or_default()
    }
}

impl From<&HttpQueryParamsStub> for Vec<QueryRegexMatcher> {
    fn from(queries: &HttpQueryParamsStub) -> Self {
        queries.get_queries().iter()
            .filter(|q| q.is_by_regex())
            .map(QueryRegexMatcher::try_from).flatten()
            .collect_vec()
    }
}

impl TryFrom<&RequestMatcherStub> for QueryRegexMatcher {
    type Error = anyhow::Error;

    fn try_from(query: &RequestMatcherStub) -> anyhow::Result<Self> {
        let maybe_positive_regex = query.matches_as_regex()
            .filter(|_| query.is_matches())
            .map(|it| QueryRegexMatcher(query.key.to_string(), it, true));
        let maybe_negative_regex = || {
            query.does_not_match_as_regex()
                .filter(|_| query.is_does_not_matches())
                .map(|it| QueryRegexMatcher(query.key.to_string(), it, false))
        };
        maybe_positive_regex
            .or_else(maybe_negative_regex)
            .ok_or_else(|| anyhow::Error::msg("No query matcher by regex found"))
    }
}
```

```rust
use nu_engine::get_full_help;
use nu_protocol::{
    ast::Call,
    engine::{Command, EngineState, Stack},
    Category, IntoPipelineData, PipelineData, Signature, Value,
};

#[derive(Clone)]
pub struct RandomCommand;

impl Command for RandomCommand {
    fn name(&self) -> &str {
        "random"
    }

    fn signature(&self) -> Signature {
        Signature::build("random").category(Category::Random)
    }

    fn usage(&self) -> &str {
        "Generate a random values."
    }

    fn run(
        &self,
        engine_state: &EngineState,
        _stack: &mut Stack,
        call: &Call,
        _input: PipelineData,
    ) -> Result<nu_protocol::PipelineData, nu_protocol::ShellError> {
        Ok(Value::String {
            val: get_full_help(
                &RandomCommand.signature(),
                &RandomCommand.examples(),
                engine_state,
            ),
            span: call.head,
        }
        .into_pipeline_data())
    }
}
```

```rust
fn main() {
    let (n,m) = {
        let s=rv::<usize>();
        (s[0],s[1])
    };
    let mut ab=Vec::with_capacity(m);
    for _ in 0..m {
        let s=rv::<usize>();
        ab.push((s[0]-1,s[1]-1));
    }
    let mut v=n*(n-1)/2;
    let mut uf=vec![-1;n];
    let mut r=vec![0;m];
    for (i,(a,b)) in ab.into_iter().enumerate().rev() {
        r[i]=v;
        if find(&mut uf, a)!=find(&mut uf, b) {
            v-=count(&mut uf, a)*count(&mut uf, b);
            unite(&mut uf, a, b);
        }
    }
    for r in r {
        println!("{}",r);
    }
}
fn find(uf: &mut Vec<i32>, i: usize) -> usize {
    if uf[i]<0 {
        i
    }
    else {
        let j=uf[i]as usize;
        uf[i]=find(uf, j)as i32;
        uf[i] as usize
    }
}
fn count(uf: &mut Vec<i32>, i: usize) -> usize {
    let j=find(uf,i);
    -uf[j] as usize
}
fn unite(uf: &mut Vec<i32>, mut i: usize, mut j: usize) {
    i=find(uf,i);
    j=find(uf,j);
    if i==j {
        return;
    }
    if uf[i]<uf[j] {
        std::mem::swap(&mut i, &mut j);
    }
    uf[i]+=uf[j];
    uf[j]=i as i32;
}
fn rl() -> String {
    let mut s = String::new();
    std::io::stdin().read_line(&mut s).unwrap();
    s
}
fn rv<T>() -> Vec<T> where T: std::str::FromStr, T::Err: std::fmt::Debug, {
    rl().split_whitespace().map(|x|x.parse::<T>().unwrap()).collect()
}
```

```rust
use proconio::input;
use proconio::marker::Chars;

fn main() {
    input! {
        ss: Chars,
    };
    println!("{}", ss.iter().filter(|&&c| c == '1').count());
}
```

```rust
fn read<T: std::str::FromStr>() -> T {
    use std::io::Read;
    let stdin = std::io::stdin();
    let s: String = stdin
        .bytes()
        .map(|c| c.unwrap() as char)
        .take_while(|c| !c.is_whitespace())
        .collect();
    s.parse::<T>().ok().unwrap()
}

fn ki_su(mut vec: Vec<u32>) {
    vec.sort_by(|a, b| a.cmp(b));
    let ans = vec[1] * vec[0];
    println!("{}", ans);
}
fn is_ki_su(vec: &std::vec::Vec<u32>) -> bool {
    vec.iter().fold(1, |sum, &x| sum * x) % 2 == 1
}
#[test]
fn ki_su_test() {
    assert!(is_ki_su(vec![3]));
    assert!(is_ki_su(vec![3, 5]));
    assert!(!is_ki_su(vec![2]));
    assert!(!is_ki_su(vec![2, 3]));
    assert!(is_ki_su(vec![3, 3]));
}

fn main() {
    let a: u32 = read();
    let b: u32 = read();
    let c: u32 = read();
    let vec = vec![a, b, c];

    if is_ki_su(&vec) {
        ki_su(vec);
    } else {
        println!("0");
    }
}
```

```rust
mod with_atom_module;

use std::convert::TryInto;
use std::sync::Arc;

use anyhow::*;

use proptest::strategy::Just;

use liblumen_alloc::erts::process::{Priority, Status};
use liblumen_alloc::erts::term::prelude::*;
use liblumen_alloc::ModuleFunctionArity;
use liblumen_alloc::{atom, atom_from, exit};

use crate::otp::erlang::apply_3;
use crate::otp::erlang::spawn_link_3::native;
use crate::process;
use crate::registry::pid_to_process;
use crate::scheduler::Scheduler;
use crate::test::{assert_exits_undef, strategy};

#[test]
fn without_atom_module_errors_badarg() {
    run!(
        |arc_process| {
            (
                Just(arc_process.clone()),
                strategy::term::is_not_atom(arc_process.clone()),
                strategy::term::atom(),
                strategy::term::list::proper(arc_process.clone()),
            )
        },
        |(arc_process, module, function, arguments)| {
            prop_assert_is_not_atom!(native(&arc_process, module, function, arguments), module);

            Ok(())
        },
    );
}
```

```php
public function someMethod(): void
    {
    }
}
```

```php
<?php
/**
 * WPSEO plugin file.
 *
 * @package WPSEO\Internal
 */

/**
 * This code handles the option upgrades
 */
class WPSEO_Upgrade {
	/**
	 * Class constructor
	 */
	public function __construct() {
		$version = WPSEO_Options::get( 'version' );

		WPSEO_Options::maybe_set_multisite_defaults( false );

		if ( version_compare( $version, '1.5.0', '<' ) ) {
			$this->upgrade_15( $version );
		}

		if ( version_compare( $version, '2.0', '<' ) ) {
			$this->upgrade_20();
		}

		if ( version_compare( $version, '2.1', '<' ) ) {
			$this->upgrade_21();
		}

		if ( version_compare( $version, '2.2', '<' ) ) {
			$this->upgrade_22();
		}

		if ( version_compare( $version, '2.3', '<' ) ) {
			$this->upgrade_23();
		}

		if ( version_compare( $version, '3.0', '<' ) ) {
			$this->upgrade_30();
		}

		if ( version_compare( $version, '3.3', '<' ) ) {
			$this->upgrade_33();
		}

		if ( version_compare( $version, '3.6', '<' ) ) {
			$this->upgrade_36();
		}

		if ( version_compare( $version, '4.0', '<' ) ) {
			$this->upgrade_40();
		}

		if ( version_compare( $version, '4.4', '<' ) ) {
			$this->upgrade_44();
		}
```

```php
@extends('Marketing.MKTDash')
@section('adminWorkingSection')
<div class="container">
  <div class="card-header">
           <h4 class="text-center">All Submitted Data of the Your Brand Form</h4>
        </div>
        <table class="table table-bordered table-hover table-responsive">
            <thead>
              <th>ID</th>
              <th>Label Type</th>
              <th>Name</th>
              <th>Email</th>
              <th>Number</th>
              <th>Country</th>
              <th>State</th>
              <th>City</th>
              <th>Company Name</th>
              <th>Address</th>
              <th>Segment</th>
              <th>Qty Required</th>
              <th>Qty per Size</th>
              <th>Special Note</th>
              <th>Expected Date</th>
              <th>Submit Date</th>
            </thead>
            <tbody>
                @forelse ($brandData as $data)
<tr>
<td>{{$data->id}}</td>
<td>{{$data->label->labelType}}</td>
<td>{{$data->client_name}}</td>
<td>{{$data->client_email}}</td>
<td>{{$data->client_number}}</td>
<td>{{$data->country->name}}</td>
<td>{{$data->stateData->name}}</td>
<td>{{$data->cityData->name}}</td>
<td>{{$data->client_branch}}</td>
<td>{{$data->client_address}}</td>
<td>{{$data->product_segment}}</td>
<td>{{$data->qty_req}}</td>
<td>{{$data->per_size}}</td>
<td>{{$data->spe_note}}</td>
<td>{{$data->exp_date}}</td>
<td>{{$data->created_at->diffForHumans()}}</td>
</tr>
                @empty
<p class="card-text">Currently No data is Here</p>
                @endforelse
            </tbody>
        </table>
</div>

@endsection
```

```php
{
    //
    protected $table = 'sampel';
    protected $primaryKey = 'IDSampel';
    protected $guarded = ['IDSampel'];

    public $timestamps = false;

    public function Pesanan(){
    	return $this->belongsTo('App\Pesanan', 'IDPesanan', 'IDPesanan');
    }
}
```

```php
<?php
 class hContactAddresses_3to4 extends hPlugin { public function hConstructor() { $this->hContactAddresses ->appendColumn('hContactAddressCreated', hDatabase::time) ->appendColumn('hContactAddressLastModified', hDatabase::time) ->appendColumn('hContactAddressLastModifiedBy', hDatabase::id); } public function undo() { $this->hContactAddresses->dropColumns( 'hContactAddressCreated', 'hContactAddressLastModified', 'hContactAddressLastModifiedBy' ); } } ?>
```

```php
<?php
  require_once('db_connect.php');
  require_once('util.php');
  // file_get_contents is needed for POST requests data
  // plus json_decode since I'm posting json_format
  $post_data = file_get_contents("php://input");
  $json_input = json_decode($post_data, TRUE);
  $resp = [];

  $func = $json_input['func'];

  if ($func == 'create_user') {
      $resp = createUser($json_input);
  } else
  if ($func == 'create_post') {
      $resp = createPost($json_input);
  } else
  if ($func == 'create_vote') {
      $resp = createVote($json_input);
  } else
  if ($func == 'create_follower') {
      $resp = createFollower($json_input);
  }

  //$resp['echo'] = $json_input;
  echo json_encode($resp, JSON_NUMERIC_CHECK);

  function createFollower ($input) {
      $resp = [];
      $resp['status'] = 'success';
      $resp['echo'] = $input;

      $text = $input['postText'];
      $username_poster = $input['username_poster'];
      $username_follower = $input['username_follower'];
      $postId = $input['postId'];

      try {
          DB::insert('following', array(
            'postId' => $postId,
            'username_follower' => $username_follower,
```

```php
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

class CreateTransactionsTable extends Migration
{
    /**
```

```php
<?php if (!defined('CREXO')) exit('No Trespassing!');

class Widget 
{
	public static function back($template,$data,$library,$model)
	{
		Widget::back_header($library,$model,$data);
		Widget::back_template($template,$data,$library,$model);
		Widget::back_footer($data,$library,$model);

		require_once WIDGET_PATH . 'footer_back_widget.php';
	}

	public static function back_template($template,$data,$library,$model)
	{
		extract($library);
		extract($model);
		extract($data);

		$widget = $template.'_back_template.php';

		include_once TEMPLATE_PATH . $widget;
	}

	public static function back_header($library,$model,$data)
	{
		extract($library);
		extract($model);
		extract($data);

		include_once WIDGET_PATH . 'header_back_widget.php';
	}

	public static function back_footer($data,$library,$model)
	{
		extract($library);
		extract($model);
		extract($data);
```

```php
<?php

namespace App\Repository;

use App\Entity\Event;
use App\Entity\EventSearch;
```

```php
<?php

namespace App;

use Illuminate\Contracts\Auth\MustVerifyEmail;
use Illuminate\Foundation\Auth\User as Authenticatable;
use Illuminate\Notifications\Notifiable;

class User extends Authenticatable
{
    use Notifiable;

    /**
     * The attributes that are mass assignable.
     *
     * @var array
     */
    protected $fillable = [
        'name', 'email', 'password','identity','mobile'
    ];

    /**
     * The attributes that should be hidden for arrays.
     *
     * @var array
     */
    protected $hidden = [
        'password', 'remember_token',
    ];

    /**
     * The attributes that should be cast to native types.
     *
     * @var array
     */
    protected $casts = [
        'email_verified_at' => 'datetime',
    ];

    public function answers(){

        return $this->hasMany('App\User');
    }
}
```

```php
<?php

/**
 * This file is part of the CodeIgniter 4 framework.
 *
 * (c) CodeIgniter Foundation <admin@codeigniter.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace CodeIgniter\Validation;

/**
 * Class CreditCardRules
 *
 * Provides validation methods for common credit-card inputs.
 *
 * @see http://en.wikipedia.org/wiki/Credit_card_number
 */
class CreditCardRules
{
    /**
     * The cards that we support, with the defining details:
     *
     *  name        - The type of card as found in the form. Must match the user's value
     *  length      - List of possible lengths for the card number
     *  prefixes    - List of possible prefixes for the card
     *  checkdigit  - Boolean on whether we should do a modulus10 check on the numbers.
     *
     * @var array
     */
    protected $cards = [
        'American Express' => [
            'name'       => 'amex',
            'length'     => '15',
            'prefixes'   => '34,37',
            'checkdigit' => true,
        ],
        'China UnionPay' => [
            'name'       => 'unionpay',
            'length'     => '16,17,18,19',
            'prefixes'   => '62',
            'checkdigit' => true,
        ],
        'Dankort' => [
            'name'       => 'dankort',
            'length'     => '16',
            'prefixes'   => '5019,4175,4571,4',
            'checkdigit' => true,
        ],
        'DinersClub' => [
            'name'       => 'dinersclub',
            'length'     => '14,16',
            'prefixes'   => '300,301,302,303,304,305,309,36,38,39,54,55',
            'checkdigit' => true,
        ],
        'DinersClub CarteBlanche' => [
            'name'       => 'carteblanche',
            'length'     => '14',
            'prefixes'   => '300,301,302,303,304,305',
            'checkdigit' => true,
        ],
        'Discover Card' => [
            'name'       => 'discover',
            'length'     => '16,19',
            'prefixes'   => '6011,622,644,645,656,647,648,649,65',
            'checkdigit' => true,
        ],
        'InterPayment' => [
            'name'       => 'interpayment',
```

```php
</div>
					</div>
				</div>
			</li>
			<li>
				<div class="form-group">
					<label>Agent's response</label>
					<input type="text" class="form-control" name="agent_response">
				</div>
			</li>
			<li>
				<div class="form-group">
					<label>Agent's response speed</label>
					<input type="number" class="form-control" name="agent_response_speed">
				</div>
			</li>
			<li>
				<div class="form-group">
					<label>Correct response</label>
					<input type="text" class="form-control" name="correct_response" placeholder="Correct key if agent was incorrect. Blank otherwise.">
				</div>
			</li>
			<li>
				<div class="form-group">
					<label>Customer details</label>
					<textarea class="form-control" name="customer_details" placeholder="Customer's details if agent is incorrect. Blank otherwise."></textarea>
				</div>
			</li>
			<li>
				<div class="form-group">
					<label>Agent input</label>
					<textarea class="form-control" name="agent_input" placeholder="Agent's input if agent is incorrect. Blank otherwise."></textarea>
				</div>
			</li>
			<li>
				<div class="form-group">
					<label>Comment</label>
					<textarea class="form-control" name="comment"></textarea>
				</div>
			</li>
			<li>
				<div class="form-group">
					<label>Call ends</label>
					<small class="text-danger">
						Note: Once clicked, this will submit the form, and you will not be able to fill up the rest of the responses.
					</small>
					<button class="btn btn-primary d-block">Call ends</button>
				</div>
			</li>
		</ol>
		<div class="d-flex justify-content-end">
			<span class="left-chevron" data-tab="z06">z06</span>
			<span class="mx-2">|</span>
			<span class="right-chevron" data-tab="z08">z08</span>
		</div>
	</div>
</div>
```

```php
<?php
/**
 * @package     Joomla.Platform
 * @subpackage  HTML
 *
 * @copyright   Copyright (C) 2005 - 2013 Open Source Matters, Inc. All rights reserved.
 * @license     GNU General Public License version 2 or later; see LICENSE
 */

defined('JPATH_PLATFORM') or die;

/**
 * Renders a standard button
 *
 * @package     Joomla.Platform
 * @subpackage  HTML
 * @since       11.1
 */
class JButtonStandard extends JButton
{
	/**
	 * Button type
	 *
	 * @var    string
	 */
	protected $_name = 'Standard';

	/**
	 * Fetch the HTML for the button
	 *
	 * @param   string   $type  Unused string.
```

```php
@extends('layouts.app')

@section('content')
<div class="container">
    <div class="row">
        <div class="col-md-12">
            <div class="panel panel-default">
                <div class="panel-heading">Member : Simulator</div> 
                
                {{-- <div class="panel-body">
                    <a href="{{url('estimateprofit/create')}}" class="btn btn-success">Create</a>
                </div> --}}

                <div class="panel-body">  
                <div class="table-responsive">
                    
                    {{-- Paging --}}
                    <div class="text-center">
                          <a href="{{url('/simulator/create')}}" class="btn btn-success">
                            Simulator Start !
                          </a>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>

{{--Delete Form--}}
{{-- <form action="" method="post" id="deleteform">
    {{ csrf_field() }}
    {{ method_field('DELETE') }}
</form> --}}
@endsection
@section('script')
{{-- <script>
   $("[data-button-type=delete]").click(function(e) {
          e.preventDefault();
          var delete_button = $(this);
          var delete_url = $(this).attr('href');

          if (confirm("{{ trans('backpack::crud.delete_confirm') }}") == true) {
                $('#deleteform').attr('action',delete_url);
                $('#deleteform').submit();
            }
      }); 
</script>       --}}
@endsection
```

```php
return [
            preg_split('/\s*,\s*/', $fields, -1, PREG_SPLIT_NO_EMPTY),
            preg_split('/\s*,\s*/', $expand, -1, PREG_SPLIT_NO_EMPTY),
        ];
    }

    /**
     * Serializes a data provider.
     * @param DataProviderInterface $dataProvider
     * @return array the array representation of the data provider.
     */
    protected function serializeDataProvider($dataProvider)
    {
        $models = $this->serializeModels($dataProvider->getModels());

        if (($pagination = $dataProvider->getPagination()) !== false) {
            $this->addPaginationHeaders($pagination);
        }

        if ($this->request->getIsHead()) {
            return null;
        } elseif ($this->collectionEnvelope === null) {
            return $models;
        } else {
            $result = [
                $this->collectionEnvelope => $models,
            ];
            if ($pagination !== false) {
                return array_merge($result, $this->serializePagination($pagination));
            } else {
                return $result;
            }
        }
    }

    /**
     * Serializes a pagination into an array.
     * @param Pagination $pagination
     * @return array the array representation of the pagination
```

```php
<nav x-data="{ open: false }" class="bg-white border-b border-gray-100">
    <!-- Primary Navigation Menu -->
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex justify-between h-16">
            <div class="flex">
                <!-- Logo -->
                <div class="flex-shrink-0 flex items-center">
                    <a href="{{ route('adm') }}">
                        <img src="/img/logo.png" class="block h-9 w-auto">
                    </a>
                </div>

                <!-- Navigation Links -->
                <div class="hidden space-x-8 sm:-my-px sm:ml-10 sm:flex">
                    <x-jet-nav-link href="{{ route('adm') }}" :active="request()->routeIs('adm')">
                        {{ __('Dashboard') }}
                    </x-jet-nav-link>
                </div>
                <!-- Navigation Links -->
                <div class="hidden space-x-8 sm:-my-px sm:ml-10 sm:flex">
                    <x-jet-nav-link href="{{ route('post.index') }}" :active="request()->routeIs('post.index')">
                        {{ __('Post') }}
                    </x-jet-nav-link>
                </div>
                <!-- Navigation Links -->
                <div class="hidden space-x-8 sm:-my-px sm:ml-10 sm:flex">
                    <x-jet-nav-link href="{{ route('categories.index') }}" :active="request()->routeIs('categories.index')">
                        {{ __('Category') }}
                    </x-jet-nav-link>
                </div>
            </div>

            <!-- Settings Dropdown -->
            <div class="hidden sm:flex sm:items-center sm:ml-6">
                <x-jet-dropdown align="right" width="48">
                    <x-slot name="trigger">
                        @if (Laravel\Jetstream\Jetstream::managesProfilePhotos())
                            <button class="flex text-sm border-2 border-transparent rounded-full focus:outline-none focus:border-gray-300 transition duration-150 ease-in-out">
                                <img class="h-8 w-8 rounded-full object-cover" src="{{ Auth::user()->profile_photo_url }}" alt="{{ Auth::user()->name }}" />
                            </button>
                        @else
                            <button class="flex items-center text-sm font-medium text-gray-500 hover:text-gray-700 hover:border-gray-300 focus:outline-none focus:text-gray-700 focus:border-gray-300 transition duration-150 ease-in-out">
                                <div>{{ Auth::user()->name }}</div>

                                <div class="ml-1">
                                    <svg class="fill-current h-4 w-4" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20">
                                        <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
                                    </svg>
                                </div>
                            </button>
                        @endif
                    </x-slot>

                    <x-slot name="content">
                        <!-- Account Management -->
                        <div class="block px-4 py-2 text-xs text-gray-400">
                            {{ __('Manage Account') }}
                        </div>

                        <x-jet-dropdown-link href="{{ route('profile.show') }}">
                            {{ __('Profile') }}
                        </x-jet-dropdown-link>

                        @if (Laravel\Jetstream\Jetstream::hasApiFeatures())
                            <x-jet-dropdown-link href="{{ route('api-tokens.index') }}">
                                {{ __('API Tokens') }}
                            </x-jet-dropdown-link>
                        @endif

                        <div class="border-t border-gray-100"></div>

                        <!-- Team Management -->
                        @if (Laravel\Jetstream\Jetstream::hasTeamFeatures())
                            <div class="block px-4 py-2 text-xs text-gray-400">
                                {{ __('Manage Team') }}
                            </div>

                            <!-- Team Settings -->
                            <x-jet-dropdown-link href="{{ route('teams.show', Auth::user()->currentTeam->id) }}">
                                {{ __('Team Settings') }}
                            </x-jet-dropdown-link>

                            @can('create', Laravel\Jetstream\Jetstream::newTeamModel())
                                <x-jet-dropdown-link href="{{ route('teams.create') }}">
                                    {{ __('Create New Team') }}
                                </x-jet-dropdown-link>
                            @endcan

                            <div class="border-t border-gray-100"></div>

                            <!-- Team Switcher -->
                            <div class="block px-4 py-2 text-xs text-gray-400">
                                {{ __('Switch Teams') }}
                            </div>

                            @foreach (Auth::user()->allTeams() as $team)
                                <x-jet-switchable-team :team="$team" />
                            @endforeach

                            <div class="border-t border-gray-100"></div>
                        @endif

                        <!-- Authentication -->
                        <form method="POST" action="{{ route('logout') }}">
                            @csrf

                            <x-jet-dropdown-link href="{{ route('logout') }}"
                                                onclick="event.preventDefault();
                                                            this.closest('form').submit();">
                                {{ __('Logout') }}
                            </x-jet-dropdown-link>
                        </form>
                    </x-slot>
                </x-jet-dropdown>
            </div>

            <!-- Hamburger -->
            <div class="-mr-2 flex items-center sm:hidden">
                <button @click="open = ! open" class="inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:bg-gray-100 focus:text-gray-500 transition duration-150 ease-in-out">
                    <svg class="h-6 w-6" stroke="currentColor" fill="none" viewBox="0 0 24 24">
                        <path :class="{'hidden': open, 'inline-flex': ! open }" class="inline-flex" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
                        <path :class="{'hidden': ! open, 'inline-flex': open }" class="hidden" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                    </svg>
                </button>
            </div>
        </div>
    </div>

    <!-- Responsive Navigation Menu -->
    <div :class="{'block': open, 'hidden': ! open}" class="hidden sm:hidden">
        <div class="pt-2 pb-3 space-y-1">
            <x-jet-responsive-nav-link href="{{ route('adm') }}" :active="request()->routeIs('adm')">
                {{ __('Dashboard') }}
            </x-jet-responsive-nav-link>
        </div>

        <div class="pt-2 pb-3 space-y-1">
            <x-jet-responsive-nav-link href="{{ route('post.index') }}" :active="request()->routeIs('post.index')">
                {{ __('Post') }}
            </x-jet-responsive-nav-link>
        </div>

        <!-- Responsive Settings Options -->
        <div class="pt-4 pb-1 border-t border-gray-200">
            <div class="flex items-center px-4">
                <div class="flex-shrink-0">
```

```php
namespace App;

use Illuminate\Database\Eloquent\Model;
use Illuminate\Foundation\Auth\User as Authenticatable;
use Illuminate\Notifications\Notifiable;

class Admin extends Authenticatable
{
    use Notifiable;

    protected $guard = 'admin';

    protected $fillable = [
        'name', 'email', 'password',
    ];

    protected $hidden = [
        'password', 'remember_token',
    ];
}
```

```php
<?php return [
	'user1' => [
		'id' 			=> 1,
		'email' 		=> 'jane.doe@example.com',
		'password' 		=> password_hash('password1', PASSWORD_BCRYPT, ['cost' => 13]),
		'first_name' 	=> 'Jane',
		'last_name' 	=> 'Doe',
		'role_id' 		=> 1,
		'created_at' 	=> time(),
		'updated_at' 	=> time()
	],
	'user2' => [
		'id' 			=> 2,
		'email' 		=> 'john.doe@example.com',
		'password' 		=> password_hash('password2', PASSWORD_BCRYPT, ['cost' => 13]),
		'first_name' 	=> 'John',
		'last_name' 	=> 'Doe',
		'role_id' 		=> 1,
		'created_at' 	=> time(),
		'updated_at' 	=> time()
	],
	'user3' => [
		'id' 			=> 3,
		'email' 		=> 'johnie.doe@example.com',
		'password' 		=> password_hash('password3', PASSWORD_BCRYPT, ['cost' => 13]),
		'first_name' 	=> 'Johnie',
		'last_name' 	=> 'Doe',
		'role_id' 		=> 1,
		'created_at' 	=> time(),
		'updated_at' 	=> time()
	],
	'admin' => [ 
		'id' 			=> 4,
		'email' 		=> 'admin@example.com',
		'password' 		=> password_hash('admin', PASSWORD_BCRYPT, ['cost' => 13]),
		'first_name' 	=> 'Site',
		'last_name' 	=> 'Administrator',
		'role_id' 		=> 2,
		'created_at' 	=> time(),
		'updated_at' 	=> time()
	]
];
```

```php
$server_password = ""; // Leave empty if you don't want a password to be required to connect to your server. It is left in clear text, and letters/numbers only.
$maximum_messages_every_5minutes = 100; //How many messages can a client send before being locked out for 5 minutes? This is to prevent abuse.
$lock_out_minutes = 5; //How many minutes will a client be locked out if they trigger the 5-minute-limit?
?>
```

```php
<?php

namespace Src\Admin\Categories\Application\Controllers;

use App\Http\Controllers\Controller;
use Illuminate\Http\JsonResponse;
use Illuminate\Http\Request;
use Src\Admin\Categories\Domain\Models\Category;
use Src\Support\Response\Domain\BaseResponse;

final class StoreCategoryController extends Controller
{

    public function __invoke(Request $request): JsonResponse
    {
        $response = new BaseResponse();

        $category = new Category();
        $category->name = $request->get('name');
        $category->save();

        $response->message = 'Guardado satisfactoriamente.';

        return new JsonResponse($response);
    }
}
```

```php
<?php
namespace Home\Model;
use Think\Model\ViewModel;
class HkReViewModel extends ViewModel{
	public $viewFields=array(
		'Fhk_receive'=>array('*'),
		'Fhk_hk'=>array('*','_on'=>'Fhk_hk.agree_num=Fhk_receive.agree_num'),
//		'Fhk_client'=>array('*','_on'=>'Fhk_client.agree_num=Fhk_hk.agree_num'),	
	);
}
?>
```

```php
<table class="table table-ufop table-col-condensed table-striped table-bordered table-responsive">
   <thead>
      <tr>
         <th>Tipo</th>
         <th>Título</th>
         <th>Orientando</th>
         <th>Orientador</th>
         <th>Status</th>
         <th>Detalhes</th>
      </tr>

   </thead>

   <tbody>
      @foreach($guidances as $guidance)
         <tr>
            <td>{{$guidance->tipo->tipo}}</td>
            <td>{{$guidance->titulo}}</td>
            <td>{{$guidance->aluno->nomeCompleto}}</td>
            <td>{{$guidance->professor->nomeCompleto}}</td>
            <td>
               @if ($guidance->status)
                  Em Andamento
               @else
                  Finalizada
               @endif
            </td>            <td align="center">
               <a class="btn btn-info btn-xs" role="button" href="{{route('guidance.show', encrypt($guidance->id))}}"> Detalhes</a>
            </td>
         </tr>
      @endforeach
   </tbody>
</table>
```

```php
<?php

declare(strict_types=1);

/*
 * This file is part of the Sonata Project package.
 *
 * (c) Thomas Rabaix <thomas.rabaix@sonata-project.org>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Sonata\NotificationBundle\Backend;

use Laminas\Diagnostics\Check\AbstractCheck;

class BackendHealthCheck extends AbstractCheck
{
    /**
     * @var BackendInterface
     */
    protected $backend;

    public function __construct(BackendInterface $backend)
    {
        $this->backend = $backend;
    }

    /**
     * {@inheritdoc}
     */
    public function check()
    {
        return $this->backend->getStatus();
    }

    /**
     * {@inheritdoc}
     */
    public function getName()
    {
        return 'Sonata Notification Default Backend';
    }

    /**
     * {@inheritdoc}
     */
    public function getGroup()
    {
        return 'sonata';
    }
}
```

```php
<?php
    /*
    @Description : get endicia supported country name wise
    @Author      : Shantanu
    @Output      : return country name
    @Date        : 25-09-2018
    */
    function get_endicia_supported_country($country_name)
    {  
        $response = '';

        $country_list = array(
                            'Russian Federation' => 'Russia'
                        );

        if($country_name != '')
        { 
            if(isset($country_list[$country_name]))
            {
                $response = $country_list[$country_name];
            } 
            else
            {
                $response = $country_name;
            }    
        }
        
        return $response;        
    }

    function get_fedex_package_type()
    {
        $fedex_package_type = array(
            'FEDEX_ENVELOPE'        => 'FEDEX ENVELOPE',
            'FEDEX_MEDIUM_BOX'      => 'FEDEX MEDIUM BOX',
            'FEDEX_PAK'             => 'FEDEX PAK',
            'FEDEX_SMALL_BOX'       => 'FEDEX SMALL BOX',
        );

        return $fedex_package_type;
    }

    /*
    @Description : get osm blacklist zipcodes prefix
    @Author      : Shantanu
    @Output      : return array
    @Date        : 07-09-2018
    */
    function get_osm_blacklist_zipcodes()
    {  
        $zipcodes = array('006','007','008','009','055','090','091','092','093','094','095','096','097','098','099','771','962','963','964','965','966','967','968','969','974','975','976','988','989','995','996','997','998','999');
        
        return $zipcodes;
    }

    /*
    @Description : get warehouse location type
    @Author      : Drishtant Leuva
    @Output      : return array
    @Date        : 6-6-2019
    */
    function get_warehouse_location_type()
    {   
        $warehouse_location_type = array(
            'Tray'   => 'Tray',
            'Box'    => 'Box',
            'Bin'    => 'Bin',
            'Pallet' => 'Pallet',
            'Shelf'  => 'Shelf',
            'Rack'   => 'Rack',
        );

        return $warehouse_location_type;
    }

    /*
    @Description : get warehouse location size
    @Author      : Drishtant Leuva
    @Output      : return array
    @Date        : 6-6-2019
    */
    function get_warehouse_location_size()
    {   
        $warehouse_location_type = array(
            '18x18x8'   => '18x18x8',
            '38x18x8'    => '38x18x8',
            '9x18x6'    => '9x18x6',
            '40x48x60' => '40x48x60',
        );

        return $warehouse_location_type;
    }

    /*
    @Description : get pickup shipping carrier
    @Author      : Shantanu
    @Output      : return array
    @Date        : 17-07-2018
    */
    function get_pickup_shipping_carrier()
    {  
        $freight_shipping_carrier = array(
                        'Pickup' => 'Pickup',
                        'FedEx' => 'FedEx',
                        'USPS' => 'USPS'
                );
        return $freight_shipping_carrier;
    }

    /*
    @Description : get pickup shipping method
    @Author      : Shantanu
    @Output      : return array
    @Date        : 17-07-2018
    */
    function get_fedex_pickup_ship_method()
    {  
        $freight_ship_method = array(
                                'Pickup' => array('Pickup' => 'Pickup'),
                                'FedEx' => array('FedEx International Priority' => 'FedEx International Priority'),
                                'USPS' => array('USPS First Class International' => 'USPS First Class International')
            );
        return $freight_ship_method;
    }

    /*
    @Description : get freight shipping carrier
    @Author      : Shantanu
    @Output      : return array
    @Date        : 17-07-2018
    */
    function get_freight_shipping_carrier()
    {  
        $freight_shipping_carrier = array(
            'Central Transport'                 => 'Central Transport',
            'Estes Express Lines'               => 'Estes Express Lines',
            'Old Dominion Freight Line'         => 'Old Dominion Freight Line',
            'FedEx Freight'                     => 'FedEx Freight',
            'UPS Freight'                       => 'UPS Freight',
            'Con-Way Central Express'           => 'Con-Way Central Express',
            'XPO Logistics'                     => 'XPO Logistics',
            'USF Holland'                       => 'USF Holland',
            'New England Motor Freight'         => 'New England Motor Freight',
            'Roadrunner Transportation Systems' => 'Roadrunner Transportation Systems',
            'Central Freight Lines'             => 'Central Freight Lines',
            'Unyson'                            => 'Unyson',
            'Other'                             => 'Other'
            );
        return $freight_shipping_carrier;
    }

    /*
    @Description : get freight_shipping_carrier
    @Author      : Shantanu
    @Output      : return array
    @Date        : 17-07-2018
    */
    function get_freight_ship_method()
    {  
        $freight_ship_method = array(
                                'LTL' => 'LTL'
            );
        return $freight_ship_method;
    }

    /*
    @Description : get amazon_shipping_carrier
    @Author      : Harshad Hirapara
    @Output      : return array
    @Date        : 27-12-2016
    */
    function get_amazon_shipping_carrier()
    {  
        $amazon_shipping_carrier = array(
            'USPS'                   => 'USPS',
            'UPS'                    => 'UPS',
            'UPSMI'                  => 'UPSMI',
            'FedEx'                  => 'FedEx',
            'DHL'                    => 'DHL',
```

```php
<?php
    $root = "../../";
    include $root."includes/php/initial.php";    
    if(!isset($_SESSION[ADMIN_SESSION_NAME])) {
        header("location: ".ADMINWEB_URL);
        die();
    }
    include $root."includes/php/classUtama.php";
    include SMARTY_DIR."Smarty.class.php";
    
    
    $smarty = new Smarty;        
    //$smarty->force_compile = true;
    //$smarty->debugging = true;
    $smarty->caching = true;
    $smarty->cache_lifetime = 0;
    
    $smarty->assign("homeurl", HOME_URL); 
    $smarty->assign("adminweburl", ADMINWEB_URL); 
    $smarty->assign("data_user", $_SESSION[ADMIN_SESSION_NAME]["user"]);
    $smarty->assign("tpl_dir", HOME_URL."/templates/".BACK_END_TEMPLATE);
    $smarty->assign("include_tpl", BACK_END_TEMPLATE_INCLUDE_PATH);
        
    //DATABASE CONNECTION
    $db = new classUtama(ADMIN_SESSION_NAME);
    $db->mysql_connect();
    
    $smarty->assign("page_selected", "katalog");
    $smarty->assign("sub_page_selected", "brand");    
    $smarty->assign("title", "Brand");
    $smarty->assign("sub_title", "Add new Brand");
    
    $id_menu = 26; $aksi = "T";
    include $root."includes/php/notification.php";
    
    $db->mysql_close();
    $smarty->display(BACK_END_TEMPLATE_PATH."/brand/edit.html");
```

```php
<?hh //strict

function test(bool $b): array<string> {
  $a = array();
  if ($b) {
    $a[4] = 'aaa';
  }
  return $a;
}
```

```php
<?php

namespace App\Http\Middleware;

use Closure;
use Illuminate\Support\Facades\Auth;

class RedirectIfAuthenticated
{
    /**
     * Handle an incoming request.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  \Closure  $next
     * @param  string|null  $guard
     * @return mixed
     */
    public function handle($request, Closure $next, $guard = null)
    {
        $user = auth()->guard($guard)->user();
        if (! is_null($user) && $user->exists) {
            return redirect('/home');
        }

        return $next($request);
    }
}
```

```php
use Illuminate\Database\Seeder;

class UserSeeder extends Seeder
{
    /**
     * Run the database seeds.
     *
     * @return void
     */
    public function run()
    {
        DB::table('users')->insert([
            'name' => 'admin',
            'password' => bcrypt('simes2075'),
            'username' => 'webadminofsimes',
            'role' => 'admin',
        ]);
    }
}
```

```php
<?php

use Mundipagg\Integrity\IntegrityController;

class Mundipagg_Paymentmodule_Block_Adminhtml_Notification_Integrityviolation extends Mage_Adminhtml_Block_Template
{
    public function __construct(array $args = array())
    {
        parent::_construct($args);
        $this->setTemplate('paymentmodule/notifications/integrityViolation.phtml');
    }

    public function isViolated()
    {
        require_once Mage::getBaseDir('lib') . '/autoload.php';
        $integrityController = new IntegrityController(
            \Mage::helper('paymentmodule/MagentoSystemInfo'),
            \Mage::helper('paymentmodule/MagentoOrderInfo')
        );
        $integrityCheck = $integrityController->getIntegrityCheck();

        return
            count($integrityCheck['alteredFiles']) > 0 ||
            count($integrityCheck['newFiles']) > 0 ||
            count($integrityCheck['unreadableFiles']) > 0
        ;
    }
}
```

```php
use Illuminate\Support\Facades\Schema;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Database\Migrations\Migration;

class CreateSystemFeaturesTable extends Migration
{
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        Schema::create('system_features', function (Blueprint $table) {
            $table->increments('id');
            $table->string('model');
            $table->string('action');
            $table->string('lang_key_for_feature')->nullable();
            $table->string('lang_key_for_description')->nullable();
            $table->timestamps();
        });
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        Schema::dropIfExists('system_features');
    }
}
```

```php
@extends('template')

@section('contenu')
<br>
<div class="col-sm-offset-3 col-sm-6">
    <div class="panel panel-info">
        <div class="panel-heading">Envoi d'une photo</div>
        <div class="panel-body">
            Merci. Votre photo à bien été reçue et enregistrée.
        </div>
    </div>
</div>
@stop
```

```php
<?php
/**
 * Copyright © 2018 Divante, Inc. All rights reserved.
 * See LICENSE for license details.
 */
namespace OpenLoyalty\Component\Account\Domain\Command;

use OpenLoyalty\Component\Account\Domain\AccountId;
use OpenLoyalty\Component\Account\Domain\Model\P2PSpendPointsTransfer;

/**
 * Class TransferPoints.
 */
class TransferPoints extends AccountCommand
{
    /**
     * @var P2PSpendPointsTransfer
     */
    protected $pointsTransfer;

    /**
     * @var \DateTime
     */
    protected $createdAt;

    /**
     * TransferPoints constructor.
     *
     * @param AccountId              $accountId
     * @param P2PSpendPointsTransfer $pointsTransfer
     * @param \DateTime|null         $createdAt
     */
    public function __construct(AccountId $accountId, P2PSpendPointsTransfer $pointsTransfer, \DateTime $createdAt = null)
    {
        parent::__construct($accountId);
        $this->pointsTransfer = $pointsTransfer;
        $this->createdAt = $createdAt ?: new \DateTime();
    }

    /**
     * @return P2PSpendPointsTransfer
     */
    public function getPointsTransfer(): P2PSpendPointsTransfer
    {
        return $this->pointsTransfer;
    }

    /**
     * @return \DateTime
     */
    public function getCreatedAt(): \DateTime
    {
        return $this->createdAt;
    }
}
```

```php
@extends('layouts.master')

@section('title', $title)

@section('content')
    @if(Session::has('message'))
        <p class="msg">{{Session::get('message')}}</p>
    @endif
        @forelse($posts as $post)
            <div class="post">
                @if($post->title)
                    <h2><a href="{{url('article',$post->id)}}">{{$post->title}}</a></h2>
                @else
                    Pas de titre.
                @endif

                @if($post->picture)
                    <img src="{{url('uploads', $post->picture->uri)}}">
                @endif
                    <p class="excerpt">{{excerpt($post->content)}}</p>
                @if($post->category)
                    <div class="info">
                        <h3>Catégories:</h3> <p class="mot">{{$post->category->title}}</p>
                    </div>
                @else
                    Pas de catégorie.
                @endif
                @if($post->tags)
                    <div class="info">
                        <h3>Mots clefs:</h3>
                        @foreach($post->tags as $tag)
                            <p class="mot">{{$tag->name}}</p>
                        @endforeach
                    </div>
                @else
                    Pas de tags.
                @endif
                @if($post->published_at)
                    <div class="info">
                        <h3>Publiée le:</h3> <p class="mot">{{$post->published_at->format('d/m/Y')}}</p>
                    </div>
                @else
                    Pas de date.
                @endif
                    @if($post->user)
                        <div class="info">
                            <h3>Publiée par:</h3> <p class="mot">{{$post->user->name}}</p>
                        </div>
                    @else
                        Auteur non renseigné.
                    @endif
            </div>
        @empty
            <p>Aucun post.</p>

        @endforelse
    {{ $posts->links() }}
@endsection
```

```php
<?php
namespace Aws\Api;

/**
 * Base class that is used by most API shapes
 */
abstract class AbstractModel implements \ArrayAccess
{
    /** @var array */
    protected $definition;

    /** @var ShapeMap */
    protected $shapeMap;

    /**
     * @param array    $definition Service description
     * @param ShapeMap $shapeMap   Shapemap used for creating shapes
     */
    public function __construct(array $definition, ShapeMap $shapeMap)
    {
        $this->definition = $definition;
        $this->shapeMap = $shapeMap;
    }

    public function toArray()
    {
        return $this->definition;
    }

    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->definition[$offset])
            ? $this->definition[$offset] : null;
    }

    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        $this->definition[$offset] = $value;
    }

    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->definition[$offset]);
    }

    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->definition[$offset]);
    }

    protected function shapeAt($key)
    {
        if (!isset($this->definition[$key])) {
            throw new \InvalidArgumentException('Expected shape definition at '
                . $key);
        }

        return $this->shapeFor($this->definition[$key]);
    }

    protected function shapeFor(array $definition)
    {
        return isset($definition['shape'])
            ? $this->shapeMap->resolve($definition)
            : Shape::create($definition, $this->shapeMap);
    }
}
```

```php
<?php $__env->startSection('content'); ?>
<div class="container">
    <div class="row">
        <div class="col-md-8 col-md-offset-2">
            <div class="panel panel-default">
                <div class="panel-heading">Iniciar Sesion</div>
                <div class="panel-body">
                    <form class="form-horizontal" role="form" method="POST" action="<?php echo e(route('login')); ?>">
                        <?php echo e(csrf_field()); ?>


                        <div class="form-group<?php echo e($errors->has('email') ? ' has-error' : ''); ?>">
                            <label for="email" class="col-md-4 control-label">Correo Electronico</label>

                            <div class="col-md-6">
                                <input id="email" type="email" class="form-control" name="email" value="<?php echo e(old('email')); ?>" required autofocus>

                                <?php if($errors->has('email')): ?>
                                    <span class="help-block">
                                        <strong><?php echo e($errors->first('email')); ?></strong>
                                    </span>
                                <?php endif; ?>
                            </div>
                        </div>

                        <div class="form-group<?php echo e($errors->has('password') ? ' has-error' : ''); ?>">
                            <label for="password" class="col-md-4 control-label">Contraseña</label>

                            <div class="col-md-6">
                                <input id="password" type="password" class="form-control" name="password" required>

                                <?php if($errors->has('password')): ?>
                                    <span class="help-block">
                                        <strong><?php echo e($errors->first('password')); ?></strong>
                                    </span>
                                <?php endif; ?>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-6 col-md-offset-4">
                                <div class="checkbox">
                                    <label>
                                        <input type="checkbox" name="remember" <?php echo e(old('remember') ? 'checked' : ''); ?>> Recordar
                                    </label>
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-8 col-md-offset-4">
                                <button type="submit" class="btn btn-success btn-flat">
                                    Iniciar Sesion 
                                </button>

                                <a class="btn btn-link" href="<?php echo e(route('password.request')); ?>">
                                    olvido su contraseña?
                                </a>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
<?php $__env->stopSection(); ?>

<?php echo $__env->make('layouts.app', array_except(get_defined_vars(), array('__data', '__path')))->render(); ?>
```

```php
//Create token
        try {
            if (!$token = JWTAuth::attempt($credentials)) {
                return response()->json([
                    'success' => false,
                    'message' => 'Login credentials are invalid.',
                    'response_code' => '91',
                ], 400);
            }
        } catch (JWTException $e) {

            Log::info("Log info for token",["context"=>$e->getMessage()]);

            return response()->json([
                'message' => 'Could not generate token',
                'response_code'=>'10'
            ], 200);
        }

        //Token created, return with success response and jwt token
        return response()->json([
            'message' => "token retrieved",
            'response_code'=>"11",
            'token' => $token,
        ]);
    }

    public function getExchangeRate(Request $request)
    {
        try{

            $exchange_rate = ExchangeRates::query()->where(['currency_code_code'=>$request->currency_code_code,'exchange_currency_code'=>$request->exchange_currency_code])->get();

            return $exchange_rate;

        }catch (\Throwable $e)
        {
            Log::info("message",["ApiErrorMessage"=>$e->getMessage()]);
        }
    }

    public function getExchangeRates()
    {
        try{

            $exchange_rates = ExchangeRates::all();

            return $exchange_rates;

        }catch(\Exception $e)
        {
            Log::info('message',['ApiErrorMessage'=>$e->getMessage()]);
        }
    }
}
```

```php
<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class Base extends Model
{
    use HasFactory;

    protected $fillable = [
        'base',
        'estado',
        'direccion',
    ];
}
```

```php
final class PhutilNumber {

  private $value;
  private $decimals = 0;

  public function __construct($value) {
    $this->value = $value;
  }

  public function getNumber() {
    return $this->value;
  }

  public function setDecimals($decimals) {
    $this->decimals = $decimals;
    return $this;
  }

  public function getDecimals() {
    return $this->decimals;
  }

}
```

```php
<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use Cart;

use DB;
use App\Product;
use App\Transaksi;
use App\Pembeli;
use App\Slide;
use App\Http\Requests;
use App\Http\Controllers\Controller;
use Input;
use Redirect;
use Session;
use hash;

class OrderController extends Controller
{
    public function index(){
        $pembeli = Pembeli::where('status', '=', 'Unpaid')->orWhere('status', '=', 'Paid')->orderBy('id', 'desc')->get();

        return view('admin.order.index', compact('pembeli'));
    }

    public function edit(Request $request){
        $formid = Input::get('formid');
        $transaksi = Transaksi::whereHas('product', function($q) {
            $formid = Input::get('formid');
            $q->where('formid', '=', $formid);
        })->get();

        $pembeli = Pembeli::where('formid', '=', $formid)->first();
        

        return view('admin.order.edit', compact('pembeli', 'transaksi'));
    }

    public function update(Pembeli $pembeli) {
        $pembeli->update([
            'status' => request('status'),
        ]);

        return redirect()->route('order.index')->with('success', 'Order Diperbarui');
    }

    public function destroy(Request $request){
        $formid = Input::get('formid');
        $transaksi = Transaksi::whereHas('product', function($q) {
            $formid = Input::get('formid');
```

```php
<?php

namespace App\Http\Controllers;

use App\Models\pago_facturas;
use App\Models\factura;
use Illuminate\Http\Request;
use Response;

class PagoFacturasController extends Controller
{
    public function getPagoProveedor(Request $req)
    {
        $id_proveedor = $req->id_proveedor;
        $facturas = factura::where("id_proveedor",$id_proveedor)->orderBy("created_at","desc")->get();
        $pagos = pago_facturas::where("id_proveedor",$id_proveedor)->orderBy("created_at","desc")->get();
        $balance = 0;
        return collect(collect($pagos->merge($facturas))->sortBy([
            ['created_at', 'asc'],
        ])->map(function($q) use (&$balance){
            if (isset($q->numfact)) {
                $balance -= $q->monto;
            }else{
                
                $balance += $q->monto;
            }
            $q->balance = $balance;

            return $q;
        }))->sortBy([
            ['created_at', 'desc'],
        ]);

    }
   public function setPagoProveedor(Request $req)
   {
       try {
            $pago = new pago_facturas;
            $pago->tipo = $req->tipo;
            $pago->monto = $req->monto;
            $pago->id_proveedor = $req->id_proveedor;
            $pago->save();
            return Response::json(["msj"=>"¡Éxito al agregar pago a proveedor!","estado"=>true]);

            
        } catch (\Exception $e) {
            return Response::json(["msj"=>"Error: ".$e->getMessage(),"estado"=>false]);
            
        }
   } 

   
   public function delPagoProveedor(Request $req)
   {
       if ($pago = pago_facturas::find($req->id)) {
            try {
                $pago->delete();
                return Response::json(["msj"=>"¡Éxito al eliminar pago!","estado"=>true]);
    
                
            } catch (\Exception $e) {
                return Response::json(["msj"=>"Error: ".$e->getMessage(),"estado"=>false]);
                
            }
        }
   }
}
```

```php
namespace App;

use Illuminate\Database\Eloquent\Model;

class Package extends Model
{
    //
}
```

```php
use App\Ship\Parents\Actions\Action;
use App\Ship\Parents\Requests\Request;
use Apiato\Core\Foundation\Facades\Apiato;

class GetAllAdsDataTableAction extends Action
{
    public function run(Request $request)
    {

        $ads = Apiato::call('Ad@GetAllAdsDataTableTask',  [$request],['OrderByNameCriteria']);

        return $ads;
    }
}
```

```yaml
---
kind: Service
apiVersion: v1
metadata:
  name: fluxcloud
spec:
  selector:
    name: fluxcloud
  ports:
  - protocol: TCP
    port: 80
    targetPort: 3032
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fluxcloud
spec:
  replicas: 1
  selector:
    matchLabels:
      name: fluxcloud
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        name: fluxcloud
    spec:
      securityContext:
        runAsUser: 999
      containers:
      - name: fluxcloud
        image: fangcangorg/fluxcloud-dingtalk:0.0.1
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3032
        env:
        - name: EXPORTER_TYPE
          value: "dingtalk"
```

```yaml
name: Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Pull repository
        uses: actions/checkout@v2
      - name: Setup node environment
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Install NPM Modules
        run: yarn
      - name: Run unit tests
        run: yarn test

  sonarcloud-scan:
    name: SonarCloud Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
```

```yaml
---
label: NumberDefaultZero
hide_body: true
fields:
- name: title
  type: text
  config:
    required: false
  label: Title
- name: mynumber
  type: number
  description: ''
  default: 0
  required: true
  config:
    min: '0'
    max: '10'
    step: '1'
  label: MyNumber
```

```yaml
---
- name: Set java_installer_version_string (RedHat - Oracle - modern)
  set_fact:
    java_installer_version_string: "{{ java_version_medium_string }}"

- name: Set java_destination_version_string (RedHat - Oracle - modern)
  set_fact:
    java_destination_version_string: "{{ java_version_medium_string }}"

- name: Set java_installer_prefix (RedHat - Oracle - modern)
  set_fact:
    java_installer_prefix: "jdk-"
```

```yaml
_target_: nuplan.planning.simulation.observation.idm_agents.IDMAgents
_convert_: 'all'
target_velocity: 10         # Desired velocity in free traffic [m/s]
min_gap_to_lead_agent: 1.0  # Minimum relative distance to lead vehicle [m]
headway_time: 1.5           # Desired time headway. The minimum possible time to the vehicle in front [s]
accel_max: 1.0              # maximum acceleration [m/s^2]
decel_max: 2.0              # maximum deceleration (positive value) [m/s^2]
```

```yaml
# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks
repos:
-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v3.2.0
    hooks:
    -   id: trailing-whitespace
    -   id: end-of-file-fixer
    -   id: check-yaml
-   repo: https://github.com/psf/black
    rev: 19.10b0 # Replace by any tag/version: https://github.com/psf/black/tags
    hooks:
      - id: black
        language_version: python3 # Should be a command that runs python3.6+
        args: ["--line-length", "79"]
-   repo: https://gitlab.com/pycqa/flake8
    rev: 3.7.9
    hooks:
    -   id: flake8
        entry: bash -c 'git diff --staged -- "$@" | flake8 --diff' --
```

```yaml
matrix:
  fast_finish: true
```

```yaml
apiVersion: "k8s.cni.cncf.io/v1"
kind: NetworkAttachmentDefinition
metadata:
  name: vdatapod3
spec:
  config: '{
      "cniVersion": "0.3.0",
      "type": "host-device",
      "device": "vdatapod3"
    }'
```

```yaml
# 32bit TIM2 peripheral
# Applies to Advanced-control (ac) and General-purpose (gp) timers

# TIM2 is present on all devices except stm32f410 and stm32f0x0.
# TIM2 is 16bit on STM32F1 family.
# TIM3 is present on all devices with TIM2 except STML4x3 family.
# TIM3 is present on stm32f0x0.

CNT:
  CNT: [0, 4294967295]
ARR:
  ARR: [0, 4294967295]
CCR1:
  CCR1: [0, 4294967295]
CCR2:
  CCR2: [0, 4294967295]
CCR3:
  CCR3: [0, 4294967295]
CCR4:
  CCR4: [0, 4294967295]
```

```yaml
auth_key_user: ubuntu

# SLURM
slurm_nodes:
    - name: dev-pulsar
      NodeAddr: "{{ hostvars['dev-pulsar']['ansible_ssh_host'] }}"
      CPUs: 2
      RealMemory: 7950
      State: UNKNOWN

slurm_partitions:
    - name: main
      nodes: "dev-pulsar"
      Default: YES
      MaxTime: '30-00:00:00'
      State: UP

slurm_config:
    #SlurmDBd includes
    AccountingStorageType: accounting_storage/slurmdbd
    AccountingStorageHost: localhost
    JobAcctGatherType: jobacct_gather/linux
    ControlMachine: dev-pulsar
    SlurmctldPidFile: /run/slurmctld.pid
    SlurmdPidFile: /run/slurmd.pid
    # SCHEDULING
    FastSchedule: 2
    SchedulerType: sched/backfill
    SelectType: select/cons_res
    SelectTypeParameters: CR_CPU_Memory,CR_LLN


slurm_munge_key: files/keys/munge.key
```

```yaml
- 8
aug_on: false
batch_size: 1
center_fractions:
- 0.04
challenge: multicoil
chans: 18
check_val_every_n_epoch: 1
lr: 0.0003
lr_gamma: 0.1
lr_step_size: 50
mask_type: random
max_epochs: 50
num_cascades: 12
pools: 4
resume_from_checkpoint: null
seed: 42
sens_chans: 8
sens_pools: 4
train_resolution:
- 1000
- 1000
train_val_seed: 0
train_val_split: 0.8
volume_sample_rate: 0.25
weight_decay: 0.0
```

```yaml
spec:
  selector:
    matchLabels:
{{- include "common.labels" . | nindent 6 }}
{{ .Values.podDisruptionBudget | indent 2 }}
{{- end -}}
```

```yaml
path: 1.8.0 # THIS LINE IS AUTOGENERATED - TO UPDATE USE "flutter update-packages --force-upgrade"
  source_span: 1.8.1 # THIS LINE IS AUTOGENERATED - TO UPDATE USE "flutter update-packages --force-upgrade"
  stack_trace: 1.10.0 # THIS LINE IS AUTOGENERATED - TO UPDATE USE "flutter update-packages --force-upgrade"
  stream_channel: 2.1.0 # THIS LINE IS AUTOGENERATED - TO UPDATE USE "flutter update-packages --force-upgrade"
  string_scanner: 1.1.0 # THIS LINE IS AUTOGENERATED - TO UPDATE USE "flutter update-packages --force-upgrade"
  term_glyph: 1.2.0 # THIS LINE IS AUTOGENERATED - TO UPDATE USE "flutter update-packages --force-upgrade"
  test_api: 0.4.8 # THIS LINE IS AUTOGENERATED - TO UPDATE USE "flutter update-packages --force-upgrade"

# PUBSPEC CHECKSUM: 66a9
```

```yaml
id: PYSEC-2018-97
details: lib/Crypto/PublicKey/ElGamal.py in PyCrypto through 2.6.1 generates weak
  ElGamal key parameters, which allows attackers to obtain sensitive information by
  reading ciphertext data (i.e., it does not have semantic security in face of a ciphertext-only
  attack). The Decisional Diffie-Hellman (DDH) assumption does not hold for PyCrypto's
  ElGamal implementation.
affected:
- package:
    name: pycrypto
    ecosystem: PyPI
    purl: pkg:pypi:pycrypto
  ranges:
  - type: ECOSYSTEM
    events:
    - introduced: '0'
  versions:
  - 1.9a2
  - 1.9a5
  - 1.9a6
  - '2.0'
  - 2.0.1
  - 2.1.0
  - '2.2'
  - '2.3'
  - '2.4'
  - 2.4.1
  - '2.5'
  - '2.6'
  - 2.6.1
references:
- type: WEB
  url: https://github.com/TElgamal/attack-on-pycrypto-elgamal
- type: REPORT
  url: https://github.com/dlitz/pycrypto/issues/253
- type: WEB
  url: https://lists.debian.org/debian-lts-announce/2018/02/msg00018.html
- type: WEB
```

```yaml
{{- if .Values.serviceMonitor }}
{{- if and ( .Capabilities.APIVersions.Has "monitoring.coreos.com/v1" ) ( .Values.serviceMonitor.enabled ) }}
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
{{- if .Values.serviceMonitor.labels }}
  labels:
{{ toYaml .Values.serviceMonitor.labels | indent 4}}
{{- end }}
  name: {{ template "prometheus-ebs-snapshot-exporter.fullname" . }}
{{- if .Values.serviceMonitor.namespace }}
  namespace: {{ .Values.serviceMonitor.namespace }}
{{- end }}
spec:
  endpoints:
  - port: http
{{- if .Values.serviceMonitor.interval }}
    interval: {{ .Values.serviceMonitor.interval }}
{{- end }}
{{- if .Values.serviceMonitor.telemetryPath }}
    path: {{ .Values.serviceMonitor.telemetryPath }}
{{- end }}
{{- if .Values.serviceMonitor.timeout }}
    scrapeTimeout: {{ .Values.serviceMonitor.timeout }}
{{- end }}
{{- if .Values.serviceMonitor.metricRelabelings }}
    metricRelabelings:
{{ toYaml .Values.serviceMonitor.metricRelabelings | indent 4 }}
{{- end }}
  jobLabel: {{ template "prometheus-ebs-snapshot-exporter.fullname" . }}
  namespaceSelector:
    matchNames:
    - {{ .Release.Namespace }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "prometheus-ebs-snapshot-exporter.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
{{- if .Values.serviceMonitor.targetLabels }}
  targetLabels:
{{- range .Values.serviceMonitor.targetLabels }}
    - {{ . }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
```

```yaml
apiVersion: networking.istio.io/v1alpha3
kind: ServiceEntry
metadata:
  name: googleapis
spec:
  hosts:
    - "*.googleapis.com"
  ports:
    - number: 443
      name: https
      protocol: http
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: googleapis
spec:
  host: "*.googleapis.com"
  trafficPolicy:
    tls:
      mode: SIMPLE # initiates HTTPS when talking to www.google.com
```

```yaml
name: Tests

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    name: Node 12
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - run: npm install
      - run: npm test
  test-e2e:
    runs-on: ubuntu-latest
    name: E2E
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - run: npm install
      - run: npm run test-e2e
```

```yaml
content: public KeyVaultErrorException(final String message, final Response<ResponseBody> response)
    parameters:
    - id: message
      type: 3d93591e
      description: <p>the exception message or the response content if a message is not available </p>
    - id: response
      type: 4f402e61
      description: <p>the HTTP response </p>
- uid: com.microsoft.azure.keyvault.models.KeyVaultErrorException.KeyVaultErrorException(final String,final Response<ResponseBody>,final KeyVaultError)
  id: KeyVaultErrorException(final String,final Response<ResponseBody>,final KeyVaultError)
  parent: com.microsoft.azure.keyvault.models.KeyVaultErrorException
  href: com.microsoft.azure.keyvault.models.KeyVaultErrorException.yml
  langs:
  - java
  name: KeyVaultErrorException(final String message, final Response<ResponseBody> response, final KeyVaultError body)
  nameWithType: KeyVaultErrorException.KeyVaultErrorException(final String message, final Response<ResponseBody> response, final KeyVaultError body)
  fullName: com.microsoft.azure.keyvault.models.KeyVaultErrorException.KeyVaultErrorException(final String message, final Response<ResponseBody> response, final KeyVaultError body)
  overload: com.microsoft.azure.keyvault.models.KeyVaultErrorException.KeyVaultErrorException*
  type: Constructor
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/models/KeyVaultErrorException.java
    startLine: 37
  package: com.microsoft.azure.keyvault.models
  summary: "<p>Initializes a new instance of the KeyVaultErrorException class.</p>\r\n<p></p>"
  syntax:
    content: public KeyVaultErrorException(final String message, final Response<ResponseBody> response, final KeyVaultError body)
    parameters:
    - id: message
```

```yaml
- penalty: 10
      text: Hmm, the webhook configuration looks good. What other factors could influence
        the permissions?
    - penalty: 10
      text: The webhook deployment also looks like it's working
    - penalty: 10
      text: Where does kubeadm keep the master config?
    - penalty: 10
      text: Looks like the MutatingAdmissionWebhook admission controller has been
        disabled. I probably need to enable it.
    sortOrder: 1
    startingPoint:
      asRoot: true
      mode: node
      nodeId: master-0
```

```yaml
steps:
    - uses: actions/checkout@v2
             
    - name: Setup NuGet.exe for use with actions
      # You may pin to the exact commit or the version.
      # uses: NuGet/setup-nuget@04b0c2b8d1b97922f67eca497d7cf0bf17b8ffe1
      uses: NuGet/setup-nuget@v1.0.5
      with:
        # NuGet API Key to configure.
        nuget-api-key: ${{ secrets.SPECKLE_NUGET_AUTH_TOKEN }}

    - name: Get version from tag
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'    
      run: |
        echo $env:GITHUB_REF
        $env:GITHUB_REF -match "refs/tags/v(?<content>.*)-cx"
        $SPECKLE_VERSION = $matches["content"]
        echo "::set-env name=SPECKLE_VERSION::$SPECKLE_VERSION" 
      # github action syntax for setting variables ^

    - name: Restore dependencies
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
      run: nuget restore SpecklePopup.sln

    - name: Setup msbuild
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
      uses: microsoft/setup-msbuild@v1.0.1

    - name: Build solution
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
      run: msbuild SpecklePopup.sln -p:Configuration=Release

    - name: Generate NuGet package
      run: nuget pack SpecklePopup.csproj -Version $env:SPECKLE_VERSION -Verbosity detailed -Properties Configuration=Release
      
    - name: Push generated package to GitHub registry
      run: nuget push *.nupkg -SkipDuplicate -ApiKey ${{ secrets.SPECKLE_NUGET_AUTH_TOKEN }} -Source https://api.nuget.org/v3/index.json
```

```yaml
language: node_js
node_js:
  - "10"
services:
  - xvfb
addons:
  firefox: "latest"
before_script:
  - "export DISPLAY=:99.0"
script:
  gulp test --browsers Firefox
```

```yaml
name: CI Pipeline

on:
  pull_request:
    branches: [ main, dev ]
  push:
    branches: [ main, dev ]


jobs:

  test:
    name: Test PR or Push to DEV
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build Docker
        run: |
          docker build -f docker/Dockerfile -t finn-base-gha \
                       --build-arg GROUP=$(id -gn) \
                       --build-arg GID=$(id -g) \
                       --build-arg USER=$(id -un) \
                       --build-arg UID=$(id -u) \
                       .

      - name: Run Tests
        run: |
          docker run --rm \
                     -v $(pwd):/workspace/finn-base \
                     finn-base-gha run_tests.sh

      - name: Build Docs
        run: |
          docker run --rm \
                     -v $(pwd):/workspace/finn-base \
                     finn-base-gha build_docs.sh
```

```yaml
# references:
# * http://www.objc.io/issue-6/travis-ci.html
# * https://github.com/supermarin/xcpretty#usage

osx_image: xcode7.3
language: objective-c
# cache: cocoapods
# podfile: Example/Podfile
# before_install:
# - gem install cocoapods # Since Travis is not always on latest version
# - pod install --project-directory=Example
script:
- set -o pipefail && xcodebuild test -enableCodeCoverage YES -workspace Example/YJFImageLooper.xcworkspace -scheme YJFImageLooper-Example -sdk iphonesimulator9.3 ONLY_ACTIVE_ARCH=NO | xcpretty
- pod lib lint
```

```yaml
version: '2'
services:
  # To run tests docker-compose run --rm php vendor/bin/phpunit
  php:
    image: prooph/php:7.1-cli-xdebug
    environment:
      PHP_IDE_CONFIG: "serverName=application"
      arangodb_host: "vst://arangodb:8529"
      arangodb_username: ""
      arangodb_password: ""
      arangodb_dbname: _system
```

```yaml
- op: add
  path: "/spec"
  value:
    resourcetemplates:
    - apiVersion: tekton.dev/v1beta1
      kind: PipelineRun
      metadata:
        name: triggers-release-nightly-$(uid)
      spec:
        pipelineRef:
          name: triggers-release
        params:
        - name: package
          value: $(tt.params.gitrepository)
        - name: imageRegistry
          value: gcr.io/tekton-nightly
        - name: versionTag
          value: $(tt.params.versionTag)
        resources:
        - name: source-repo
          resourceSpec:
            type: git
            params:
            - name: revision
              value: $(tt.params.gitrevision)
            - name: url
              value: https://$(tt.params.gitrepository)
        - name: bucket
          resourceSpec:
            type: storage
            params:
            - name: type
              value: gcs
            - name: location
              value: gs://tekton-releases-nightly/$(tt.params.projectName)
            - name: dir
              value: "y"
            secrets:
            - fieldName: GOOGLE_APPLICATION_CREDENTIALS
              secretKey: service-account.json
              secretName: nightly-account
        - name: builtControllerImage
          resourceRef:
            name: triggers-controller-image
        - name: builtWebhookImage
          resourceRef:
            name: triggers-webhook-image
        - name: builtEventListenerSinkImage
          resourceRef:
            name: event-listener-sink-image
        - name: notification
          resourceRef:
            name: post-nightly-release-trigger
```

```yaml
port: 4567
rackup: ./config.ru
timeout: 90
daemonize: false
```

```yaml
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

version: '3.0'

services:
  configmanager:
    build:
      context: .
    container_name: 'configurationmanager-container'
    ports:
      - 8081:8081
    environment:
      - CUSTOM_APP_NAME=Einfache Wetterwarnungen auf Gemeindeebene
      - DATASPACE_COMMUNICATION_SSL=true
```

```yaml
owner : ckreddy
level : 6
memory : 20
description : Auviz design - xF::BOX_16U_RO_3
id : 1056
products : [all]
user:
    high_clkid : 2
    low_clkid : 1
    design : xF::BOX_16U_RO_3
```

```yaml
apiVersion: v1
appVersion: "0.0.1"
description: Geppetto NeuroSCAN Chart
name: geppetto-neuroSCAN
version: 0.0.1
maintainers:
  - name: Lucas Rebscher
    email: lucas@metacell.us
  - name: Afonso Pinto
    email: afonso@metacell.us
```

```yaml
dist:
  trusty

sudo:
  required

language:
  scala

jdk:
  - oraclejdk8

scala:
  - 2.11.7

script:
  - .travis/ci.sh

after_success:
  - .travis/publish.sh
```

```yaml
version: 2
updates:
  - package-ecosystem: "gomod"
    directory: "/"
    schedule:
      interval: "daily"
  - package-ecosystem: "docker"
    directory: "/build"
    schedule:
      interval: "weekly"
```

```yaml
- group: CustodianCoreCI

jobs:

- job: 'CustodianDockerBuild'
  displayName: 'Docker Build'
  pool:
    vmImage: 'Ubuntu-18.04'
  steps:
  - checkout: self
    fetchDepth: 1
  - task: UsePythonVersion@0
    inputs:
      versionSpec: 3.8
      architecture: 'x64'
  # bin directory is in .dockerignore
  - script: |
      python3 -m pip install --upgrade pip
      pip3 install docker click pytest pyyaml six
  # build a docker image and sanity test
  - script: |
      python3 tools/dev/dockerpkg.py build -t build --verbose --test -i cli
```

```yaml
language: ruby
rvm:
- 2.3.1
before_script:
  - bundle exec hatchet ci:setup
script: bundle exec parallel_test test/hatchet -n 11
after_script: bundle exec rake hatchet:teardown_travis
env:
  global:
  - HATCHET_BUILDPACK_BRANCH=master
  - HATCHET_RETRIES=3
  - HATCHET_APP_LIMIT=80
```

```yaml
tag_specification:
  name: "4.6"
  namespace: ocp
tests:
- as: unit
  commands: make unit
  container:
    from: src
- as: e2e-aws
  steps:
    cluster_profile: aws
    workflow: openshift-e2e-aws
zz_generated_metadata:
  branch: master
  org: operator-framework
  repo: operator-registry
```

```yaml
--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: "Alias for #add_rpc_operation"
full_name: SOAP::RPC::Router#add_rpc_method
is_singleton: false
name: add_rpc_method
params: (receiver, qname, soapaction, name, param_def, opt = {})
visibility: public
```

```yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: dns-operator
  namespace: openshift-dns-operator
  annotations:
    include.release.openshift.io/self-managed-high-availability: "true"
spec:
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    interval: 30s
    port: metrics
    scheme: https
    tlsConfig:
      caFile: /etc/prometheus/configmaps/serving-certs-ca-bundle/service-ca.crt
      serverName: metrics.openshift-dns-operator.svc
  jobLabel: component
  selector:
    matchLabels:
      name: dns-operator
```

```yaml
node_meta_data:
  description: Winch Controller Axial Base
  location: Axial Base
  node_id_name: SN0122-SC03A
  node_type: WinchController
  oms_sample_rate: 5
  reference_designator: RS03AXPS-SC03A
  serial_number: SN0122
  read_only_mode: True

node_streams:
  secondary_node_port_eng_data:
    - port_type: Instrument
      port_num: 1
      name: BRAKE-IP2

    - port_type: Expansion
      port_num: 0
      name: 04-EP1

    - port_type: Instrument
      port_num: 0
      name: 05-IP1

    - port_type: Expansion
      port_num: 1
      name: VFD-EP2

  secondary_node_eng_data:
    - name: 00-ENG

  shallow_profiler_winch_eng_data:
    - name: 00-WINCH
```

```yaml
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaConnect
metadata:
  name: my-connect-cluster
#  annotations:
#  # use-connector-resources configures this KafkaConnect
#  # to use KafkaConnector resources to avoid
#  # needing to call the Connect REST API directly
#    strimzi.io/use-connector-resources: "true"
spec:
  version: 3.2.0
  replicas: 1
  bootstrapServers: my-cluster-kafka-bootstrap:9093
  tls:
    trustedCertificates:
      - secretName: my-cluster-cluster-ca-cert
        certificate: ca.crt
  config:
    group.id: connect-cluster
    offset.storage.topic: connect-cluster-offsets
    config.storage.topic: connect-cluster-configs
    status.storage.topic: connect-cluster-status
    # -1 means it will use the default replication factor configured in the broker
    config.storage.replication.factor: -1
    offset.storage.replication.factor: -1
    status.storage.replication.factor: -1
  build:
    output:
      type: docker
      # This image will last only for 24 hours and might be overwritten by other users
      # Strimzi will use this tag to push the image. But it will use the digest to pull
      # the container image to make sure it pulls exactly the image we just built. So
      # it should not happen that you pull someone else's container image. However, we
      # recommend changing this to your own container registry or using a different
      # image name for any other than demo purposes.
      image: ttl.sh/strimzi-connect-example-3.2.0:24h
    plugins:
      - name: kafka-connect-file
        artifacts:
          - type: maven
            group: org.apache.kafka
            artifact: connect-file
            version: 3.2.0
```

```yaml
- name: Tests
      # run even if previous step (import Ax) failed
      if: ${{ always() }}
      run: |
        pytest -ra

  publish-latest-website:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
```

```yaml
title: canada-revenu-habitant-2015
date: '2017-03-13T17:45:15.000Z'
fr:
  title: Canada - revenu par habitant (2015)
en:
  title: Canada - revenu par habitant (2015)
continents: []
countries:
  - canada
embed: >-
  <iframe id="datawrapper-chart-TUoMT" src="//datawrapper.dwcdn.net/TUoMT/2/"
  frameborder="0" allowtransparency="true" allowfullscreen="allowfullscreen"
  webkitallowfullscreen="webkitallowfullscreen"
  mozallowfullscreen="mozallowfullscreen" oallowfullscreen="oallowfullscreen"
  msallowfullscreen="msallowfullscreen" width="100%" height="800" style="height:
  800px;"></iframe>
source: La Presse
type: embed
```

```yaml
---
http_interactions:
- request:
    method: get
    uri: https://www.cine.io/api/1/-/project?secretKey=MY%20SECRET
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - ! '*/*'
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=utf-8
      Date:
      - Sun, 01 Jun 2014 07:27:53 GMT
      Etag:
      - ! '"-585713471"'
      Set-Cookie:
      - connect.sid=s%3ACxr5WVK6KEkFqdcFxxYTSTJ7.%2F7TTnVJK4mHsI%2FAIiKiebpUq5y5d5Fz8MmK7Azhad%2Bg;
        Path=/; HttpOnly
      Vary:
      - Accept-Encoding
      X-Powered-By:
      - Express
      Content-Length:
      - '217'
      Connection:
      - keep-alive
    body:
      encoding: US-ASCII
      string: ! '{"id":"THE ID","publicKey":"MY PUBLIC","secretKey":"MY SECRET","name":"THE PROJECT", "streamsCount":0,"updatedAt":"2014-05-29T01:21:20.186Z"}'
    http_version:
  recorded_at: Sun, 01 Jun 2014 07:27:53 GMT
recorded_with: VCR 2.3.0
```

```yaml
branches:
  only:
    - master
    - develop
    - /feature\/.*/

environment:
  matrix:
    - TOOLSET: msvc-9.0,msvc-10.0,msvc-11.0,msvc-12.0
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
    - TOOLSET: msvc-14.0
      ADDRMD: 32,64
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
    - TOOLSET: msvc-14.1
      CXXSTD: 14,17
      ADDRMD: 32,64
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
    - TOOLSET: msvc-14.2
      ADDRMD: 32,64
      CXXSTD: 14,17
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
    - TOOLSET: clang-win
      ADDRMD: 32,64
      CXXSTD: 14,17
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
    - TOOLSET: gcc
      CXXSTD: 03,11,14,1z
      ADDPATH: C:\cygwin\bin;
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
    - TOOLSET: gcc
      CXXSTD: 03,11,14,1z
      ADDPATH: C:\cygwin64\bin;
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
    - TOOLSET: gcc
      CXXSTD: 03,11,14,1z
      ADDPATH: C:\mingw\bin;
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
    - TOOLSET: gcc
      CXXSTD: 03,11,14,1z
      ADDPATH: C:\mingw-w64\x86_64-6.3.0-posix-seh-rt_v5-rev1\mingw64\bin;
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
    - TOOLSET: gcc
      CXXSTD: 03,11,14,1z
      ADDPATH: C:\mingw-w64\x86_64-7.3.0-posix-seh-rt_v5-rev0\mingw64\bin;
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015

install:
  - set GIT_FETCH_JOBS=8
  - set BOOST_BRANCH=develop
  - if "%APPVEYOR_REPO_BRANCH%" == "master" set BOOST_BRANCH=master
  - cd ..
  - git clone -b %BOOST_BRANCH% --depth 1 https://github.com/boostorg/boost.git boost-root
  - cd boost-root
  - git submodule init tools/build
  - git submodule init tools/boostdep
  - git submodule init tools/boost_install
  - git submodule init libs/headers
  - git submodule init libs/config
  - git submodule update --jobs %GIT_FETCH_JOBS%
  - xcopy /s /e /q %APPVEYOR_BUILD_FOLDER% libs\integer
  - python tools/boostdep/depinst/depinst.py --git_args "--jobs %GIT_FETCH_JOBS%" integer
  - cmd /c bootstrap
  - b2 -d0 headers

build: off

test_script:
  - PATH=%ADDPATH%%PATH%
  - if not "%CXXSTD%" == "" set CXXSTD=cxxstd=%CXXSTD%
  - if not "%ADDRMD%" == "" set ADDRMD=address-model=%ADDRMD%
  - b2 -j %NUMBER_OF_PROCESSORS% libs/integer/test toolset=%TOOLSET% %CXXSTD% %ADDRMD%
```

```go
package api

import (
	"io/ioutil"
	"os"
	"path/filepath"

	"github.com/sirupsen/logrus"

	"k8s.io/test-infra/prow/secretutil"
)

// prowArtifactsEnv is the directory Prow wants us to put artifacts into for upload
const prowArtifactsEnv string = "ARTIFACTS"

func Artifacts() (string, bool) {
	return os.LookupEnv(prowArtifactsEnv)
}

// SaveArtifact saves the data under the path relative to the artifact directory.
// If no artifact directory is set, we no-op.
func SaveArtifact(censor secretutil.Censorer, relPath string, data []byte) error {
	artifactDir, set := os.LookupEnv(prowArtifactsEnv)
	if !set {
		return nil
	}
	censor.Censor(&data)
	path := filepath.Join(artifactDir, relPath)
	dir := filepath.Dir(path)
	if err := os.MkdirAll(dir, 0777); err != nil {
		logrus.WithError(err).Warn("Unable to create artifact directory.")
		return err
	}
	if err := ioutil.WriteFile(path, data, 0644); err != nil {
		logrus.WithError(err).Errorf("Failed to write %s", relPath)
		return err
	}
	return nil
}
```

```go
if timestampFormat == "" {
		timestampFormat = DefaultTimestampFormat
	}

	data["time"] = entry.Time.Format(timestampFormat)
	data["msg"] = entry.Message
	data["level"] = entry.Level.String()

	serialized, err := json.Marshal(data)
	if err != nil {
		return nil, fmt.Errorf("Failed to marshal fields to JSON, %v", err)
	}
	return append(serialized, '\n'), nil
}
```

```go
package service

type Viewer interface {
	View(ViewRequestInfo) ViewResponseInfo
}

type viewer struct {
	offstage offstageViewer
}

func NewViewer(offstage offstageViewer) Viewer {

	if offstage == nil {
		panic("offstage is nil")
	}

	return &viewer{offstage: offstage}
}

func (v viewer) View(req ViewRequestInfo) ViewResponseInfo {
	var err error
	var data []byte

	if req == nil {
		err = ErrNilRequestInfo
		return NewViewResponseInfo("", data, err)
	}

	serverName := req.GetServerName()

	switch req.GetRequestType() {
	case DisplayConfig:
		data, err = v.offstage.DisplayConfig(serverName)
	case GetConfig:
		data, err = v.offstage.GetConfig(serverName)
	case ShowStatistics:
		data, err = v.offstage.ShowStatistics(serverName)
	case DisplayServersStatus:
		data, err = v.offstage.DisplayServersStatus()
		serverName = ""
	default:
		err = ErrUnknownRequestType
	}

	return NewViewResponseInfo(serverName, data, err)
}
```

```go
/* Copyright 2022 Zinc Labs Inc. and Contributors
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
 */

package zutils

import (
	"os"
	"path/filepath"
)

// DirSize return the size of the directory (KB)
func DirSize(path string) (float64, error) {
	var size int64
	err := filepath.Walk(path, func(_ string, info os.FileInfo, err error) error {
		if err != nil {
			return err
		}
		if !info.IsDir() {
			size += info.Size()
		}
		return err
	})
	sizeKB := float64(size) / 1024.0

	return sizeKB, err
}

func IsExist(path string) (bool, error) {
	f, err := os.Open(path)
	if err != nil {
		if os.IsExist(err) {
			return false, nil
		}
		return false, err
	}
	f.Close()

	return true, nil
}
```

```go
package config

import (
	"errors"
	"os"
)

var homeEnvNames = [][]string{
	{"HOME"},
	{"HOMEDRIVE", "HOMEPATH"},
}

var (
	ErrHomeNotFound = errors.New("$HOME not found")
)

func getEnv(name []string) (v string) {

	if len(name) == 1 {
		return os.Getenv(name[0])
	}
	for _, k := range name {
		v += os.Getenv(k)
	}
	return
}

func GetDir(app string) (dir string, err error) {

	for _, name := range homeEnvNames {
		home := getEnv(name)
		if home == "" {
			continue
		}
		dir = home + "/." + app
		err = os.MkdirAll(dir, 0777)
		return
	}
	return "", ErrHomeNotFound
}
```

```go
/*
 * Anchore Engine API Server
 *
 * This is the Anchore Engine API. Provides the primary external API for users of the service.
 *
 * API version: 0.1.16
 * Contact: nurmi@anchore.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package external
// TagUpdateNotificationAllOf The Notification Object definition for Tag Update Notifications
type TagUpdateNotificationAllOf struct {
	Data TagUpdateNotificationData `json:"data,omitempty"`
}
```

```go
package version

// VERSION ...
const VERSION = "0.13.0"
```

```go
package models

import (
	"testing"

	"github.com/bfg-finsa/telegraf/selfstat"
	"github.com/stretchr/testify/require"
)

func TestErrorCounting(t *testing.T) {
	reg := selfstat.Register(
		"gather",
		"errors",
		map[string]string{"input": "test"},
	)
	iLog := Logger{Name: "inputs.test"}
	iLog.OnErr(func() {
		reg.Incr(1)
	})
	iLog.Error("something went wrong")
	iLog.Errorf("something went wrong")

	require.Equal(t, int64(2), reg.Get())
}
```

```go
/*
 * Twilio - Verify
 *
 * This is the public Twilio REST API.
 *
 * API version: 1.27.1
 * Contact: support@twilio.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

// ListWebhookResponse struct for ListWebhookResponse
type ListWebhookResponse struct {
	Meta     ListVerificationAttemptResponseMeta `json:"meta,omitempty"`
	Webhooks []VerifyV2Webhook                   `json:"webhooks,omitempty"`
}
```

```go
// Copyright 2016 TiKV Project Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package command

import (
	"bytes"
	"encoding/json"
	"net/http"
	"net/url"
	"os"
	"path"
	"reflect"
	"strconv"
	"strings"

	"github.com/spf13/cobra"
	"github.com/tikv/pd/server/config"
	"github.com/tikv/pd/server/schedule/placement"
)

var (
	configPrefix          = "pd/api/v1/config"
	schedulePrefix        = "pd/api/v1/config/schedule"
	replicatePrefix       = "pd/api/v1/config/replicate"
	labelPropertyPrefix   = "pd/api/v1/config/label-property"
	clusterVersionPrefix  = "pd/api/v1/config/cluster-version"
	rulesPrefix           = "pd/api/v1/config/rules"
	rulesBatchPrefix      = "pd/api/v1/config/rules/batch"
	rulePrefix            = "pd/api/v1/config/rule"
	ruleGroupPrefix       = "pd/api/v1/config/rule_group"
	ruleGroupsPrefix      = "pd/api/v1/config/rule_groups"
	replicationModePrefix = "pd/api/v1/config/replication-mode"
	ruleBundlePrefix      = "pd/api/v1/config/placement-rule"
)

// NewConfigCommand return a config subcommand of rootCmd
func NewConfigCommand() *cobra.Command {
	conf := &cobra.Command{
		Use:   "config <subcommand>",
		Short: "tune pd configs",
	}
```

```go
package types

import "math"

// Gas consumption descriptors.
const (
	GasIterNextCostFlatDesc = "IterNextFlat"
	GasValuePerByteDesc     = "ValuePerByte"
	GasWritePerByteDesc     = "WritePerByte"
	GasReadPerByteDesc      = "ReadPerByte"
	GasWriteCostFlatDesc    = "WriteFlat"
	GasReadCostFlatDesc     = "ReadFlat"
	GasHasDesc              = "Has"
	GasDeleteDesc           = "Delete"
)

// Gas measured by the SDK
type Gas = uint64

// ErrorOutOfGas defines an error thrown when an action results in out of gas.
type ErrorOutOfGas struct {
	Descriptor string
}

// ErrorGasOverflow defines an error thrown when an action results gas consumption
// unsigned integer overflow.
type ErrorGasOverflow struct {
	Descriptor string
}
```

```go
package airship

import (
	"github.com/dghubble/sling"
)

// FeedsService ...
type FeedsService struct {
	sling *sling.Sling
}

func newFeedsService(sling *sling.Sling) *FeedsService {
	return &FeedsService{
		sling: sling,
	}
}
```

```go
package main

import (
	"fmt"
)

func main() {
	var n int

	fmt.Scanf("%d", &n)

	nums := make([]int, n)
	for i := 0; i < n; i++ {
		fmt.Scan(&nums[i])
	}
	m := make(map[int]struct{})
	newList := make([]int, 0)

	for _, e := range nums {
		if _, ok := m[e]; !ok {
			m[e] = struct{}{}
			newList = append(newList, e)
		}
	}

	fmt.Println(len(newList))
}
```

```go
package config

const (
	// DefaultValueFormatStringDefault default value place holder
	DefaultValueFormatStringDefault = "(default: %v)"
	// DeprecatedFlagIndicatorDefault default deprecated flag indicator
	DeprecatedFlagIndicatorDefault = "[DEPRECATED]"
	// RequiredFlagMarkDefault default required flag indicator
	RequiredFlagMarkDefault = "*"
)
```

```go
import (
	"flag"

	"k8s.io/klog"
	"kubeception.cloud/kubeception/cmd/manager/app"
	"kubeception.cloud/kubeception/pkg/util"
	"sigs.k8s.io/controller-runtime/pkg/runtime/log"
	"sigs.k8s.io/controller-runtime/pkg/runtime/signals"
)

func main() {
	klog.InitFlags(nil)
	flag.Parse()
	log.SetLogger(log.ZapLogger(false))
	logger := log.Log.WithName("main")

	cmd := app.NewManagerCommand(util.ContextFromStopChannel(signals.SetupSignalHandler()), logger)
	if err := cmd.Execute(); err != nil {
		util.LogErrorAndExit(logger, err, "Error executing command")
	}
}
```

```go
"host": cfg.Host,
		}),
	}

	return s
}

func (s *Server) Wait() error {
	ticker := time.NewTicker(1 * time.Second)

	for {
		select {
		case <-ticker.C:
		case <-s.errCtx.Done():
			ctx, cancel := context.WithTimeout(context.Background(), 5*time.Second)
			defer cancel()

			g, gtx := errgroup.WithContext(ctx)

			if s.https != nil {
				g.Go(s.shutdownHTTPS(gtx))
			}

			if s.http != nil {
				g.Go(s.shutdownHTTP(gtx))
			}

			if s.api != nil {
				g.Go(s.shutdownAPI(gtx))
			}

			return g.Wait()
		}
	}
}

func (s *Server) config() *config.Config {
	return s.cfg
}

func (s *Server) log() *log.Entry {
	return s.logger
}
```

```go
package internal

import (
	"math/rand"
	"time"
)

const charset = "abcdefghijklmnopqrstuvwxyz" +
	"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"

var seededRand *rand.Rand = rand.New(rand.NewSource(time.Now().UnixNano()))

func RandStringWithCharset(length int, charset string) string {
	b := make([]byte, length)
	for i := range b {
		b[i] = charset[seededRand.Intn(len(charset))]
	}
	return string(b)
}

func RandStringLen(length int) string {
	return RandStringWithCharset(length, charset)
}

func RandStringMinMax(min, max int) string {
	return RandStringLen(min + seededRand.Intn(max-min))
}
```

```go
writeResponse(w, r, start, http.StatusBadRequest, stripeError)
			return
		}
	}

	//
	// Set headers
	//

	// We don't do anything with the idempotency key for now, but reflect it
	// back into response headers like the Stripe API does.
	idempotencyKey := r.Header.Get("Idempotency-Key")
	if idempotencyKey != "" {
		w.Header().Set("Idempotency-Key", idempotencyKey)
	}

	// Every response needs a Request-Id header except the invalid authorization
	w.Header().Set("Request-Id", "req_123")

	//
	// Route request
	//
```

```go
// Copyright © 2019 The Things Network Foundation, The Things Industries B.V.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package config

// ACME represents ACME configuration.
type ACME struct {
	// TODO: Remove Enable (https://github.com/TheThingsNetwork/lorawan-stack/issues/1450)
	Enable      bool     `name:"enable" description:"Enable automated certificate management (ACME). This setting is deprecated; set the TLS config source to acme instead"`
	Endpoint    string   `name:"endpoint" description:"ACME endpoint"`
```

```go
package distribution

import (
	"encoding/json"
	"errors"
	"fmt"
	"io"
	"net/http"
	"time"

	"github.com/docker/distribution/context"
	"github.com/docker/distribution/reference"
	digest "github.com/opencontainers/go-digest"
)

var (
	// ErrBlobExists returned when blob already exists
	ErrBlobExists = errors.New("blob exists")

	// ErrBlobDigestUnsupported when blob digest is an unsupported version.
	ErrBlobDigestUnsupported = errors.New("unsupported blob digest")

	// ErrBlobUnknown when blob is not found.
	ErrBlobUnknown = errors.New("unknown blob")

	// ErrBlobUploadUnknown returned when upload is not found.
	ErrBlobUploadUnknown = errors.New("blob upload unknown")

	// ErrBlobInvalidLength returned when the blob has an expected length on
	// commit, meaning mismatched with the descriptor or an invalid value.
	ErrBlobInvalidLength = errors.New("blob invalid length")
)

// ErrBlobInvalidDigest returned when digest check fails.
type ErrBlobInvalidDigest struct {
	Digest digest.Digest
	Reason error
}

func (err ErrBlobInvalidDigest) Error() string {
	return fmt.Sprintf("invalid digest for referenced layer: %v, %v",
		err.Digest, err.Reason)
}

// ErrBlobMounted returned when a blob is mounted from another repository
// instead of initiating an upload session.
type ErrBlobMounted struct {
	From       reference.Canonical
	Descriptor Descriptor
}

func (err ErrBlobMounted) Error() string {
	return fmt.Sprintf("blob mounted from: %v to: %v",
		err.From, err.Descriptor)
}

// Descriptor describes targeted content. Used in conjunction with a blob
// store, a descriptor can be used to fetch, store and target any kind of
// blob. The struct also describes the wire protocol format. Fields should
// only be added but never changed.
type Descriptor struct {
	// MediaType describe the type of the content. All text based formats are
	// encoded as utf-8.
	MediaType string `json:"mediaType,omitempty"`

	// Size in bytes of content.
	Size int64 `json:"size,omitempty"`

	// Digest uniquely identifies the content. A byte stream can be verified
	// against against this digest.
	Digest digest.Digest `json:"digest,omitempty"`

	// URLs contains the source URLs of this content.
	URLs []string `json:"urls,omitempty"`

	// NOTE: Before adding a field here, please ensure that all
	// other options have been exhausted. Much of the type relationships
	// depend on the simplicity of this type.
}

// Descriptor returns the descriptor, to make it satisfy the Describable
// interface. Note that implementations of Describable are generally objects
// which can be described, not simply descriptors; this exception is in place
// to make it more convenient to pass actual descriptors to functions that
// expect Describable objects.
func (d Descriptor) Descriptor() Descriptor {
	return d
}

// NANNAN: if it's a layer, then, we add it's containning files'descriptor
```

```go
package main

import (
	"context"
	"flag"
	"fmt"
	"log"
	"net/http"
	"os"
	"os/exec"
	"os/signal"
	"strings"
	"syscall"
	"time"

	"github.com/google/go-github/github"
	"github.com/nicolai86/github-rebase-bot/processors"
```

```go
/*

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// EDIT THIS FILE!  THIS IS SCAFFOLDING FOR YOU TO OWN!
// NOTE: json tags are required.  Any new fields you add must have json tags for the fields to be serialized.

// IamroleSpec defines the desired state of Iamrole
type IamroleSpec struct {
	PolicyDocument PolicyDocument `json:"PolicyDocument"`
	// Important: Run "make" to regenerate code after modifying this file
}

// +kubebuilder:validation:Required

//PolicyDocument type defines IAM policy struct
type PolicyDocument struct {

	// +kubebuilder:default:="2012-10-17"
	// Version specifies IAM policy version
	// By default, this value is "2012-10-17"
	// +optional
	Version string `json:"Version,omitempty"`

	// Statement allows list of statement object
	Statement []Statement `json:"Statement"`
}

// +kubebuilder:validation:Required
// Statement type defines the AWS IAM policy statement
type Statement struct {
	//Effect on target resource
	Effect Effect `json:"Effect"`

	//Action allowed/denied on specific resources
	Action []string `json:"Action"`

	//Resources defines target resources which IAM policy will be applied
	Resource []string `json:"Resource"`
	// Sid is an optional field which describes the specific statement action
	// +optional
	Sid string `json:"Sid,omitempty"`
}

// Effect describes whether to allow or deny the specific action
// Allowed values are
// - "Allow" : allows the specific action on resources
// - "Deny" : denies the specific action on resources
// +kubebuilder:validation:Enum=Allow;Deny
type Effect string

const (
	//Allow Policy allows policy
	AllowPolicy Effect = "Allow"

	//DenyPolicy denies policy
	DenyPolicy Effect = "Deny"
)

// IamroleStatus defines the observed state of Iamrole
type IamroleStatus struct {
	// Important: Run "make" to regenerate code after modifying this file
	RoleName   string `json:"roleName,omitempty"`
	State      State  `json:"state,omitempty"`
	RetryCount int    `json:"retryCount"`
}

type State string

const (
	CreateInProgress State = "CreateInProgress"
	CreateError      State = "CreateError"

	UpdateInprogress State = "UpdateInProgress"
	UpdateError      State = "UpdateError"

	DeleteInprogress State = "DeleteInprogress"

	Ready State = "Ready"
)

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:resource:path=iamroles,scope=Namespaced,shortName=iam,singular=iamrole
// +kubebuilder:printcolumn:name="State",type="string",JSONPath=".status.state",description="current state of the iam role"
// +kubebuilder:printcolumn:name="RoleName",type="string",JSONPath=".status.roleName",description="Name of the role"
// +kubebuilder:printcolumn:name="RetryCount",type="integer",JSONPath=".status.retryCount",description="Retry count"
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description="time passed since iamrole creation"
// Iamrole is the Schema for the iamroles API
type Iamrole struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec   IamroleSpec   `json:"spec,omitempty"`
	Status IamroleStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true
```

```go
package osc

import (
	"bytes"
	"encoding/base64"
	"errors"
	"fmt"
	"io"
	"os"
	"sync"
	"time"

	"golang.org/x/crypto/ssh/terminal"
)
```

```go
package main

// Brute Force
func lengthOfLongestSubstring(s string) int {
	longest := 0

	for i := 0; i < len(s); i++ {
		temp := map[string]string{}
		for j := i; j < len(s); j++ {
			str := string(s[j])
			_, exists := temp[str]

			if exists {
				break
			}

			temp[str] = str
		}

		if len(temp) > longest {
			longest = len(temp)
		}
	}

	return longest
}
```

```go
func (m *Ospfv3EdmRedist_KEYS) String() string            { return proto.CompactTextString(m) }
func (*Ospfv3EdmRedist_KEYS) ProtoMessage()               {}
func (*Ospfv3EdmRedist_KEYS) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Ospfv3EdmRedist_KEYS) GetProcessName() string {
	if m != nil {
		return m.ProcessName
	}
	return ""
}

func (m *Ospfv3EdmRedist_KEYS) GetProtocolName() string {
	if m != nil {
		return m.ProtocolName
	}
	return ""
}

func (m *Ospfv3EdmRedist_KEYS) GetProcessName_1() string {
	if m != nil {
		return m.ProcessName_1
	}
	return ""
}

type Ospfv3EdmRedist struct {
	// Protocol name
	ProtocolName string `protobuf:"bytes,50,opt,name=protocol_name,json=protocolName" json:"protocol_name,omitempty"`
	// Process ID
	ProcessId     string `protobuf:"bytes,51,opt,name=process_id,json=processId" json:"process_id,omitempty"`
	RedMetricFlag bool   `protobuf:"varint,52,opt,name=red_metric_flag,json=redMetricFlag" json:"red_metric_flag,omitempty"`
	RedMetric     uint32 `protobuf:"varint,53,opt,name=red_metric,json=redMetric" json:"red_metric,omitempty"`
	RedMtypeFlag  bool   `protobuf:"varint,54,opt,name=red_mtype_flag,json=redMtypeFlag" json:"red_mtype_flag,omitempty"`
```

```go
Name pulumi.StringPtrInput
	// NAT option controlling how IPs are NAT'ed to the instance. Currently only NO_NAT (default value) is supported.
	NatPolicy pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// The URI of the created resource.
	SelfLink pulumi.StringPtrInput
	// URL of the zone where the target instance resides.
	Zone pulumi.StringPtrInput
}

func (TargetInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*targetInstanceState)(nil)).Elem()
}

type targetInstanceArgs struct {
	// An optional description of this resource.
	Description *string `pulumi:"description"`
	// The Compute instance VM handling traffic for this target instance. Accepts the instance self-link, relative path (e.g.
	// 'projects/project/zones/zone/instances/instance') or name. If name is given, the zone will default to the given zone or
	// the provider-default zone and the project will default to the provider-level project.
	Instance string `pulumi:"instance"`
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression
	// '[a-z]([-a-z0-9]*[a-z0-9])?' which means the first character must be a lowercase letter, and all following characters
	// must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
```

```go
package main

import "fmt"

func main() {
	var time int
	fmt.Scan(&time)
	hour := time / 3600
	min := time % 3600 / 60
	sec := time - hour*3600 - min*60
	fmt.Printf("%d:%d:%d\n", hour, min, sec)
}
```

```go
return viper.GetStringSlice(fullKey)
}

func (cfg *config) GetInt(key string) int {
	fullKey := cfg.nsKey(key)

	return viper.GetInt(fullKey)
}

func (cfg *config) IsSet(key string) bool {
	fullKey := cfg.nsKey(key)

	return viper.IsSet(fullKey)
}

func ConfigNS(ns string) Config {
	return &config{ns}
}

var FlyConfig Config = ConfigNS(NSRoot)
```

```go
package main

import (
        "fmt"
)

func solution(n int, a []int) int {
        c := 0
        for i := range a {
                if i+1 > a[i] && a[a[i]-1] == i+1 {
                        c++
                }
        }
        return c
}

func main() {
        var n int
        fmt.Scan(&n)
        a := make([]int, n)
        for i := range a {
                fmt.Scan(&a[i])
        }
        fmt.Println(solution(n, a))
}
```

```go
package main

import (
	"fmt"
)

func main() {
	suffix := "FESTIVAL"
	var s string
	fmt.Scan(&s)
	fmt.Println(s[:len(s)-len(suffix)])
}
```

```go
"github.com/modernice/goes/codec"
	"github.com/modernice/nice-cms/media/document"
	"github.com/modernice/nice-cms/media/image/gallery"
	"github.com/modernice/nice-cms/static/nav"
)

// NewRegistry returns a new event registry with all events registered.
func NewRegistry() *codec.GobRegistry {
	r := codec.Gob(codec.New())
	Register(r)
	return r
}

// Register registers all events into the event registry.
func Register(r *codec.GobRegistry) {
	nav.RegisterEvents(r)
	document.RegisterEvents(r)
	gallery.RegisterEvents(r)
}
```

```go
package yaml2

// Copyright (c) 2018 Bhojpur Consulting Private Limited, India. All rights reserved.

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

const (
	N_Map = iota
	N_List
	N_String
)

type Node interface {
	Type() int
}

type MapNode map[string]interface{}

type ListNode []interface{}

type StringNode string

func (m *MapNode) Type() int {
	return N_Map
}

func (l *ListNode) Type() int {
	return N_List
}

func (s *StringNode) Type() int {
	return N_String
}
```

```go
package main

import (
	"fmt"
)

func main() {
	var N int
	fmt.Scan(&N)

	var K int
	fmt.Scan(&K)

	X := make([]int, N)
	for i := 0; i < N; i++ {
		var x int
		fmt.Scan(&x)

		X[i] = x
	}

	values := make([]int, 0)
	for i := 0; i < N-1; i++ {
		for j := i + 1; j < N; j++ {
			val := X[i] * X[j]
			values = append(values, val)
		}
	}

	fmt.Println(values[K-1])
}
```

```go
package router

import (
	"net/http"

	"github.com/frodonLD/GoLangRESTAPIWithMux/handler"
	"github.com/gorilla/mux"
)
```

```go
package main

import "fmt"
import "david/util"
import "flag"

func main() {

	var isClient bool
	var isServer bool
	var port int
	var proxy string
	var server string

	flag.BoolVar(&isClient, "c", false, "client side")
	flag.BoolVar(&isServer, "s", false, "server side")

	flag.StringVar(&proxy, "proxy", "", "proxy server")
	flag.StringVar(&server, "server", "", "remote server side ip:port")
	flag.IntVar(&port, "port", 9898, "listening port")
	flag.Parse()

	if isClient {
		if server == "" {
			util.ColorPrinter.Red("[%s]: Not Enough Params\n", util.NowTime())
			usage()
			return
		}
		StartClient(port, server, proxy)
	} else if isServer {
		StartServer(port)
	} else {
		usage()
	}

}

func usage() {
	fmt.Println("#start as client side")
	fmt.Println("c.exe -c -server ip:port [-port 9898] [-proxy ip:port]")
	fmt.Println("")
	fmt.Println("#start as server side")
	fmt.Println("c.exe -s [-port 9898]")
}
```

```go
package buildtest

import (
	"math"
	"testing"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"

	"gitlab.com/gitlab-org/gitlab-runner/common"
	"gitlab.com/gitlab-org/gitlab-runner/helpers/trace"
)

func RunBuildWithMasking(t *testing.T, config *common.RunnerConfig, setup buildSetupFn) {
	resp, err := common.GetRemoteSuccessfulBuildWithEnvs(config.Shell, false)
	require.NoError(t, err)

	build := &common.Build{
		JobResponse: resp,
		Runner:      config,
	}

	build.Variables = append(
		build.Variables,
		common.JobVariable{Key: "MASKED_KEY", Value: "MASKED_VALUE", Masked: true},
		common.JobVariable{Key: "CLEARTEXT_KEY", Value: "CLEARTEXT_VALUE", Masked: false},
	)

	if setup != nil {
		setup(build)
	}

	buf, err := trace.New()
	require.NoError(t, err)
	defer buf.Close()

	err = build.Run(&common.Config{}, &common.Trace{Writer: buf})
	assert.NoError(t, err)

	buf.Finish()

	contents, err := buf.Bytes(0, math.MaxInt64)
	assert.NoError(t, err)

	assert.NotContains(t, string(contents), "MASKED_KEY=MASKED_VALUE")
	assert.Contains(t, string(contents), "MASKED_KEY=[MASKED]")

	assert.NotContains(t, string(contents), "CLEARTEXT_KEY=[MASKED]")
	assert.Contains(t, string(contents), "CLEARTEXT_KEY=CLEARTEXT_VALUE")
}
```

```go
package main

import (
	"bufio"
	"fmt"
	"os"
	"strconv"
)

var sc = bufio.NewScanner(os.Stdin)

func init() {
	sc.Split(bufio.ScanWords)
	sc.Buffer(make([]byte, 1024*1024), bufio.MaxScanTokenSize)
}

func nextString() string {
	sc.Scan()
	return sc.Text()
}

func nextFloat() float64 {
	sc.Scan()
	f, e := strconv.ParseFloat(sc.Text(), 64)
	if e != nil {
		panic(e)
	}
	return f
}

func nextInt() int {
	sc.Scan()
	i, e := strconv.Atoi(sc.Text())
	if e != nil {
		panic(e)
	}
	return i
}

func readInts(n int) []int {
	result := make([]int, n)
	for i := 0; i < n; i++ {
		result[i] = nextInt()
	}
	return result
}

func main() {
	N := nextInt()
	S := readInts(N)
	var ANS int
	for i := 1; i < N; i++ {
		if S[i-1] > S[i] {
			n := S[i-1] - S[i]
			ANS += n
			S[i] += n
		}
	}
	fmt.Println(ANS)
}
```

```go
/*
Copyright 2022 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package externalgrpc

import (
	"context"
	"sync"

	apiv1 "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/autoscaler/cluster-autoscaler/cloudprovider"
	"k8s.io/autoscaler/cluster-autoscaler/cloudprovider/externalgrpc/protos"
	"k8s.io/autoscaler/cluster-autoscaler/config"
	klog "k8s.io/klog/v2"
	schedulerframework "k8s.io/kubernetes/pkg/scheduler/framework"
)

// NodeGroup implements cloudprovider.NodeGroup interface. NodeGroup contains
// configuration info and functions to control a set of nodes that have the
// same capacity and set of labels.
//
type NodeGroup struct {
	id      string // this must be a stable identifier
	minSize int    // cached value
	maxSize int    // cached value
	debug   string // cached value
	client  protos.CloudProviderClient

	mutex    sync.Mutex
	nodeInfo **schedulerframework.NodeInfo // used to cache NodeGroupTemplateNodeInfo() grpc calls
}

// MaxSize returns maximum size of the node group.
func (n *NodeGroup) MaxSize() int {
	return n.maxSize
}

// MinSize returns minimum size of the node group.
func (n *NodeGroup) MinSize() int {
	return n.minSize
}

// TargetSize returns the current target size of the node group. It is possible
// that the number of nodes in Kubernetes is different at the moment but should
// be equal to Size() once everything stabilizes (new nodes finish startup and
// registration or removed nodes are deleted completely). Implementation
```

```go
package cmd

import (
	"context"
	"encoding/json"

	"github.com/spf13/cobra"
)

const (
	folderWriteArgs    = 1
	folderWriteUse     = "write <folder>"
	folderWriteShort   = "write a folder of secrets. WARNING: command expects a very specific json input"
	folderWriteLong    = "write a folder of secrets. WARNING: command expects a very specific json input"
	folderWriteExample = "vaku folder write '{\"a/b/c\": {\"foo\": \"bar\"}}'"
)

func (c *cli) newFolderWriteCmd() *cobra.Command {
	cmd := &cobra.Command{
		Use:     folderWriteUse,
		Short:   folderWriteShort,
		Long:    folderWriteLong,
		Example: folderWriteExample,

		Args: cobra.ExactArgs(folderWriteArgs),

		RunE: c.runfolderWrite,
	}

	return cmd
}

func (c *cli) runfolderWrite(cmd *cobra.Command, args []string) error {
	var input map[string]map[string]any
	err := json.Unmarshal([]byte(args[0]), &input)
	if err != nil {
		return c.combineErr(errJSONUnmarshal, err)
	}

	return c.vc.FolderWrite(context.Background(), input)
}
```

```go
package main

import (
	"fmt"
)

func main() {
	var s, t string
	fmt.Scan(&s)
	fmt.Scan(&t)
	ans := 0
	for i := 0; i < 3; i++ {
		if s[i] == t[i] {
			ans++
		}
	}
	fmt.Println(ans)
}
```

```go
package main

import(
	"fmt"
)

func main() {
	var s string
	fmt.Scan(&s)
	cnt := 1
	for i := 0; i < 2; i++ {
		if s[i] == 'R' && s[i+1] == 'R'{
			cnt++
		}
	}
	if s == "SSS"{
		fmt.Println(0)
	}else{
		fmt.Println(cnt)
	}
}
```

```go
/*
Copyright 2019 The OpenEBS Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package poffline

import (
	"fmt"
	"os/exec"
	"reflect"
	"runtime"
	"strings"

	"github.com/openebs/cstor-operators/pkg/zcmd/bin"
	"github.com/pkg/errors"
)

const (
	// Operation defines type of zfs operation
	Operation = "offline"
)

//PoolOffline defines structure for pool 'Offline' operation
type PoolOffline struct {
	// force fault
	ForceOffline bool

	// offline temporary
	isTemporary bool

	// pool name
	Pool string

	//list of offline devices
	Devicelist []string

	// command string
	Command string

	// checks is list of predicate function used for validating object
	checks []PredicateFunc

	// Executor is to execute the commands
	Executor bin.Executor

	// error
	err error
}

// NewPoolOffline returns new instance of object PoolOffline
func NewPoolOffline() *PoolOffline {
	return &PoolOffline{}
}

// WithCheck add given check to checks list
func (p *PoolOffline) WithCheck(check ...PredicateFunc) *PoolOffline {
	p.checks = append(p.checks, check...)
	return p
}

// WithForceOffline method fills the ForceOffline field of PoolOffline object.
func (p *PoolOffline) WithForceOffline(ForceOffline bool) *PoolOffline {
	p.ForceOffline = ForceOffline
	return p
}

// WithisTemporary method fills the isTemporary field of PoolOffline object.
```

```kotlin
fun classDelegationTest() {
        val person = PersonImpl("Mario Arias")
        person.printName()
        println()
        val user = User(person)
        user.printName()
    }
}
```

```kotlin
fun main(args: Array<String>) {
    val (n,m)=readLine()!!.split(" ").map { it.toInt() }
    val es = (1..n).map{readLine()!!.split(" ").map{ it.toInt()-1 }}
    val a=Array<MutableList<Int>>(n,{ mutableListOf<Int>()})
    es.forEach {
        a[it[0]].add(it[1])
        a[it[1]].add(it[0])
    }

    var visit=BooleanArray(n)
    println(dfs(0,a,visit))
}

fun dfs(v:Int, a:Array<MutableList<Int>>, visit:BooleanArray):Int{
//    println("dfs$v")
    visit[v]=true
    if(visit.all{it==true}) return 1
    var count=0
    a[v].filter { !visit[it] }.forEach {
        count+=dfs(it,a,visit)
    }
    visit[v]=false
    return count
}
```

```kotlin
/* @generated
 *
 * This file is part of the FontAwesome Kotlin library.
 * https://github.com/msrd0/fontawesome-kt
 *
 * This library is not affiliated with FontAwesome. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package de.msrd0.fontawesome.icons

import de.msrd0.fontawesome.Icon
import de.msrd0.fontawesome.Style
import de.msrd0.fontawesome.Style.SOLID

object FA_SKIING: Icon {
	
	override val name get() = "Skiing"
	
	override val unicode get() = "f7c9"
	
	override val styles get() = setOf(SOLID)
	
	override fun svg(style: Style) = when(style) {
		SOLID -> """<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path d="M432 96c26.5 0 48-21.5 48-48S458.5 0 432 0s-48 21.5-48 48 21.5 48 48 48zm73 356.1c-9.4-9.4-24.6-9.4-33.9 0-12.1 12.1-30.5 15.4-45.1 8.7l-135.8-70.2 49.2-73.8c12.7-19 10.2-44.5-6-60.6L293 215.7l-107-53.1c-2.9 19.9 3.4 40 17.7 54.4l75.1 75.2-45.9 68.8L35 258.7c-11.7-6-26.2-1.5-32.3 10.3-6.1 11.8-1.5 26.3 10.3 32.3l391.9 202.5c11.9 5.5 24.5 8.1 37.1 8.1 23.2 0 46-9 63-26 9.3-9.3 9.3-24.5 0-33.8zM120 91.6l-11.5 22.5c14.4 7.3 31.2 4.9 42.8-4.8l47.2 23.4c-.1.1-.1.2-.2.3l114.5 56.8 32.4-13 6.4 19.1c4 12.1 12.6 22 24 27.7l58.1 29c15.9 7.9 35 1.5 42.9-14.3 7.9-15.8 1.5-35-14.3-42.9l-52.1-26.1-17.1-51.2c-8.1-24.2-40.9-56.6-84.5-39.2l-81.2 32.5-62.5-31c.3-14.5-7.2-28.6-20.9-35.6l-11.1 21.7h-.2l-34.4-7c-1.8-.4-3.7.2-5 1.7-1.9 2.2-1.7 5.5.5 7.4l26.2 23z"/></svg>"""
		else -> null
	}
	
}
```

```kotlin
fun main(args: Array<String>) {
    val (A, B) = readInputLine().split(" ").map { it.toInt() }
    val Amin = (A * 100 + 7) / 8
    val Amax = 100 * (A + 1) / 8
    val Bmin = B * 10
    val Bmax = (B + 1) * 10

    if (Amin in Bmin until Bmax) {
        println(Amin)
        return
    }
    if (Bmin in Amin until Amax) {
        println(Bmin)
        return
    }
    println(-1)
}

fun readInputLine(): String {
    return readLine()!!
}
```

```kotlin
package exh.metadata.metadata

import eu.kanade.tachiyomi.source.model.SManga
import exh.metadata.EX_DATE_FORMAT
import exh.metadata.metadata.base.RaisedSearchMetadata
import exh.plusAssign
import java.util.Date

class HitomiSearchMetadata : RaisedSearchMetadata() {
    var url get() = hlId?.let { urlFromHlId(it) }
        set(a) {
            a?.let {
                hlId = hlIdFromUrl(a)
            }
        }

    var hlId: String? = null

    var title by titleDelegate(TITLE_TYPE_MAIN)

    var thumbnailUrl: String? = null

    var artists: List<String> = emptyList()

    var group: String? = null

    var type: String? = null

    var language: String? = null

    var series: List<String> = emptyList()

    var characters: List<String> = emptyList()

    var uploadDate: Long? = null

    override fun copyTo(manga: SManga) {
        thumbnailUrl?.let { manga.thumbnail_url = it }

        val titleDesc = StringBuilder()

        title?.let {
            manga.title = it
            titleDesc += "Title: $it\n"
        }

        val detailsDesc = StringBuilder()

        manga.artist = artists.joinToString()

        detailsDesc += "Artist(s): ${manga.artist}\n"

        group?.let {
            detailsDesc += "Group: $it\n"
        }

        type?.let {
            detailsDesc += "Type: ${it.capitalize()}\n"
        }

        (language ?: "unknown").let {
            detailsDesc += "Language: ${it.capitalize()}\n"
        }

        if (series.isNotEmpty()) {
            detailsDesc += "Series: ${series.joinToString()}\n"
        }

        if (characters.isNotEmpty()) {
            detailsDesc += "Characters: ${characters.joinToString()}\n"
        }

        uploadDate?.let {
            detailsDesc += "Upload date: ${EX_DATE_FORMAT.format(Date(it))}\n"
        }

        manga.status = SManga.UNKNOWN

        // Copy tags -> genres
        manga.genre = tagsToGenreString()

        val tagsDesc = tagsToDescription()

        manga.description = listOf(titleDesc.toString(), detailsDesc.toString(), tagsDesc.toString())
            .filter(String::isNotBlank)
            .joinToString(separator = "\n")
    }

    companion object {
        private const val TITLE_TYPE_MAIN = 0

        const val TAG_TYPE_DEFAULT = 0

        const val LTN_BASE_URL = "https://ltn.hitomi.la"
        const val BASE_URL = "https://hitomi.la"

        fun hlIdFromUrl(url: String) =
            url.split('/').last().split('-').last().substringBeforeLast('.')

        fun urlFromHlId(id: String) =
            "$BASE_URL/galleries/$id.html"
    }
}
```

```kotlin
import com.duckduckgo.app.httpsupgrade.model.HttpsWhitelistedDomain
import com.squareup.moshi.FromJson

class HttpsWhitelistJsonAdapter {

    @FromJson
    fun adapt(data: Map<String, List<String>>): List<HttpsWhitelistedDomain> {
        return data.getValue("data").map { HttpsWhitelistedDomain(it) }
    }

}
```

```kotlin
package com.cryptoeconomicslab.show_case

import androidx.test.InstrumentationRegistry
import androidx.test.runner.AndroidJUnit4

import org.junit.Test
import org.junit.runner.RunWith

import org.junit.Assert.*

/**
 * Instrumented test, which will execute on an Android device.
 *
 * See [testing documentation](http://d.android.com/tools/testing).
 */
@RunWith(AndroidJUnit4::class)
class ExampleInstrumentedTest {
    @Test
    fun useAppContext() {
        // Context of the app under test.
        val appContext = InstrumentationRegistry.getTargetContext()
```

```kotlin
package pw.binom

import kotlin.jvm.JvmInline

/**
 * Implements bitset based on [Int]. Index 0 is the most left bit. For example: index 30 in value 0b010 is 1, index 31 and 29 is 0
 *
 * Example:
 * ```
 * var data = Bitset32()
 * assertFalse(data[0])
 * assertFalse(data[1])
 * data = data.set(0,true)
 * assertTrue(data[0])
 * assertFalse(data[1])
 * ```
 */
@JvmInline
value class Bitset32(val value: Int = 0) {
    operator fun get(index: Int): Boolean = value and (1 shl (31 - index)) != 0
    fun set(index: Int, value: Boolean) =
        Bitset32(
            if (value)
                (this.value or (1 shl (31 - index)))
            else
                (this.value.inv() or (1 shl 31 - index)).inv()
        )

    fun toInt() = value
    fun toUInt() = toInt().toUInt()

    /**
     * Returns byte from 4 bites using [index]
     *
     * @param index Offset for getting byte
     */
    fun getByte4(index: Int) = ((value ushr (32 - 4 - index)) and 0xF).toByte()

    /**
     * Sets 4 bits [value] to [Bitset32.value] using offset [index]. [value] must be less or equals 0xF
     *
     * Example:
     * ```
     * val set = Bitset32(0b100000) // 10 + 0000
     * set = set.setByte4(4, 0b1011)
     * println(set.toString(2)) // will print "101011". 10 + 1011
     * ```
     *
     * @param index offset for set data
     * @param value new value
     */
    fun setByte4(index: Int, value: Byte): Bitset32 {
        require(value <= 0xF)
        val leftPart = (this.value ushr (31 - index)) shl (31 - index)
        val rightPart = (this.value shl (index + 4)) ushr (index + 4)
        val valueInt = (value.toInt() and 0xF) shl (32 - 4 - index)
        return Bitset32(leftPart or valueInt or rightPart)
    }

    /**
     * Returns byte from 8 bites using [offset]
     *
     * Example:
     * ```
```

```kotlin
package com.android.firestorerecyclerviewsample.ui.adapters

import androidx.fragment.app.Fragment
import androidx.fragment.app.FragmentActivity
import androidx.viewpager2.adapter.FragmentStateAdapter
import com.android.firestorerecyclerviewsample.ui.fragments.FirestoreRecyclerViewFragment
import com.android.firestorerecyclerviewsample.ui.fragments.FirestoreRecyclerViewPagingFragment

class PagerAdapter(private val numOfPages: Int, fa: FragmentActivity) : FragmentStateAdapter(fa) {
    override fun getItemCount(): Int = numOfPages

    override fun createFragment(position: Int): Fragment = when (position) {
        0 -> FirestoreRecyclerViewFragment.newInstance()
        1 -> FirestoreRecyclerViewPagingFragment.newInstance()
        else -> Fragment()
    }
}
```

```kotlin
fun main() {
    val (a, b) = readLongs()
    val gcd = gcd(a, b)

    val primeFactors = primeFactors(gcd)
    println(primeFactors.size + 1)
}

fun factorise(nn: Long): List<Long> {
    val factors = mutableListOf<Long>()
    var x = 2L
    var n = nn
    while (x * x <= n) {
        while (n % x == 0L) {
            factors.add(x)
            n /= x
        }
        x++
    }
    if (n > 1) factors.add(n)
    return factors
}

fun primeFactors(n: Long): Map<Long, Int> {
    val factors = factorise(n)
    val occurrences = mutableMapOf<Long, Int>()
    factors.forEach { factor -> occurrences[factor] = occurrences[factor]?.plus(1) ?: 1 }
    return occurrences
}

fun gcd(a: Long, b: Long): Long {
    if (b == 0L) return a
    return gcd(b, a % b)
}

// Input Reader
private fun readLn() = readLine()!!

private fun readStrings() = readLn().trim().split(" ")
private fun readLongs() = readStrings().map { it.toLong() }
```

```kotlin
package org.jetbrains.kotlin.fir.analysis.checkers.expression

import org.jetbrains.kotlin.KtFakeSourceElementKind
import org.jetbrains.kotlin.fir.analysis.checkers.context.CheckerContext
import org.jetbrains.kotlin.diagnostics.DiagnosticReporter
import org.jetbrains.kotlin.fir.expressions.FirQualifiedAccess
import org.jetbrains.kotlin.fir.expressions.FirVariableAssignment
import org.jetbrains.kotlin.fir.expressions.impl.FirNoReceiverExpression
import org.jetbrains.kotlin.fir.references.FirResolvedNamedReference
import org.jetbrains.kotlin.fir.resolve.fullyExpandedType
import org.jetbrains.kotlin.fir.symbols.impl.FirPropertySymbol
import org.jetbrains.kotlin.fir.types.coneType

object FirOptInUsageAccessChecker : FirQualifiedAccessChecker() {
    override fun check(expression: FirQualifiedAccess, context: CheckerContext, reporter: DiagnosticReporter) {
        val sourceKind = expression.source?.kind
        if (sourceKind is KtFakeSourceElementKind.DataClassGeneratedMembers ||
            sourceKind is KtFakeSourceElementKind.PropertyFromParameter
        ) return
        val reference = expression.calleeReference as? FirResolvedNamedReference ?: return
        val resolvedSymbol = reference.resolvedSymbol
        val dispatchReceiverType =
            expression.dispatchReceiver.takeIf { it !is FirNoReceiverExpression }?.typeRef?.coneType?.fullyExpandedType(context.session)
        with(FirOptInUsageBaseChecker) {
            if (expression is FirVariableAssignment && resolvedSymbol is FirPropertySymbol) {
                val experimentalities = resolvedSymbol.loadExperimentalities(context, fromSetter = true, dispatchReceiverType) +
                        loadExperimentalitiesFromTypeArguments(context, expression.typeArguments)
                reportNotAcceptedExperimentalities(experimentalities, expression.lValue, context, reporter)
                return
            }
            val experimentalities = resolvedSymbol.loadExperimentalities(context, fromSetter = false, dispatchReceiverType) +
                    loadExperimentalitiesFromTypeArguments(context, expression.typeArguments)
            reportNotAcceptedExperimentalities(experimentalities, expression, context, reporter)
        }
    }
}
```

```kotlin
/*
 * Copyright 2020 The Matrix.org Foundation C.I.C.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.matrix.android.sdk.internal.session.room.timeline

import org.matrix.android.sdk.api.session.crypto.CryptoService
import org.matrix.android.sdk.api.session.crypto.MXCryptoError
import org.matrix.android.sdk.api.session.events.model.toModel
import org.matrix.android.sdk.internal.crypto.NewSessionListener
```

```kotlin
class DynamicInterior(
        perspective: ImagePerspective.PerspectiveInterior,
        imageType: VehicleImageType,
        crop: ImageManipulation = ImageManipulation.None
    ) : ImageKey(perspective, imageType, crop)

    class TopView(
        vehiclePart: String,
        width: Int,
        height: Int
    ) : ImageKey(ImagePerspective.PerspectiveTop(), VehicleImageType.DynamicPng("_${width}_$height"), ImageManipulation.None, vehiclePart)

    override fun toString(): String {
        return "ImageKey(key=$key)"
    }

    private fun createImageKey(imagePerspective: ImagePerspective, imageType: VehicleImageType, manipulation: ImageManipulation, specificName: String?) =
        StringBuilder().apply {
            append(PROVIDER_PREFIX)
            append(imagePerspective.value)

            append(SEPARATOR)
            append(imageType.type)
            append(imageType.size)

            manipulation.keySuffix?.let {
                append(SEPARATOR)
                append(it)
            }

            specificName?.let {
                append(SEPARATOR)
                append(it)
            }
        }.toString()
}
```

```kotlin
* Depending on the implementation, may immediately perform a volatile write.
     * @param index the index of the element to set
     * @param value the value to set the element to
     * @throws NoSuchElementException if the index is out of bounds
     */
    fun lazySet(index: Long, value: E)
    /** Returns an iterator to the first element of this array which supports volatile and atomic operations. */
    override operator fun iterator(): AtomicArray64Iterator<E>
    /**
     * Returns an iterator to the element at the given [index] which supports volatile and atomic operations.
     * @throws IllegalArgumentException if an invalid index is provided
     */
    override fun iterator(index: Long): AtomicArray64Iterator<E>
}

/** Marker interface for AtomicArray64s of unboxed primitive Booleans. */
interface AtomicBooleanArray64 : AtomicArray64<Boolean> {
    override operator fun get(index: Long): Boolean
    override operator fun set(index: Long, value: Boolean)
    override fun getAndSet(index: Long, new: Boolean): Boolean
    override fun getAndSet(index: Long, transform: (Boolean) -> Boolean): Boolean
```

```kotlin
package character.races.abilities

import character.Ability
import character.Buff
import character.Resource
import character.Stats
import character.races.Troll
import mechanics.Rating
import sim.SimParticipant

class Berserking : Ability() {
    override val id: Int = 26297
    override val name: String = "Berserking"

    override fun cooldownMs(sp: SimParticipant): Int = 180000
    // According to the internet, this was moved off of GCD in 3.0.3
    override fun gcdMs(sp: SimParticipant): Int = sp.physicalGcd().toInt()

    override fun resourceType(sp: SimParticipant): Resource.Type {
        if(sp.resources.containsKey(Resource.Type.MANA)) return Resource.Type.MANA
        if(sp.resources.containsKey(Resource.Type.ENERGY)) return Resource.Type.ENERGY
```

```kotlin
// !LANGUAGE: +InlineClasses

class BoxT<T>(val boxed: T)
class BoxAny(val boxed: Any?)
class BoxFoo(val boxed: IFoo?)

interface IFoo

inline class Str(val value: String) : IFoo

inline class Str2(val value: Str): IFoo

inline class StrArr(val value: Array<String>): IFoo

fun boxToTypeParameter(x: Str?) = BoxT(x)
fun boxToNullableAny(x: Str?) = BoxAny(x)
fun boxToNullableInterface(x: Str?) = BoxFoo(x)

fun box2ToTypeParameter(x: Str2?) = BoxT(x)
fun box2ToNullableAny(x: Str2?) = BoxAny(x)
fun box2ToNullableInterface(x: Str2?) = BoxFoo(x)

fun boxArrToTypeParameter(x: StrArr?) = BoxT(x)
fun boxArrToNullableAny(x: StrArr?) = BoxAny(x)
fun boxArrToNullableInterface(x: StrArr?) = BoxFoo(x)

fun box(): String {
    if (boxToNullableAny(null).boxed != null) throw AssertionError()
    if (boxToTypeParameter(null).boxed != null) throw AssertionError()
    if (boxToNullableInterface(null).boxed != null) throw AssertionError()

    if (box2ToNullableAny(null).boxed != null) throw AssertionError()
    if (box2ToTypeParameter(null).boxed != null) throw AssertionError()
    if (box2ToNullableInterface(null).boxed != null) throw AssertionError()

    if (boxArrToNullableAny(null).boxed != null) throw AssertionError()
    if (boxArrToTypeParameter(null).boxed != null) throw AssertionError()
    if (boxArrToNullableInterface(null).boxed != null) throw AssertionError()

    return "OK"
}
```

```kotlin
package com.beust.kobalt.app.remote

import java.io.IOException
import java.net.Socket

class ProcessUtil {
    companion object {
        fun findAvailablePort(port: Int = 1234) = (port .. 65000).firstOrNull { isPortAvailable(it) }
                ?: throw IllegalArgumentException("Couldn't find any port available, something is very wrong")

        private fun isPortAvailable(port: Int): Boolean {
            var s: Socket? = null
            try {
                s = Socket("localhost", port)
                return false
            } catch(ex: IOException) {
                return true
            } finally {
                s?.close()
            }
        }
    }
}
```

```kotlin
package org.raddad.main


enum class Accessibility {
    OPEN, ISOLATED, LOCAL
}
```

```kotlin
package org.kentunc.bittrader.candle.api.infrastructure.repository.entity

import org.kentunc.bittrader.common.domain.model.candle.CandleId
import org.kentunc.bittrader.common.domain.model.market.ProductCode
import org.kentunc.bittrader.common.domain.model.time.Duration
import java.time.LocalDateTime

data class CandlePrimaryKey(
    val productCode: ProductCode,
    val duration: Duration,
    val dateTime: LocalDateTime
) {

    companion object {
```

```kotlin
import java.util.*
fun main(args: Array<String>) {
    val reader = Scanner(System.`in`)

    val S = reader.next()
    val T = reader.next()
    var matchMax = 0

    var checkIndex = 0
    while(checkIndex <= S.length - T.length){
        var curMatch = 0
        for(count in checkIndex..checkIndex + T.length - 1){
            if(T[count] == S[count]){
                curMatch++
            }
        }
        if(curMatch > matchMax){
            matchMax = curMatch
        }
        checkIndex += T.length
    }
    println(T.length - matchMax)
}
```

```kotlin
package br.com.digao1297.jokerapp.data.httpClient

import okhttp3.OkHttpClient
import okhttp3.logging.HttpLoggingInterceptor
import retrofit2.Retrofit
import retrofit2.converter.gson.GsonConverterFactory
import retrofit2.converter.scalars.ScalarsConverterFactory

object HTTPClient {

    private const val BASE_URL = "https://api.tiagoaguiar.co/"


    private fun httpClient(): OkHttpClient {

        val logging = HttpLoggingInterceptor()
        logging.level = HttpLoggingInterceptor.Level.BODY

        return OkHttpClient.Builder()
            .addInterceptor(logging)
            .addInterceptor(ApiKeyInterceptor())
            .build()

    }

    fun retrofit(): Retrofit = Retrofit.Builder()
        .baseUrl(BASE_URL)
        .addConverterFactory(ScalarsConverterFactory.create())
        .addConverterFactory(GsonConverterFactory.create())
        .client(httpClient())
        .build()
}
```

```kotlin
package droiddevelopers254.droidconke.ui.venuemap

import android.Manifest
import android.annotation.SuppressLint
import android.app.Activity
import android.content.Context
import android.content.Intent
import android.content.IntentSender
import android.content.SharedPreferences
import android.content.pm.PackageManager
import android.location.Location
import android.net.Uri
import android.os.Build
import android.os.Bundle
import android.os.Looper
import android.provider.Settings
import android.util.Log
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.Toast
import androidx.appcompat.app.AlertDialog
import androidx.appcompat.app.AppCompatActivity
import androidx.core.app.ActivityCompat
import androidx.fragment.app.Fragment
import com.google.android.gms.common.api.ApiException
import com.google.android.gms.common.api.ResolvableApiException
import com.google.android.gms.location.*
import com.google.android.gms.maps.CameraUpdateFactory
import com.google.android.gms.maps.GoogleMap
import com.google.android.gms.maps.OnMapReadyCallback
import com.google.android.gms.maps.SupportMapFragment
import com.google.android.gms.maps.model.CameraPosition
import com.google.android.gms.maps.model.LatLng
import com.google.android.gms.maps.model.Marker
import com.google.android.gms.maps.model.MarkerOptions
import com.google.android.material.bottomsheet.BottomSheetBehavior
import droiddevelopers254.droidconke.R
import droiddevelopers254.droidconke.utils.SharedPref.PREF_NAME
import kotlinx.android.synthetic.main.map_bottom_sheet.view.*

class MapFragment : Fragment(), OnMapReadyCallback {
  private val senteuPlaza = LatLng(-1.289256, 36.783180)
  private var mMap: GoogleMap? = null
  private var senteuMarker: Marker? = null
  private var bottomSheetBehavior: BottomSheetBehavior<*>? = null
  private val mLastKnownLocation: Location? = null
  private var mCameraPosition: CameraPosition? = null
  lateinit var mLocationRequest: LocationRequest
  private var currentLatLng: LatLng? = null
  private var mFusedLocationProviderClient: FusedLocationProviderClient? = null
  private var permissionsRequired = arrayOf(Manifest.permission.ACCESS_FINE_LOCATION)
  private var sentToSettings = false
  lateinit var sharedPreferences: SharedPreferences

  private var mLocationCallback: LocationCallback = object : LocationCallback() {
    override fun onLocationResult(locationResult: LocationResult) {
      locationResult.locations.forEach { location ->
        Log.i("MapsActivity", "Location: " + location.latitude + " " + location.longitude)
        currentLatLng = LatLng(location.latitude, location.longitude)
      }
    }

  }

  @SuppressLint("MissingPermission")
```

```kotlin
@get:Internal
    val publishRuntime by project.configurations.creating

    init {
        // Subprojects assign dependencies to publishCompile to indicate that they should be part of the published pom.
        // Therefore implementation needs to contain those dependencies and extend publishImplementation
        project.configurations.getByName("implementation") {
            extendsFrom(publishImplementation)
        }
        // Never up to date; we don't understand the data structures.
        outputs.upToDateWhen(Specs.satisfyNone<Task>())
    }

    @TaskAction
    fun generatePom(): Unit = project.run {
        addDependenciesToPublishConfigurations()
        val install by tasks.getting(Upload::class)
        install.repositories {
            withConvention(MavenRepositoryHandlerConvention::class) {
                mavenInstaller {
                    pom {
                        scopeMappings.mappings.clear()
                        scopeMappings.addMapping(300, publishRuntime, Conf2ScopeMappingContainer.RUNTIME)
                        groupId = project.group.toString()
                        artifactId = base.archivesBaseName
                        version = project.version.toString()
                        writeTo(pomFile)
                    }
                }
            }
        }
    }

    private
    fun Project.addDependenciesToPublishConfigurations() {
        dependencies {
            publishImplementation.allDependencies.withType<ProjectDependency>().forEach {
                publishRuntime("org.gradle:${it.dependencyProject.base.archivesBaseName}:$version")
            }
            publishImplementation.allDependencies.withType<ExternalDependency>().forEach {
                publishRuntime(it)
            }
        }
    }
}
```

```kotlin
/**
 * Copyright 2020 The Tari Project
 *
 * Redistribution and use in source and binary forms, with or
 * without modification, are permitted provided that the
 * following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice,
 * this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above
 * copyright notice, this list of conditions and the following disclaimer in the
 * documentation and/or other materials provided with the distribution.
 *
 * 3. Neither the name of the copyright holder nor the names of
 * its contributors may be used to endorse or promote products
 * derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
 * CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
 * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package com.tari.android.wallet.ui.util

import android.app.Activity
import android.content.ContentResolver
import android.content.Context
import android.net.Uri
import android.os.Handler
import android.view.View
import android.view.ViewGroup
import android.view.inputmethod.InputMethodManager
import android.widget.ProgressBar
import androidx.annotation.NonNull
import androidx.core.graphics.BlendModeColorFilterCompat
import androidx.core.graphics.BlendModeCompat
import java.lang.ref.WeakReference

/**
 * Contains UI utility functions.
 *
 * @author The Tari Development Team
 */
internal object UiUtil {

    // enabled view clickability after a disable
    private val clickEnablingHandler = Handler()

    fun setWidth(
        @NonNull view: View,
        @NonNull newWidth: Int
    ) {
        if (view.layoutParams is ViewGroup.MarginLayoutParams) {
            val layoutParams = view.layoutParams as ViewGroup.MarginLayoutParams
            layoutParams.width = newWidth
            view.layoutParams = layoutParams
        }
    }

    fun setHeight(
        @NonNull view: View,
        @NonNull newHeight: Int
    ) {
        if (view.layoutParams is ViewGroup.MarginLayoutParams) {
            val layoutParams = view.layoutParams as ViewGroup.MarginLayoutParams
            layoutParams.height = newHeight
            view.layoutParams = layoutParams
        }
    }

    fun getHeight(
        @NonNull view: View
    ): Int {
        val layoutParams = view.layoutParams as ViewGroup.MarginLayoutParams
        return layoutParams.height
    }
```

```kotlin
private var sourceFiles: List<SourceFile> = emptyList()
        private var dependencies: List<Module> = emptyList()


        @ModuleBuilderDsl
        fun source(@Language("kotlin") content: String, name: String = "test.kt") {
            sourceFiles = sourceFiles + SourceFile(name, content)
        }

        @ModuleBuilderDsl
        fun dependency(builder: ModuleBuilder.() -> Unit) {
            dependency(ModuleBuilder().also(builder).build())
        }

        @ModuleBuilderDsl
        fun dependency(module: Module) {
            this.dependencies += module.copy(name = "${this.name}-dependency-${module.name}-${dependencies.size}")
        }

        fun build(): Module = Module(name, sourceFiles.toList(), dependencies.toList())
    }

    fun createModule(builder: ModuleBuilder.() -> Unit): Module {
        return ModuleBuilder().also(builder).build()
    }

    fun createCirTreeFromSourceCode(@Language("kotlin") sourceCode: String): CirTreeModule {
        return createCirTree {
            source(content = sourceCode, "test.kt")
        }
    }


    fun createCirTree(module: Module): CirTreeModule

    fun createModuleDescriptor(module: Module): ModuleDescriptor

    fun createMetadata(module: Module): SerializedMetadata = createModuleDescriptor(module).toMetadata()
}


@InlineSourceBuilder.ModuleBuilderDsl
fun InlineSourceBuilder.createCirTree(builder: InlineSourceBuilder.ModuleBuilder.() -> Unit): CirTreeModule {
    return createCirTree(createModule(builder))
}

@InlineSourceBuilder.ModuleBuilderDsl
fun InlineSourceBuilder.createModuleDescriptor(builder: InlineSourceBuilder.ModuleBuilder.() -> Unit): ModuleDescriptor {
    return createModuleDescriptor(createModule(builder))
}

@InlineSourceBuilder.ModuleBuilderDsl
fun InlineSourceBuilder.createMetadata(builder: InlineSourceBuilder.ModuleBuilder.() -> Unit): SerializedMetadata {
    return createMetadata(createModule(builder))
}
```

```kotlin
package org.jetbrains.kotlinx.dl.dataset.preprocessor

import org.jetbrains.kotlinx.dl.api.extension.set3D
import org.jetbrains.kotlinx.dl.dataset.image.ColorOrder
import org.jetbrains.kotlinx.dl.dataset.preprocessor.image.InterpolationType
import org.jetbrains.kotlinx.dl.dataset.preprocessor.image.crop
import org.jetbrains.kotlinx.dl.dataset.preprocessor.image.resize
import org.jetbrains.kotlinx.dl.dataset.preprocessor.image.rotate
import org.junit.jupiter.api.Assertions
import org.junit.jupiter.api.Test
import java.awt.Color
import java.awt.image.BufferedImage

class PreprocessingImageTest {
    @Test
    fun resizeTest() {
        val preprocess = preprocess {
            load {
                colorMode = ColorOrder.BGR
            }
            transformImage {
                resize {
                    outputWidth = 4
                    outputHeight = 4
                    interpolation = InterpolationType.NEAREST
                }
            }
            transformTensor {
                rescale { }
            }
        }
        val inputImage = BufferedImage(2, 2, BufferedImage.TYPE_3BYTE_BGR)
        inputImage.setRGB(0, 0, Color.BLUE.rgb)
        inputImage.setRGB(1, 1, Color.RED.rgb)
        val (imageFloats, imageShape) = preprocess.handleImage(inputImage, "test")
        Assertions.assertEquals(ImageShape(4, 4, 3), imageShape)
        val expectedImage = FloatArray(imageShape.numberOfElements.toInt()) { 0f }.apply {
            for (i in 0..1)
                for (j in 0..1)
                    setRGB(i, j, Color.BLUE, imageShape, ColorOrder.BGR)
            for (i in 2..3)
                for (j in 2..3)
                    setRGB(i, j, Color.RED, imageShape, ColorOrder.BGR)
        }
        Assertions.assertArrayEquals(expectedImage, imageFloats)
    }

    @Test
    fun cropTest() {
        val preprocess = preprocess {
            load {
                colorMode = ColorOrder.BGR
            }
            transformImage {
                crop {
                    left = 1
                    right = 0
                    top = 0
                    bottom = 1
                }
            }
            transformTensor {
                rescale { }
            }
        }
        val inputImage = BufferedImage(2, 2, BufferedImage.TYPE_3BYTE_BGR)
        inputImage.setRGB(0, 0, Color.BLUE.rgb)
        inputImage.setRGB(1, 0, Color.GREEN.rgb)
        inputImage.setRGB(1, 1, Color.RED.rgb)
        inputImage.setRGB(0, 1, Color.GREEN.rgb)

        val (imageFloats, imageShape) = preprocess.handleImage(inputImage, "test")
        Assertions.assertEquals(ImageShape(1, 1, 3), imageShape)

        val expectedImage = FloatArray(3).apply { setRGB(0, 0, Color.GREEN, imageShape, ColorOrder.BGR) }
        Assertions.assertArrayEquals(expectedImage, imageFloats)
    }

    @Test
    fun rotateTest() {
        val preprocess = preprocess {
            load {
                colorMode = ColorOrder.BGR
            }
            transformImage {
                rotate {
                    degrees = 90f
                }
            }
            transformTensor {
                rescale { }
            }
        }
        val inputImage = BufferedImage(2, 2, BufferedImage.TYPE_3BYTE_BGR)
        inputImage.setRGB(0, 0, Color.BLUE.rgb)
        inputImage.setRGB(1, 1, Color.RED.rgb)
        val (imageFloats, imageShape) = preprocess.handleImage(inputImage, "test")

        Assertions.assertEquals(ImageShape(2, 2, 3), imageShape)
        val expectedImage = FloatArray(imageShape.numberOfElements.toInt()) { 0f }
        expectedImage.setRGB(1, 0, Color.BLUE, imageShape, ColorOrder.BGR)
        expectedImage.setRGB(0, 1, Color.RED, imageShape, ColorOrder.BGR)
        Assertions.assertArrayEquals(expectedImage, imageFloats)
    }

    private fun FloatArray.setRGB(x: Int, y: Int, color: Color, imageShape: ImageShape, colorOrder: ColorOrder) {
        val colorComponents = when (colorOrder) {
```

```kotlin
package com.phelat.splash.photopreview.holder

import android.animation.ArgbEvaluator
import android.animation.ObjectAnimator
import android.animation.ValueAnimator
import android.graphics.Color
import android.support.constraint.ConstraintLayout
import android.support.v7.widget.AppCompatImageView
import android.support.v7.widget.CardView
import android.support.v7.widget.RecyclerView
import android.view.View
import com.phelat.splash.data.entity.PhotoEntity
import com.phelat.splash.utils.displayMetrics
import com.squareup.picasso.Callback
import com.squareup.picasso.Picasso
import kotlinx.android.synthetic.main.photo_list_item.view.*
import kotlinx.android.synthetic.main.photo_list_shimmer.view.*
import kotlin.math.roundToInt
```

```kotlin
override fun getDouble(fieldName: String): Double? = null
            override fun getBoolean(fieldName: String): Boolean? = null
            override fun <T> getObject(fieldName: String, klass: Class<T>): T? = null
            override fun <T> getList(fieldName: String, klass: Class<T>): List<T>? = null
            override fun validate() {}
        }

        val audio = ExampleActivityContentAudio()
        assertThat(audio.type).isEqualTo("Audio")
    }
}
```

```kotlin
companion object {
        @JvmStatic fun main(args: Array<String>) {
            SpringApplication.run(SptApplication::class.java, *args)
        }
    }
}
```

```kotlin
package com.example.chadrick.datalabeling.Fragments

import android.os.Bundle
import android.support.v4.app.Fragment
import android.util.Log
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import com.example.chadrick.datalabeling.MainActivity
import com.example.chadrick.datalabeling.R
import com.google.android.gms.auth.api.Auth
import kotlinx.android.synthetic.main.signinfrag_layout.*

/**
 * Created by chadrick on 17. 12. 12.
 */

class SignInFragment : Fragment() {


    companion object {
        val RC_SIGN_IN = 1
        val TAG = "SignInFragment"
    }

    override fun onCreateView(inflater: LayoutInflater?, container: ViewGroup?, savedInstanceState: Bundle?): View? {
        val rootview = inflater?.inflate(R.layout.signinfrag_layout, container, false)

        return rootview
    }

    override fun onViewCreated(view: View?, savedInstanceState: Bundle?) {
        super.onViewCreated(view, savedInstanceState)

        sign_in_button.setOnClickListener({ view -> signIn() })


    }

    private fun signIn() {
        val apiclient = (activity as MainActivity).googleApiClient
        val signinIntent = Auth.GoogleSignInApi.getSignInIntent(apiclient)
        if (apiclient.isConnected()) {
            Log.d(TAG, "gac connected")
        } else {
            Log.d(TAG, "gac not connected")
        }
        Log.d(TAG, "trying to start google api activity")

        activity.startActivityForResult(signinIntent, RC_SIGN_IN)
    }

}
```

```kotlin
binding.showReadInAll.bindToPreference(preferences.showReadInAllRecents())
        binding.showTitleFirst.bindToPreference(preferences.showTitleFirstInRecents())
        binding.uniformCovers.bindToPreference(preferences.uniformGrid())
    }
}
```

```kotlin
fun main(args: Array<String>) {
    val N = readLine()!!.toInt()
    val S = readLine()!!
    val Q = readLine()!!.toInt()

    val setArray = Array(S.length){ setOf<Char>() }
    S.forEachIndexed { index, c ->
        setArray[index] = setOf(c)
    }

    val st = SegmentTree(setArray, {a, b -> a.union(b)}, setOf())
    repeat(Q){
        val q = readLine()!!.split(" ")
        if(q[0] == "1"){
            st.update(q[1].toInt() - 1, setOf(q[2][0]))
        }else{
            println(st.getOp(q[1].toInt() - 1, q[2].toInt()).size)
        }
    }
}

class SegmentTree(
    private val original: Array<Set<Char>>,
    private val op: (Set<Char>, Set<Char>) -> Set<Char>,
    private val unit: Set<Char>
) {
    private var size = 1
    private var node = Array(0){ unit }

    init {
        while (size < original.size) {
            size *= 2
        }
        node = Array(2 * size - 1){ unit }
        for (i in original.indices) {
            node[i + size - 1] = original[i]
        }
        for (i in size - 2 downTo 0) {
            node[i] = op(node[2 * i + 1], node[2 * i + 2])
        }
    }

    fun update(index: Int, value: Set<Char>) {
        node[index + size - 1] = value
        var x = index + size - 1
        while (x > 0) {
            x = (x - 1) / 2
            node[x] = op(node[2 * x + 1], node[2 * x + 2])
        }
    }

    fun getOp(a: Int, b: Int, k: Int = 0, l: Int = 0, r: Int = size): Set<Char> {
        if (r <= a || b <= l) {
            return unit
        }
        if (a <= l && r <= b) {
            return node[k]
        }
        val vl = getOp(a, b, 2 * k + 1, l, (l + r) / 2)
        val vr = getOp(a, b, 2 * k + 2, (l + r) / 2, r)
        return op(vl, vr)
    }

    fun get(index: Int): Set<Char> {
        return node[index + size - 1]
    }
}
```

```kotlin
package com.jayrave.moshi.pristineModels

import java.lang.reflect.Type

interface PropertyExtractor<in T, out F> {

    /**
     * The type of this property
     */
    val type: Type

    /**
     * To extract the property ([F]) from an instance of [T]
     */
    fun extractFrom(t: T): F
}
```

```kotlin
package com.github.welblade.soccermatchsim.data.model

import android.os.Parcelable
import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass
import kotlinx.parcelize.Parcelize

@Parcelize
@JsonClass(generateAdapter = true)
data class Match(
    @Json(name = "descricao")
    val description: String,
    @Json(name = "local")
    val place: Place,
    @Json(name = "mandante")
    val home: Team,
    @Json(name = "visitante")
    val away: Team,
) : Parcelable
```

```kotlin
package com.apphud.sdk.mappers

import com.apphud.sdk.client.dto.CustomerDto
import com.apphud.sdk.domain.ApphudKind
import com.apphud.sdk.domain.Customer
import com.apphud.sdk.domain.ApphudUser

class CustomerMapper(
    private val mapper: SubscriptionMapper
) {

    fun map(customer: CustomerDto) = Customer(
        user = ApphudUser(
            userId = customer.user_id,
            currencyCode = customer.currency?.code,
            currencyCountryCode = customer.currency?.country_code
        ),
        subscriptions = customer.subscriptions
            .filter { it.kind == ApphudKind.AUTORENEWABLE.source }
            .mapNotNull { mapper.mapRenewable(it) }
            .sortedByDescending { it.expiresAt },
        purchases = customer.subscriptions
            .filter { it.kind == ApphudKind.NONRENEWABLE.source }
            .mapNotNull { mapper.mapNonRenewable(it) }
            .sortedByDescending { it.purchasedAt }
    )
}
```

```kotlin
/*
 * Copyright 2020 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package androidx.wear.complications.data

import android.graphics.drawable.Icon
import androidx.wear.complications.SharedRobolectricTestRunner
import com.google.common.truth.Truth.assertThat
import org.junit.Test
import org.junit.runner.RunWith

@RunWith(SharedRobolectricTestRunner::class)
public class ImageTest {
    @Test
    public fun monochromaticImage() {
        val icon = Icon.createWithContentUri("icon")
        val ambientIcon = Icon.createWithContentUri("icon")
        val image = MonochromaticImage.Builder(icon)
            .setAmbientImage(ambientIcon)
            .build()
        assertThat(image.image).isEqualTo(icon)
        assertThat(image.ambientImage).isEqualTo(ambientIcon)
    }

    @Test
    public fun smallImage() {
        val icon = Icon.createWithContentUri("icon")
        val ambientIcon = Icon.createWithContentUri("icon")
        val image = SmallImage.Builder(icon, SmallImageType.PHOTO)
            .setAmbientImage(ambientIcon)
            .build()
        assertThat(image.image).isEqualTo(icon)
        assertThat(image.type).isEqualTo(SmallImageType.PHOTO)
        assertThat(image.ambientImage).isEqualTo(ambientIcon)
    }

    @Test
    public fun backgroundImage() {
        val icon = Icon.createWithContentUri("icon")
        val image = PhotoImage.Builder(icon).build()
        assertThat(image.image).isEqualTo(icon)
    }
}
```

```kotlin
/*
 * Created by Eduard Zaydel on 1/4/2019
 * Copyright © 2019 Waves Platform. All rights reserved.
 */

package com.wavesplatform.wallet.v2.ui.welcome

import android.content.Context
import android.view.View
import android.view.ViewGroup
import com.asksira.loopingviewpager.LoopingPagerAdapter
import com.wavesplatform.wallet.R
import com.wavesplatform.wallet.v2.data.model.local.WelcomeItem
import kotlinx.android.synthetic.main.item_welcome.view.*
import pers.victor.ext.inflate

class WelcomeItemsPagerAdapter(context: Context, itemList: List<WelcomeItem>, isInfinite: Boolean)
    : LoopingPagerAdapter<WelcomeItem>(context, itemList, isInfinite) {

    override fun inflateView(viewType: Int, container: ViewGroup, listPosition: Int): View {
        return inflate(R.layout.item_welcome, container, false)
    }

    override fun bindView(convertView: View, listPosition: Int, viewType: Int) {
        convertView.image_welcome_photo.setImageResource(itemList[listPosition].image)
        convertView.text_title.setText(itemList[listPosition].title)
        convertView.text_descr.setText(itemList[listPosition].description)
    }
}
```

```kotlin
val flag = true
fun <T> run(f: () -> T): T { return f() }

// type of a was checked by txt
val a = run { // () -> Unit
    return@run
}

// Unit
val b = run {
    if (flag) return@run
    <!UNUSED_EXPRESSION!>5<!>
}

// Unit
val c = run {
    if (flag) return@run

    return@run <!RETURN_TYPE_MISMATCH!>4<!>
}
```

```kotlin
package io.agora.education.api.record.data

enum class RecordState(val value: Int) {
    RECORDING(1),
    FINISHED(2),
    WAIT_DOWNLOAD(3),
    WAIT_CONVERT(4),
    WAIT_UPLOAD(5)
}

data class EduRecordInfo(
        var appId: String,
        var roomUuid: String,
        var recordId: String,
        var recordState: RecordState,
        var recordingTime: Long
)
```

```kotlin
/*
 * Copyright 2019 New Vector Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package im.vector.riotx.features.home

import android.os.Bundle
import android.view.LayoutInflater
import android.view.View
import androidx.core.view.forEachIndexed
import androidx.lifecycle.Observer
import com.airbnb.mvrx.fragmentViewModel
import com.airbnb.mvrx.withState
import com.google.android.material.bottomnavigation.BottomNavigationItemView
import com.google.android.material.bottomnavigation.BottomNavigationMenuView
import im.vector.matrix.android.api.session.crypto.keysbackup.KeysBackupState
import im.vector.matrix.android.api.session.group.model.GroupSummary
import im.vector.riotx.R
import im.vector.riotx.core.extensions.commitTransactionNow
import im.vector.riotx.core.platform.ToolbarConfigurable
import im.vector.riotx.core.platform.VectorBaseFragment
import im.vector.riotx.core.ui.views.KeysBackupBanner
import im.vector.riotx.features.home.room.list.RoomListFragment
import im.vector.riotx.features.home.room.list.RoomListParams
import im.vector.riotx.features.home.room.list.UnreadCounterBadgeView
```

```kotlin
@file:JsModule("@atlaskit/checkbox")

package imports.atlaskit.checkbox

import org.w3c.dom.events.Event
import react.RClass
import react.RProps

@JsName("Checkbox")
external val Checkbox: RClass<CheckboxProps>

external interface CheckboxProps : RProps {

    /**
     * Sets whether the checkbox is checked or unchecked.
     */
    var isChecked: Boolean

    /**
     * Sets whether the checkbox is disabled.
     */
    var isDisabled: Boolean

    /**
     * Sets whether the checkbox should take up the full width of the parent.
     */
    var isFullWidth: Boolean

    /**
     * Marks the field as invalid. Changes style of unchecked component.
     */
    var isInvalid: Boolean

    /**
     * Marks the field as required & changes the label style.
     */
    var isRequired: Boolean

    /**
     * The label to be displayed to the right of the checkbox.
     * The label is part of the clickable element to select the checkbox.
     */
    var label: String

    /**
     * The value to be used in the checkbox input. This is the value that will be returned on form submission.
     */
    var value: String?

    var onChange: (Event) -> Unit

}
```

```kotlin
package ru.adavliatov.atomy.common.ui.api.plugin.javalin.auth

import ru.adavliatov.atomy.common.ui.api.auth.Role
import io.javalin.core.security.Role as JavalinRole

enum class ApiRole : Role, JavalinRole {
  anonymous,
  admin,
  developer,
  user;

  companion object {
    fun String.toApiRole() = when (this) {
      "admin" -> admin
      "developer" -> developer
      "user" -> user
      else -> anonymous
    }
  }
}
```

```csharp
using System;

using Nancy.Bootstrapper;
using Nancy.Hosting.Self;

namespace James.ServiceStubs
{
    public class ServiceStubsHost : NancyHost
    {
        public ServiceStubsHost(string baseUri)
            : this(new Uri(baseUri))
        {}

        public ServiceStubsHost(string baseUri, INancyBootstrapper bootstrapper)
            : this(new Uri(baseUri), bootstrapper)
        {}

        public ServiceStubsHost(Uri baseUri)
            : this(baseUri, new ServiceStubsBootstrapper())
        {}

        public ServiceStubsHost(Uri baseUri, INancyBootstrapper bootstrapper)
            : base(baseUri, bootstrapper)
        {}
    }
}
```

```csharp
using System;
using System.Linq.Expressions;

public struct MyType
{
	int value;

	public MyType (int value)
	{
		this.value = value;
	}
	public static MyType operator - (MyType a)
	{
		return new MyType (-a.value);
	}
}

class C
{
	public static int Main ()
	{
		MyType? x = null;
		MyType? y = -x;
		
		checked {
			float? f = float.MinValue;
			f = -f + 1;
			int? i = int.MinValue;
			try {
				i = -i;
				return 1;
			} catch (OverflowException) { }
		}		
		
		return 0;
	}
}
```

```csharp
using System;
using System.Collections.Generic;
using System.Linq;

namespace AtCoder
{
    class Program
    {
        static void Main(string[] args)
        {
            //[summary]
            int n = int.Parse(Console.ReadLine());
            var numbers = ReadLine().ToList();

            //long total = numbers.Sum();
            //long snuke = 0;
            //long minDiff = long.MaxValue;

            //for(int i = 0; i < n - 1; i++)
            //{
            //    snuke += numbers[i];
            //    long raccoon = total - snuke;
            //    long diff = Math.Abs(snuke - raccoon);

            //    if (diff < minDiff)
            //    {
            //        minDiff = diff;
            //    }
            //}

            long total = numbers.Sum();
            long minDiff = long.MaxValue;

            for (int i = 1; i < n; i++)
            {
                long snuke = numbers.Take(i).Sum();
                long raccoon = total - snuke;
                long diff = Math.Abs(snuke - raccoon);

                if (diff < minDiff)
                {
                    minDiff = diff;
                }
            }

            Console.WriteLine(minDiff);            
        }

        static IEnumerable<long> ReadLine()
        {
            var line = Console.ReadLine().TrimEnd();
            var array = line.Split(' ');

            foreach (var s in array)
            {
                yield return long.Parse(s);
            }
        }
    }
}
```

```csharp
using System;
using System.Linq;

public class Program
{
    static void Main()
    {
        string[] input = Console.ReadLine().Split(' ');
        long a = long.Parse(input[0]);
        long b = long.Parse(input[1]);
        long c = long.Parse(input[2]);

        if(a == b && b == c)
        {
            Console.WriteLine(-1);
            return;
        }

        long ans = 0;
        long ha, hb, hc;
        do
        {
            ans++;
            ha = a / 2;
            hb = b / 2;
            hc = c / 2;
            a = hb + hc;
            b = ha + hc;
            c = ha + hb;
        }
        while (a % 2 == 0 && b % 2 == 0 && c % 2 == 0);

        Console.WriteLine(ans);
    }
}
```

```csharp
using System;
using System.Collections.Generic;
using System.Linq;

public class Solution
{
    public static void Main()
    {
        var N = int.Parse(Console.ReadLine());
        var a = new int[1].Concat(Console.ReadLine().Split(' ').Select(int.Parse)).ToArray();

        var b = new bool[N + 1];
        for (int i = N; i > 0; i--)
        {
            var count = 0;
            for (int j = i * 2; j <= N; j += i)
            {
                if (b[j])
                {
                    count++;
                }
            }

            if (count % 2 == a[i])
            {
                b[i] = false;
            }
            else if ((count + 1) % 2 == a[i])
            {
                b[i] = true;
            }
            else
            {
                Console.WriteLine(-1);
                return;
            }
        }

        var indexs = b.Select((v, i) => new { v, i }).Where(x => x.v).Select(x => x.i).ToList();
        Console.WriteLine(indexs.Count());
        if (indexs.Count > 0)
        {
            Console.WriteLine(string.Join(" ", indexs));
        }
    }
}
```

```csharp
using System;

class main{
  static void Main(string[] args){
    string[] s = Console.ReadLine().Split(" ");
    int tap = int.Parse(s[0])-1;
    int sockets = int.Parse(s[1]);
    if(sockets == 1){
      Console.Write("0");
      return;
    }
    
    for(int i = 1; i != 0; i++){
      if(tap * i + 1 >= sockets){
        Console.Write(i);
        break;
      }
    }
  }
}
```

```csharp
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace Practice
{
    class Program
    {
        private static int ReadAndParseInt()
        {
            return int.Parse(Console.ReadLine());
        }
        private static int[] ReadAndParseIntArr()
        {
            return Array.ConvertAll(Console.ReadLine().Split(' '), int.Parse);
        }
        private static long ReadAndParseLong()
        {
            return long.Parse(Console.ReadLine());
        }
        private static long[] ReadAndParseLongArr()
        {
            return Array.ConvertAll(Console.ReadLine().Split(' '), long.Parse);
        }
        static void Main(string[] args)
        {
            SolveA(args);
            //SolveB(args);
            //SolveC(args);
            //SolveD(args);


        }
        static void SolveA(string[] args)
        {
            int[] nmq = ReadAndParseIntArr();
            int n = nmq[0];
            int m = nmq[1];
            int Q = nmq[2];
            int[] L = new int[m];
            int[] R = new int[m];
            for(int i=0;i<m;++i)
            {
                int[] lr = ReadAndParseIntArr();
                L[i] = lr[0];
                R[i] = lr[1];
            }
            //int[] p = new int[Q];
            //int[] q = new int[Q];
            for(int i=0;i<Q;++i)
            {
                int[] pq = ReadAndParseIntArr();
                //p[i] = pq[0];
                //q[i] = pq[1];
                int p = pq[0];
                int q = pq[1];

                int total = 0;
                for(int j=0;j<m;++j)
                {
                    if( p <= L[j] && R[j] <= q)
                    {
                        total++;
                    }
                }
                Console.WriteLine(total);
            }
            
        }
    }
}
```

```csharp
// Copyright (c) Microsoft Open Technologies, Inc.  All Rights Reserved.  Licensed under the Apache License, Version 2.0.  See License.txt in the project root for license information.

using System;
using System.Collections.Immutable;
using System.Threading;
using Microsoft.CodeAnalysis.Diagnostics;
using Microsoft.CodeAnalysis.FxCopAnalyzers.Shared.Extensions;
using Microsoft.CodeAnalysis.FxCopAnalyzers.Utilities;

namespace Microsoft.CodeAnalysis.FxCopAnalyzers.Design
{
    /// <summary>
    /// CA1024: Use properties where appropriate
    /// 
    /// Cause:
```

```csharp
using System;
using static System.Console;
using System.Linq;
using System.Collections.Generic;

namespace Main
{
    class Program
    {
        static void Main(string[] args)
        {
            string[] tmp = ReadLine().Split(' ');
            int K = int.Parse(tmp[0]);
            int N = int.Parse(tmp[1]);

            string[] tmp2 = ReadLine().Split(' ');
            List<int> A = new List<int>();
            for (int i = 0; i < N; i++)
            {
                A.Add(int.Parse(tmp2[i]));
            }

            List<int> B = new List<int>();
            for (int i = 0; i < N - 1; i++)
            {
                B.Add(A[i + 1] - A[i]);
            }

            B.Add(K - A[N-1] + A[0]);


            Write(K - B.Max());
        }
    }
}
```

```csharp
/*
 * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License").
 * You may not use this file except in compliance with the License.
 * A copy of the License is located at
 * 
 *  http://aws.amazon.com/apache2.0
 * 
 * or in the "license" file accompanying this file. This file is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

/*
 * Do not modify this file. This file is generated from the backup-2018-11-15.normal.json service model.
 */
using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Net;
using System.Text;
using System.Xml.Serialization;

using Amazon.Backup.Model;
using Amazon.Runtime;
using Amazon.Runtime.Internal;
using Amazon.Runtime.Internal.Transform;
using Amazon.Runtime.Internal.Util;
using ThirdParty.Json.LitJson;

namespace Amazon.Backup.Model.Internal.MarshallTransformations
{
    /// <summary>
    /// Response Unmarshaller for GetBackupVaultAccessPolicy operation
    /// </summary>  
    public class GetBackupVaultAccessPolicyResponseUnmarshaller : JsonResponseUnmarshaller
    {
        /// <summary>
        /// Unmarshaller the response from the service to the response class.
        /// </summary>  
        /// <param name="context"></param>
        /// <returns></returns>
        public override AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context)
        {
            GetBackupVaultAccessPolicyResponse response = new GetBackupVaultAccessPolicyResponse();

            context.Read();
            int targetDepth = context.CurrentDepth;
            while (context.ReadAtDepth(targetDepth))
            {
                if (context.TestExpression("BackupVaultArn", targetDepth))
                {
                    var unmarshaller = StringUnmarshaller.Instance;
                    response.BackupVaultArn = unmarshaller.Unmarshall(context);
                    continue;
                }
                if (context.TestExpression("BackupVaultName", targetDepth))
                {
                    var unmarshaller = StringUnmarshaller.Instance;
                    response.BackupVaultName = unmarshaller.Unmarshall(context);
                    continue;
                }
                if (context.TestExpression("Policy", targetDepth))
                {
                    var unmarshaller = StringUnmarshaller.Instance;
                    response.Policy = unmarshaller.Unmarshall(context);
                    continue;
                }
            }

            return response;
        }

        /// <summary>
        /// Unmarshaller error response to exception.
        /// </summary>  
        /// <param name="context"></param>
        /// <param name="innerException"></param>
        /// <param name="statusCode"></param>
        /// <returns></returns>
        public override AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode)
        {
            var errorResponse = JsonErrorResponseUnmarshaller.GetInstance().Unmarshall(context);
            errorResponse.InnerException = innerException;
            errorResponse.StatusCode = statusCode;

            var responseBodyBytes = context.GetResponseBodyBytes();

            using (var streamCopy = new MemoryStream(responseBodyBytes))
            using (var contextCopy = new JsonUnmarshallerContext(streamCopy, false, null))
            {
                if (errorResponse.Code != null && errorResponse.Code.Equals("InvalidParameterValueException"))
                {
                    return InvalidParameterValueExceptionUnmarshaller.Instance.Unmarshall(contextCopy, errorResponse);
                }
                if (errorResponse.Code != null && errorResponse.Code.Equals("MissingParameterValueException"))
                {
                    return MissingParameterValueExceptionUnmarshaller.Instance.Unmarshall(contextCopy, errorResponse);
                }
                if (errorResponse.Code != null && errorResponse.Code.Equals("ResourceNotFoundException"))
                {
                    return ResourceNotFoundExceptionUnmarshaller.Instance.Unmarshall(contextCopy, errorResponse);
                }
                if (errorResponse.Code != null && errorResponse.Code.Equals("ServiceUnavailableException"))
                {
                    return ServiceUnavailableExceptionUnmarshaller.Instance.Unmarshall(contextCopy, errorResponse);
                }
            }
            return new AmazonBackupException(errorResponse.Message, errorResponse.InnerException, errorResponse.Type, errorResponse.Code, errorResponse.RequestId, errorResponse.StatusCode);
        }

        private static GetBackupVaultAccessPolicyResponseUnmarshaller _instance = new GetBackupVaultAccessPolicyResponseUnmarshaller();        

        internal static GetBackupVaultAccessPolicyResponseUnmarshaller GetInstance()
        {
            return _instance;
        }

        /// <summary>
        /// Gets the singleton.
        /// </summary>  
        public static GetBackupVaultAccessPolicyResponseUnmarshaller Instance
        {
            get
            {
                return _instance;
            }
        }
```

```csharp
// Watch.cs

using System;

class Watch {

	static int waru1(int n, out int amari) {
		amari = n % 3600;
		return n / 3600;
	}

	static int waru2(int n, out int amari2) {
		amari2 = n % 60;
		return n / 60;
	}

	public static void Main() {

		int n = int.Parse(Console.ReadLine());
		int amari;
		int h = waru1(n, out amari);
		int amari2;
		int m = waru2(amari, out amari2);
		Console.WriteLine(h + ":" + m + ":" + amari2);


	}
}
```

```csharp
using System;
using System.Linq;

namespace InsertionSort
{
    internal class Program
    {
        public static void Main(string[] args)
        {
            var n = int.Parse(Console.ReadLine());
            var arr = Console.ReadLine().Split(' ').Select(int.Parse).ToArray();
            InsertionSort(arr);


        }

        static void InsertionSort<T>(T[] arr) where T : IComparable<T>
        {
            
            var before = string.Join(" ", arr).TrimEnd();
            Console.WriteLine(before);
            for (var i = 1; i < arr.Length; i++)
            {
                for (var j = i; j >= 1 && arr[j - 1].CompareTo(arr[j]) > 0; j--)
                {
                    Swap(ref arr[j], ref arr[j - 1]);
                }
                
                var result = string.Join(" ", arr).TrimEnd();
                Console.WriteLine(result);
            }
        }

        static void Swap<T>(ref T a, ref T b) where T : IComparable<T>
        {
            var tmp = a;
            a = b;
            b = tmp;
        }
    }
}
```

```csharp
using System;
using System.Collections;
using System.Linq;
class Program{
    static void Main(){
        while (true){
            int[] nm = Console.ReadLine().Split(' ').Select(s => int.Parse(s)).ToArray();
            int n = nm[0], m = nm[1];
            if (n == 0 && m == 0)
                break;
            int[][] dp = new int[n][];
            for (int i = 0; i < n; i++)
                dp[i] = Console.ReadLine().Split(' ').Select(s => int.Parse(s)).ToArray();
            Array.Sort(dp, (a, b) => a[1] - b[1]);
            Array.Reverse(dp);
            long ans = 0;
            for (int i = 0; i < n; i++){
                ans += dp[i][0] * dp[i][1];
                if (dp[i][0] > m){
                    ans -= dp[i][1] * m;
                    m = 0;
                }
                else{
                    m -= dp[i][0];
                    ans -= dp[i][0] * dp[i][1];
                }
            }
            Console.WriteLine(ans);
        }
    }
}
```

```csharp
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace test
{
    class Program
    {
        static void Main(string[] args)
        {
            var S = Console.ReadLine();
            var T = Console.ReadLine();

            for (char c = 'a'; c <= 'z'; c++)
            {
                var num = new List<int>();
                for (int i = 0; i < S.Length; i++) if (S[i] == c) num.Add(i);
                if (num.Count >= 2)
                {
                    var cha = T[num[0]];
                    for (int j = 1; j < num.Count; j++)
                    {
                        if (T[num[j]] != cha)
                        {
                            Console.WriteLine("No");
                            return;
                        }
                    }
                }
            }

            for (char c = 'a'; c <= 'z'; c++)
            {
                var num = new List<int>();
                for (int i = 0; i < T.Length; i++) if (T[i] == c) num.Add(i);
                if (num.Count >= 2)
                {
                    var cha = S[num[0]];
                    for (int j = 1; j < num.Count; j++)
                    {
                        if (S[num[j]] != cha)
                        {
                            Console.WriteLine("No");
                            return;
                        }
                    }
                }
            }

            Console.WriteLine("Yes");
        }
    }
}
```

```csharp
using System;
using System.Collections.Generic;
using System.Linq;

class Solution
{
    static long[] Dijkstra(List<Tuple<int, int>>[] link, int k)
    {
        var n = link.Length - 1;
        var d = Enumerable.Repeat(long.MaxValue, n + 1).ToArray();
        d[k] = 0;
        var q = Enumerable.Range(1, n).ToList();

        while (q.Count > 0)
        {
            var u = q.OrderBy(i => d[i]).First();
            q.Remove(u);
            foreach (var nei in link[u])
            {
                var v = nei.Item1;
                var len = nei.Item2;
                if (d[v] > d[u] + len)
                {
                    d[v] = d[u] + len;
                }
            }
        }

        return d;
    }

    static void Main()
    {
        var n = int.Parse(Console.ReadLine());
        var link = Enumerable.Range(0, n + 1).Select(_ => new List<Tuple<int, int>>()).ToArray();
        for (int i = 0; i < n - 1; i++)
        {
            var v = Console.ReadLine().Split(' ').Select(int.Parse).ToArray();
            link[v[0]].Add(Tuple.Create(v[1], v[2]));
            link[v[1]].Add(Tuple.Create(v[0], v[2]));
        }

        var vals = Console.ReadLine().Split(' ').Select(int.Parse).ToArray();
        var q = vals[0];
        var k = vals[1];
        var query = new int[q][];
        for (int i = 0; i < q; i++)
        {
            query[i] = Console.ReadLine().Split(' ').Select(int.Parse).ToArray();
        }

        var d = Dijkstra(link, k);

        foreach (var que in query)
        {
            Console.WriteLine($"{d[que[0]] + d[que[1]]}");
        }
    }
}
```

```csharp
using UnityEngine;
using UnityEngine.Events;
using System.Collections.Generic;

public class CameraZone : MonoBehaviour {
    public UnityEvent initialHitEvent;

    Level level;
    public Vector2 cameraMin;
    public Vector2 cameraMax;
    public Vector2 positionMin;
    public Vector2 positionMax;
    public bool unloadUnpopulatedLevels = false;

    void Start() {
        level = GetComponentInParent<Level>();

        if (cameraMin == Vector2.zero) cameraMin = Vector2.one * -Mathf.Infinity;
        if (cameraMax == Vector2.zero) cameraMax = Vector2.one * Mathf.Infinity;
    }

    HashSet<Character> charactersHit = new HashSet<Character>();

    void OnTriggerEnter(Collider other) {
        Character[] characters = other.gameObject.GetComponentsInParent<Character>();
        if (characters.Length == 0) return;

        Set(characters[0]);

        if (charactersHit.Count < LevelManager.current.characters.Count) return;
        if (!unloadUnpopulatedLevels) return;
        
        foreach (Level level in FindObjectsOfType<Level>())
            level.Unload();
    }

    public void Set(Character character) {
        if (character.currentLevel != level) return;
        if (character.characterCamera == null) return;
        CharacterCamera characterCamera = character.characterCamera;
        characterCamera.minPosition = cameraMin;
        characterCamera.maxPosition = cameraMax;
        if (positionMin != Vector2.zero) character.positionMin = positionMin;
```

```csharp
using System;
using System.Collections.Generic;
using System.Windows;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Atcoder
{
    public class Program
    {
        static void Main(string[] args)
        {
            var S = Console.ReadLine();
            if (S.Count(x => x.ToString() == S.Substring(0, 1)) == S.Count())
            {
                Console.WriteLine("No");
            }
            else
            {
                Console.WriteLine("Yes");
            }
            Console.ReadLine();
        }
    }
}

public static class Extentions
{
    public static int ToInt(this object obj)
    {
        return int.Parse(obj.ToString());
    }

    public static decimal ToDecimal(this object obj)
    {
        return decimal.Parse(obj.ToString());
    }

    public static double ToDouble(this object obj)
    {
        return double.Parse(obj.ToString());
    }
}
```

```csharp
using System;

namespace FluentAssertions.Primitives;

internal class NegatedStringStartValidator : StringValidator
{
    private readonly StringComparison stringComparison;

    public NegatedStringStartValidator(string subject, string expected, StringComparison stringComparison, string because,
        object[] becauseArgs)
        : base(subject, expected, because, becauseArgs)
    {
        this.stringComparison = stringComparison;
    }

    protected override string ExpectationDescription
    {
        get
        {
            string predicateDescription = IgnoreCase ? "start with equivalent of" : "start with";
            return "Expected {context:string} that does not " + predicateDescription + " ";
        }
    }

    private bool IgnoreCase
    {
        get
        {
            return stringComparison == StringComparison.OrdinalIgnoreCase;
        }
    }

    protected override void ValidateAgainstMismatch()
    {
        bool isMatch = Subject.StartsWith(Expected, stringComparison);
        if (isMatch)
        {
            Assertion.FailWith(ExpectationDescription + "{0}{reason}, but found {1}.",
                Expected, Subject);
        }
    }
}
```

```csharp
using System.Collections.Generic;
using System.Linq;
using System.Security.Claims;
using System.Threading.Tasks;
using Bakery.Models;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Identity;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Mvc.Rendering;
using Microsoft.EntityFrameworkCore;

namespace Bakery.Controllers
{
  [Authorize]
  public class TreatsController : Controller
  {
    private readonly BakeryContext _db;

    public TreatsController(BakeryContext db)
    {
      _db = db;
    }

    [HttpGet("/treats")]
    public ActionResult Index()
    {
      List<Treat> model = _db.Treats.ToList();
      return View(model);
    }

    public ActionResult Create()
    {
      List<SelectListItem> flavors = new SelectList(_db.Flavors, "FlavorId", "Name").ToList();
      flavors.Insert(0, (new SelectListItem { Text = "None", Value = "0" }));
      ViewBag.FlavorId = flavors;
      return View();
    }

    [HttpPost]
    public ActionResult Create(Treat treat, int FlavorId)
    {
      _db.Treats.Add(treat);
      if (FlavorId != 0)
      {
        _db.FlavorTreat.Add(new FlavorTreat() { FlavorId = FlavorId, TreatId = treat.TreatId });
      }
      _db.SaveChanges();
      return RedirectToAction("Index");
    }

    public ActionResult Details(int id)
    {
      var thisTreat = _db.Treats
        .Include(treat => treat.Flavors)
```

```csharp
using System;

class Program
{
    static void Main()
    {
        var str = Console.ReadLine();
        var a = int.Parse(str.Split()[0]);
        var b = int.Parse(str.Split()[1]);
        var c = int.Parse(str.Split()[2]);
        
        if(a < b && b < c){
            Console.WriteLine("Yes");
        }else{
            Console.WriteLine("No");
        }
    }
}
```

```csharp
using System;
class _0012
{
    public static void Main()
    {
        char[] splitChar = { ' ' };
        string str;
        double sABC, sABP, sBCP, sCAP;
        while ((str = Console.ReadLine()) != null)
        {
            string[] data = str.Split(splitChar);
            vector2 a = new vector2(double.Parse(data[0]), double.Parse(data[1]));
            vector2 b = new vector2(double.Parse(data[2]), double.Parse(data[3]));
            vector2 c = new vector2(double.Parse(data[4]), double.Parse(data[5]));
            vector2 p = new vector2(double.Parse(data[6]), double.Parse(data[7]));
            vector2 ab = new vector2((b - a).getX, (b - a).getY);
            vector2 ac = new vector2((c - a).getX, (c - a).getY);
            vector2 pa = new vector2((a - p).getX, (a - p).getY);
            vector2 pb = new vector2((b - p).getX, (b - p).getY);
            vector2 pc = new vector2((c - p).getX, (c - p).getY);
            sABC = Math.Sqrt(Math.Pow(ab.size, 2.0) * Math.Pow(ac.size, 2.0) - Math.Pow(ab & ac, 2.0)) / 2.0;
            sABP = Math.Sqrt(Math.Pow(pa.size, 2.0) * Math.Pow(pb.size, 2.0) - Math.Pow(pa & pb, 2.0)) / 2.0;
            sBCP = Math.Sqrt(Math.Pow(pb.size, 2.0) * Math.Pow(pc.size, 2.0) - Math.Pow(pb & pc, 2.0)) / 2.0;
            sCAP = Math.Sqrt(Math.Pow(pc.size, 2.0) * Math.Pow(pa.size, 2.0) - Math.Pow(pc & pa, 2.0)) / 2.0;
            if (sABC == (sABP + sBCP + sCAP))
            {
                Console.WriteLine("YES");
            }
            else
            {
                Console.WriteLine("NO");
            }
        }
    }
    private double dotProduct(vector2 x, vector2 y)
    {
        return x.getX * y.getX + x.getY * y.getY;
    }
}
class vector2
{
    private double x, y;
    public vector2() { x = 0.0; y = 0.0; }
    public vector2(double i, double j) { x = i; y = j; }
    public static vector2 operator +(vector2 op1, vector2 op2)
    {
        vector2 result = new vector2();
        result.x = op1.x + op2.x;
        result.y = op1.y + op2.y;
        return result;
    }
    public static vector2 operator -(vector2 op1, vector2 op2)
    {
        vector2 result = new vector2();
        result.x = op1.x - op2.x;
        result.y = op1.y - op2.y;
        return result;
    }
    public static vector2 operator /(vector2 op1, double op2)
    {
        vector2 result = new vector2();
        result.x = op1.x / op2;
        result.y = op1.y / op2;
        return result;
    }
    public static double operator &(vector2 op1, vector2 op2)
    {
        return op1.x * op2.x + op1.y * op2.y;
    }
    public double size
    {
        get
        {
            return Math.Sqrt(Math.Pow(x, 2.0) + Math.Pow(y, 2.0));
        }
    }
    public double getX{
        get{
            return x;
        }
    }
    public double getY{
        get{
            return y;
        }
    }
}
```

```csharp
using System;
using static System.Console;
using static System.Math;

class Program {
  static void Main(string[] args) {
    int x = int.Parse(ReadLine());
    int ans = 0;
    for (int i = 1; i <= 40; i++) {
      for (int j = 2; j <= 10; j++) {
        if (Pow(i, j) <= x) ans = Max(ans,(int)Pow(i, j));
      }
    }
    WriteLine(ans);
  }
}
```

```csharp
using System;
using System.Collections.Generic;
using System.Numerics;
using System.Linq;

namespace AtCoderTemplate
{
    class Program
    {
        static void Main(string[] args)
        {
            var v = Scanner.scanint;
            var x = v[2];
            for(var i = 0; i < 10; i++)
            {
                x = v[0] * x - v[1];
                Console.WriteLine(x);
            }
        }
    }

    public class Scanner
    {
        public static string[] scan => Console.ReadLine().Split(' ');
        public static string[][] rescan(int n) => Enumerable.Repeat(0, n).Select(_ => Console.ReadLine().Split(' ')).ToArray();
        public static int[] scanint => Array.ConvertAll(scan, int.Parse);
        public static long[] scanlong => Array.ConvertAll(scan, long.Parse);
    }

    public class Ex
    {
        public static int[] subarr(int[] arr, int begin, int n) { int[] a = new int[arr.Length]; Array.Copy(arr, begin, a, 0, n); return a; }
    }
}
```

```csharp
using System;

namespace A
{
    class Calc
    {
        public int fib(int n)
        {
            if (n==1 || n==0)
            {
                return 1;
            }
            else
            {
                return fib(n-1)+fib(n-2);
            }
        }
    }

    class A
    {
        static void Main(string[] args)
        {
            string input = Console.ReadLine();
            int n = int.Parse(input);
            Calc calc = new Calc();
            Console.WriteLine(calc.fib(n));
        }
    }
}
```

```csharp
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace agc15
{
    class Program
    {
        static void Main(string[] args)
        {
            string[] str = Console.ReadLine().Split(' ');
            int N = int.Parse(str[0]);
            int A = int.Parse(str[1]);
            int B = int.Parse(str[2]);
            long ans = N * (B - A) + 1;
            Console.WriteLine(ans);
        }
    }
}
```

```csharp
using eWAY.Rapid.Internals.Request;
using eWAY.Rapid.Internals.Response;
using System.Collections.Generic;
using System.Threading.Tasks;

namespace eWAY.Rapid.Internals.Services {
    internal interface IRapidService
    {
        Task<DirectCancelAuthorisationResponse> CancelAuthorisationAsync(DirectCancelAuthorisationRequest request);
        Task<DirectCapturePaymentResponse> CapturePaymentAsync(DirectCapturePaymentRequest request);
        Task<CreateAccessCodeResponse> CreateAccessCodeAsync(CreateAccessCodeRequest request);
        Task<CreateAccessCodeResponse> UpdateCustomerCreateAccessCodeAsync(CreateAccessCodeRequest request);
        Task<CreateAccessCodeSharedResponse> CreateAccessCodeSharedAsync(CreateAccessCodeSharedRequest request);
        Task<CreateAccessCodeSharedResponse> UpdateCustomerCreateAccessCodeSharedAsync(CreateAccessCodeSharedRequest request);
        Task<GetAccessCodeResultResponse> GetAccessCodeResultAsync(GetAccessCodeResultRequest request);
        Task<DirectPaymentResponse> DirectPaymentAsync(DirectPaymentRequest request);
        Task<DirectPaymentResponse> UpdateCustomerDirectPaymentAsync(DirectPaymentRequest request);
        Task<DirectAuthorisationResponse> DirectAuthorisationAsync(DirectAuthorisationRequest request);
        Task<DirectCustomerResponse> DirectCustomerCreateAsync(DirectCustomerRequest request);
        Task<DirectRefundResponse> DirectRefundAsync(DirectRefundRequest request);
        Task<DirectCustomerSearchResponse> DirectCustomerSearchAsync(DirectCustomerSearchRequest request);
        Task<TransactionSearchResponse> QueryTransactionAsync(long transactionID);
        Task<TransactionSearchResponse> QueryTransactionAsync(string accessCode);
        Task<TransactionSearchResponse> QueryInvoiceRefAsync(string invoiceRef);
        Task<TransactionSearchResponse> QueryInvoiceNumberAsync(string invoiceNumber);
        Task<DirectSettlementSearchResponse> SettlementSearchAsync(string request);
        Task<Direct3DSecureEnrollResponse> ThreeDSEnrollAsync(Direct3DSecureEnrollRequest request);
        Task<Direct3DSecureVerifyResponse> ThreeDSVerifyAsync(Direct3DSecureVerifyRequest request);

        string GetRapidEndpoint();
        void SetRapidEndpoint(string value);
        void SetCredentials(string apiKey, string password);
        void SetVersion(int version);
        bool IsValid();
        List<string> GetErrorCodes();
    }
}
```

```csharp
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ABC060A___Shiritori
{
    class Program
    {
        static void Main(string[] args)
        {
            string[] input = Console.ReadLine().Split(' ');

            char lastChar = input.First().First();
            bool isShiritorable = true;

            foreach (string sentence in input)
            {
                if(lastChar != sentence.First())
                {
                    isShiritorable = false;
                }

                lastChar = sentence.Last();
            }

            string result = "NO";

            if (isShiritorable)
            {
                result = "YES";
            }

            Console.WriteLine(result);

        }
    }
}
```

```csharp
using System;


namespace ConsoleApp9
{
    class Program
    {
        static void Main(string[] args)
        {
            for (int a = 1; a <= 10000; a++)
            {
                string B = Console.ReadLine();
                int b = int.Parse(B);
                if (b == 0)
                {
                    break;
                }
                else
                {
                    Console.WriteLine("case " + a + ": " + b);
                }
            }
        }
    }
}
```

```csharp
using System;
using System.Collections.Generic;
using System.Linq;

namespace AtCoder.ABC042
{
    class ProblemC
    {
        static void Main()
        {
            var nk = ReadIntArray();
            var n = nk[0];
            var k = nk[1];
            var ds = ReadIntArray();
            for (int i = n; i >= 0; i--)
            {
                if (EnumerateDigt(i).Any(v => ds.Contains(v)))
                    continue;
                Console.WriteLine(i);
                break;
            }
        }

        static IEnumerable<int> EnumerateDigt(int value)
        {
            while (value > 0)
            {
                yield return value % 10;
                value /= 10;
            }
        }

        public static string ReadLine() => Console.ReadLine();

        public static int ReadInt() => int.Parse(ReadLine());

        public static int[] ReadIntArray() => ReadLine().Split(' ').Select(v => int.Parse(v)).ToArray();
    }
}
```

```csharp
using System;
using System.Collections.Generic;
using System.Linq;

namespace test
{
    class Program
    {
        static void Main(string[] args)
        {
            var N = ReadInt();
            var a = ReadArrayLong();
            var sumA = new long[3 * N + 1];
            for (int i = 0; i < a.Length; i++) sumA[i + 1] = sumA[i] + a[i];
            var ans = long.MinValue;
            for (int i = N; i <= 2 * N; i++)
            {
                var left = sumA[i] - a.Take(i).OrderBy(x => x).Take(i - N).Sum();
                var right = sumA[3 * N] - sumA[i] - a.Skip(i).OrderByDescending(x => x).Take(N - (i - N)).Sum();
                if (left - right > ans) ans = left - right;
            }

            Console.WriteLine(ans);
            Console.ReadLine();
        }

        static string Read() { return Console.ReadLine(); }
        static int ReadInt() { return int.Parse(Read()); }
        static long ReadLong() { return long.Parse(Read()); }
        static int[] ReadArrayInt() { return Read().Split(' ').Select(s => int.Parse(s)).ToArray(); }
        static long[] ReadArrayLong() { return Read().Split(' ').Select(s => long.Parse(s)).ToArray(); }
    }
}
```

```csharp
}

            return null;
        }

        public static void WriteConfigKey(
            XmlNode parentNode,
            string key,
            string value)
        {
            if ((parentNode != null) &&
                (parentNode.ChildNodes != null) &&
                (parentNode.ChildNodes.Count > 0))
            {
                XmlNode theNode = null;

                foreach (XmlNode node in parentNode.ChildNodes)
                {
                    if ((node.Name.ToUpper().Equals("ADD")) &&
                        (node.Attributes != null) &&
                        (node.Attributes["key"] != null) &&
                        (node.Attributes["key"].Value.ToUpper().Equals(key.ToUpper())))
                    {
                        theNode = node;
                        break;
                    }
                }

                if ((theNode != null) &&
                    (theNode.Attributes != null) &&
                    (theNode.Attributes["value"] != null))
                {
                    var theNodeValue = theNode.Attributes["value"];
                    theNodeValue.Value = value;
                }
            }
        }
    }
}
```

```csharp
using Microsoft.AspNetCore.Hosting;
using Microsoft.AspNetCore.Builder;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore;
using Microsoft.Extensions.Hosting;
using Microsoft.Extensions.DependencyInjection;
using DependencyInjection.Components;
using DependencyInjection.Services;

namespace DependencyInjection
{
    public class Startup
    {
        public void ConfigureServices(IServiceCollection services)
        {
            services.AddRazorComponents();
            services.AddMvc();

            services.AddTransient<TheTransientClock>();
            services.AddSingleton<TheSingletonClock>();
            services.AddScoped<TheScopedClock>();
        }

        // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
        public void Configure(IApplicationBuilder app, IHostEnvironment env)
        {
            if (env.IsDevelopment())
            {
                app.UseDeveloperExceptionPage();
            }
            else
            {
                // The default HSTS value is 30 days. You may want to change this for production scenarios, see https://aka.ms/aspnetcore-hsts.
                app.UseHsts();
            }

            app.UseHttpsRedirection();
            app.UseStaticFiles();

            app.UseRouting(routes =>
            {
                routes.MapRazorPages();
                routes.MapComponentHub<App>("app");
            });
        }
    }

    public class Program
    {
        public static void Main(string[] args)
        {
            CreateHostBuilder(args).Build().Run();
        }

        public static IHostBuilder CreateHostBuilder(string[] args) =>
            Host.CreateDefaultBuilder(args)
                .ConfigureWebHostDefaults(webBuilder =>
                {
                    webBuilder.UseStartup<Startup>();
                    webBuilder.UseEnvironment(Environments.Development);
                });
    }
}
```

```csharp
using System.Linq;
using System.Collections.Generic;
using System;

public static class Permi
{
    public static IEnumerable<IEnumerable<T>> Perm<T>(this IEnumerable<T> items, int? k = null)
    {
        if (k == null) k = items.Count();
        if (k == 0) yield return Enumerable.Empty<T>();
        else
        {
            var i = 0;
            foreach (var x in items)
            {
                var xs = items.Where((_, index) => i != index);
                foreach (var c in Perm(xs, k - 1))
                    yield return c.Before(x);
                i++;
            }
        }
    }
    public static IEnumerable<T> Before<T>(this IEnumerable<T> items, T first)
    {
        yield return first;
        foreach (var i in items) yield return i;
    }
}

public class Hello
{
    public static void Main()
    {
        while (true)
        {
            var n = int.Parse(Console.ReadLine().Trim());
            var m = int.Parse(Console.ReadLine().Trim());
            if (n == 0 && m == 0) break;
            var a = new string[n];
            for (int i = 0; i < n; i++) a[i] = Console.ReadLine().Trim();
            var hs = new HashSet<long>();
            var b = Enumerable.Range(0, n).Perm(m);
            foreach (var y in b)
            {
                var w = "";
                foreach (var x in y)
                    w += a[x];
                hs.Add(long.Parse(w));
            }
            Console.WriteLine(hs.Count());
        }
    }
}
```

```csharp
using System;

class Program
{
    static void Main()
    {
        
        bool[,] a = new bool[4, 13];
        int c = int.Parse(Console.ReadLine());
        
        var b;
        int n;
        string ret = "";
        
        for (int i = 0; i < c; i++)
        {
            b = Console.ReadLine().Split(' ');
            n = int.Parse(b[1]);
            
                 if (b[0] == "S") { a[0, n] = true; }
            else if (b[0] == "H") { a[1, n] = true; }
            else if (b[0] == "C") { a[2, n] = true; }
            else if (b[0] == "D") { a[3, n] = true; }
        }
        
        for (int i = 0; i < 4; i++)
        {
            for (int j = 1 ; j <= 13; j++)
            {
                if (!a[i, j]) 
                {
                         if (i == 0) { ret = "S " + j.ToString(); }
                    else if (i == 1) { ret = "H " + j.ToString(); }
                    else if (i == 2) { ret = "C " + j.ToString(); }
                    else if (i == 3) { ret = "D " + j.ToString(); }
                    
                    Console.WriteLine(ret);
                }
            }
         }
    }
}
```

```csharp
using System;
class Min2019{
	static void Main(string[] args){
		string[] LR = Console.ReadLine().Split(' ');
		int L = int.Parse(LR[0]);
		int R = int.Parse(LR[1]);
		int MinAns = 2232;
		for(int i = L;i <= Math.Min(L + 2018,R - 1);i++){
			for(int j = i + 1;j <= Math.Min(i + 2019,R);j ++){
				int MAns = ((i % 2019) * (j % 2019)) % 2019;
				if(MAns < MinAns)MinAns = MAns;
			}
		}
		Console.WriteLine(MinAns);
	}
}
```

```csharp
using System;
using System.Linq;
using System.Collections.Generic;

namespace Miscelleneous {
   class Program {
      public static int cin() { return int.Parse(Console.ReadLine()); }
      public static void print(object s) { Console.WriteLine(s.ToString()); }
      static bool[,] Map;
      static void Main(string[] args) {
         string s;
         int x0=0, y0=0;
         bool shut;

         while (true) {
            shut=false;
            Map=new bool[8,8];
            for (int j = 0; j<8; j++) {
               s=Console.ReadLine();
               if (string.IsNullOrEmpty(s)) goto End;
               for (int i = 0; i<8; i++) {
                  Map[i,j]=s[i]=='1';
                  if (!shut&&s[i]=='1') { shut=true; x0=i; y0=j; }
               }
            }
            print(Image(x0,y0));
            Console.ReadLine();
         }
         End:
         Console.ReadLine();
      }

      static int[,,] F = { 
         { { 0,0 },{ 1,0 },{ 0,1 },{ 1,1 } } ,
         { { 0,0 },{ 0,1 },{ 0,2 },{ 0,3 } } ,
         { { 0,0 },{ 1,0 },{ 2,0 },{ 3,0 } } ,
         { { 0,0 },{ -1,1 },{ 0,1 },{ -1,2 } },
         { { 0,0 },{ 1,0 },{ 1,1 },{ 2,1 } },
         { { 0,0 },{ 0,1 },{ 1,1 },{ 1,2 } }
      };

      static char Image(int x, int y) {
         char Res;
         bool go;
         for (int g = 0; g<6; g++) {
            go=true;
            for (int j = 0; j<4; j++) {
               if (!G(x+F[g,j,0],y+F[g,j,1])) { 
                  go=false; break; 
               }
            }
            if (go) { Res=(char)(65+g); return Res; }
         }
         return 'G';
      }

      static bool G(int x, int y) {
         if (x<0||x>=8||y>=8) return false;//Heaven
         return Map[x,y];
      }

   }
}
```

```csharp
using System;

class Program
    {
        static void Main(string[] args)
        {
            int retu = 0, gyou = 0;//?????¨???
            int[,] objA;
            int[] numlist,objB;
            int[] anslist;
            int ans = 0;
            string[] getdata = Console.ReadLine().Split();

            retu = int.Parse(getdata[0]);
            gyou = int.Parse(getdata[1]);

            objA = new int[retu, gyou];
            objB = new int[gyou];
            numlist = new int[gyou];
            anslist = new int[retu];

            //??£??\??????objA
            for(int x=0; x < retu; x++)
            {
                getdata = Console.ReadLine().Split();
                for(int y = 0; y < gyou; y++)
                {
                    objA[x,y] = int.Parse(getdata[y]);
                }

            }
            //??£??\??????objB
            for(int x=0; x < gyou; x++){
                objB[x] = int.Parse(Console.ReadLine());
            }

            //?¨??????????

                for (int x = 0; x < retu; x++)
                {
                    for (int y = 0; y < gyou; y++)
                    {
                        ans += (objA[x,y] * objB[y]);
                    }
                    anslist[x] = ans;
                    ans = 0;
                }
            //????????????
            foreach(int num in anslist)
            {
                Console.WriteLine(num);
            }
        }
    }
```

```csharp
using System;
using System.Linq;
using System.Collections.Generic;

struct Pair {
  public string a, b;
  public Pair(string x, string y) { a = x; b = y; }
}

class Program {
  static List<Pair> Combinations(List<string> lst) {
    return lst.SelectMany((x, idx) => lst.Skip(idx + 1).Select(y => new Pair(x, y))).ToList();
  }
  static void Main() {
    var a = Console.ReadLine().Split().Select(int.Parse).ToArray();
    int n = a[0];
    int f = a[1];
    var p = new List<Pair>();
    for (int i = 0; i < n; i++) {
      p.AddRange(Combinations(Console.ReadLine().Split().Skip(1).OrderBy(x => x).ToList()));
    }
    p = p.OrderBy(x => x.a).ThenBy(x => x.b).ToList();
    int cnt = 0;
    var t = new Pair("", "");
    var rp = new List<Pair>();
    foreach (var item in p) {
      if (item.Equals(t)) cnt++;
      else if (cnt >= f) {
        rp.Add(t);
        t = item;
        cnt = 1;
      } else {
        t = item;
        cnt = 1;
      }
    }
    Console.WriteLine(rp.Count);
    foreach (var item in rp) Console.WriteLine("{0} {1}", item.a, item.b);
  }
}
```

```csharp
/*
 * TimeoutAttribute.cs.
 *
 * Contact:
 *   Moonlight List (moonlight-list@lists.ximian.com)
 *
 * Copyright 2008 Novell, Inc. (http://www.novell.com)
 *
 * See the LICENSE file included with the distribution for details.
 * 
 */

using System;

namespace Microsoft.VisualStudio.TestTools.UnitTesting
{
	[AttributeUsage (AttributeTargets.Method, AllowMultiple=false)]
	public sealed class TimeoutAttribute : Attribute
	{
		private int timeout;

		public TimeoutAttribute (int timeout)
		{
			this.timeout = timeout;
		}

		public int Timeout {
			get { return timeout; }
		}
	}
}
```

```csharp
using System;
public class Hello{
    public static void Main(){
        int N = int.Parse(Console.ReadLine());
        int sum = 0;
        for(int x = 0;x < N;x++){
            int input = int.Parse(Console.ReadLine());
            sum += input;
        }
        if(sum % 10 == 0){
            Console.WriteLine(0);
        }else{
            Console.WriteLine(sum);
        }
    }
}
```

```csharp
using System;
using System.Collections.Generic;
using System.Linq;
class Program
    {
        static void Main(string[] args)
        {
            //0<=x,y,z<=K
            //X+Y+Z=S
            var Array = Console.ReadLine().Split().Select(x => int.Parse(x)).ToArray();
            int K = Array[0];
            int S = Array[1];
            int Count = 0;
            int z = 0;
            for (int x = 0; x <= K; x++)
            {
                for (int y = 0; y <= K; y++)
                {
                    z = S - (x + y);
                    if (0 <= z && z <= K)
                        Count++;
                }
            }

            Console.WriteLine(Count);
        }

    }
```

```csharp
*/
using System;
using System.Collections.Generic;

using Aliyun.Acs.Core.Transform;
using Aliyun.Acs.BssOpenApi.Model.V20171214;

namespace Aliyun.Acs.BssOpenApi.Transform.V20171214
{
    public class UnsubscribeBillToOSSResponseUnmarshaller
    {
        public static UnsubscribeBillToOSSResponse Unmarshall(UnmarshallerContext context)
        {
			UnsubscribeBillToOSSResponse unsubscribeBillToOSSResponse = new UnsubscribeBillToOSSResponse();

			unsubscribeBillToOSSResponse.HttpResponse = context.HttpResponse;
			unsubscribeBillToOSSResponse.RequestId = context.StringValue("UnsubscribeBillToOSS.RequestId");
			unsubscribeBillToOSSResponse.Success = context.BooleanValue("UnsubscribeBillToOSS.Success");
			unsubscribeBillToOSSResponse.Code = context.StringValue("UnsubscribeBillToOSS.Code");
			unsubscribeBillToOSSResponse.Message = context.StringValue("UnsubscribeBillToOSS.Message");
        
			return unsubscribeBillToOSSResponse;
        }
    }
}
```

```ruby
module Cleric
  class ConsoleAnnouncer
    include ANSI::Code

    def initialize(io)
      @io = io
    end

    def chatroom_added_to_repo(repo, chatroom)
      write_success(%Q[Repo "#{repo}" notifications will be sent to chatroom "#{chatroom}"])
    end

    def commits_without_pull_requests(repo, commits)
      write_failure(%Q[Repo "#{repo}" has the following commits not covered by pull requests:\n] +
        commits.join("\n"))
    end

    def repo_added_to_team(repo, team)
      write_success(%Q[Repo "#{repo}" added to team "#{team}"])
    end

    def repo_audit_passed(repo)
      write_success(%Q[Repo "#{repo}" passed audit])
    end

    def repo_created(repo)
      write_success(%Q[Repo "#{repo}" created])
    end

    def repo_fetching_latest_changes
      write_action("Fetching latest changes for local repo")
    end

    def repo_obsolete_pull_request(pr_number, base, head)
      write_warning(%Q[Commits #{base}..#{head} in pull request #{pr_number} are no longer present in the repo])
    end

    def user_added_to_team(username, team)
      write_success(%Q[User "#{username}" added to team "#{team}"])
    end

    def user_not_found(email)
      write_failure(%Q[User "#{email}" not found])
    end

    def user_removed_from_org(username, email, org)
      write_success(%Q[User "#{username}" (#{email}) removed from organization "#{org}"])
    end

    private

    def write_action(message)
      @io.puts(message)
    end

    def write_failure(message)
      @io.puts(red { message })
    end

    def write_success(message)
      @io.puts(green { message })
    end

    def write_warning(message)
      @io.puts(yellow { message })
    end
  end
end
```

```ruby
File.join(destination.to_s, '.solr_wrapper.yml')
      ]
    end

    before do
      generator.destination_root = destination
      generator.solr_wrapper_config
    end

    after do
```

```ruby
module Api
  module V1
    # reports endpoint.  No swagger docs since this is admin-user only
    # This returns tsv files
    class ReportsController < ApiBaseController
      include ActionController::RequestForgeryProtection

      before_action :authenticate_admin_api_user!

      def show
        report_name = params[:report_name].to_sym
        response.headers['Content-Disposition'] = "attachment; filename=#{report_name}_data.tsv"
        begin
          render plain: ReportsService.get_report_data(report_name)
        rescue ArgumentError => e
          render json: { error: e.message }, status: :bad_request
        end
      end
    end
  end
end
```

```ruby
sign_in(user, scope: :user)
        delete(:depublish_current, params: {entry_id: entry})

        expect(response.status).to redirect_to(main_app.admin_entry_path(entry))
      end

      it 'depublishes published revision' do
        user = create(:user)
        entry = create(:entry, :published, with_publisher: user)

        sign_in(user, scope: :user)
        delete(:depublish_current, params: {entry_id: entry})

        expect(entry).not_to be_published
      end

      it 'requires the signed in user to be publisher of the parent entry or account' do
        user = create(:user)
        account = create(:account, with_editor: user)
        entry = create(:entry, account: account, with_editor: user)

        sign_in(user, scope: :user)
        delete(:depublish_current, params: {entry_id: entry})

        expect(response.status).to redirect_to(main_app.admin_root_path)
      end

      it 'requires authentication' do
        entry = create(:entry)

        delete(:depublish_current, params: {entry_id: entry})

        expect(response).to redirect_to(main_app.new_user_session_path)
      end
    end
  end
end
```

```ruby
a = gets.chomp.split(" ").map(&:to_i)
b = gets.chomp.split(" ").map(&:to_i)

c = Array.new(a[0], 0)
c[a[0]-1] = b[-1]
d = Array.new(a[0],0)

for i in 1..(a[0]-1)
  c[a[0]-i-1] = b[a[0]-i-1] > c[a[0]-i] ? b[a[0]-i-1] : c[a[0]-i]
  d[a[0]-i-1] = c[a[0]-i-1] - b[a[0]-i-1]
end
p d.count(d.max)
```

```ruby
require "spec_helper"

RSpec.describe KnuckleCluster do
  it "has a version number" do
    expect(KnuckleCluster::VERSION).not_to be nil
  end

  # it "does something useful" do
  #   expect(false).to eq(true)
  # end
end
```

```ruby
N, Y = STDIN.gets.split(' ').map(&:to_i)
if Y % 1000 != 0
 puts '-1 -1 -1'
 return
end
Y /= 1000
if Y < N
puts '-1 -1 -1' 
return 
end
num = [Y / 10, Y % 10 / 5, Y % 5]
diff = N - num.sum 
if diff < 0 or diff % 4 != 0
puts '-1 -1 -1'
return
 end
 diff %= 4
num.each_with_index do |n, i|
  d = [n, diff].min
  diff -= d
  num[i] -=  d
  num[i + 1] += d * 5
end
puts num.join(' ')
```

```ruby
module Wings
  class ActiveFedoraClassifier < ActiveFedora::ModelClassifier
    private

    def classify(model_value)
      if (match = model_value.match(/Wings\((.*)\)/))
        valkyrie_class = match[1].constantize
        Wings::ActiveFedoraConverter::DefaultWork(valkyrie_class)
      else
        super
      end
    end
  end
end
```

```ruby
=begin
PureCloud Platform API

With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.

OpenAPI spec version: v2
Contact: DeveloperEvangelists@genesys.com
Generated by: https://github.com/swagger-api/swagger-codegen.git

License: ININ
http://www.inin.com

Terms of Service: https://developer.mypurecloud.com/tos

=end

require 'date'

module PureCloud
  class FlowEntityListing
    attr_accessor :entities

    attr_accessor :page_size

    attr_accessor :page_number

    attr_accessor :total

    attr_accessor :self_uri

    attr_accessor :first_uri

    attr_accessor :previous_uri

    attr_accessor :next_uri

    attr_accessor :last_uri

    attr_accessor :page_count

    # Attribute mapping from ruby-style variable name to JSON key.
    def self.attribute_map
      {
        
        :'entities' => :'entities',
        
        :'page_size' => :'pageSize',
        
        :'page_number' => :'pageNumber',
        
        :'total' => :'total',
        
        :'self_uri' => :'selfUri',
```

```ruby
require 'base64'
require 'digest/md5'

class AmazonBackup < ActiveRecord::Base
  attr_accessible :last_id
  
  def self.last_id
    first.last_id
  end

  def self.update_id(new_id)
    first.update_column(:last_id, new_id)
  end

  def self.execute
    last_id = AmazonBackup.last_id

    Post.where("id > ?", last_id).limit(1000).order("id").each do |post|
      AWS::S3::Base.establish_connection!(
        :access_key_id => Danbooru.config.amazon_s3_access_key_id,
        :secret_access_key => Danbooru.config.amazon_s3_secret_access_key,
        :server => "s3.amazonaws.com"
      )

      if File.exists?(post.file_path)
        base64_md5 = Base64.encode64(Digest::MD5.digest(File.read(post.file_path)))
        AWS::S3::S3Object.store(File.basename(post.file_path), open(post.file_path, "rb"), Danbooru.config.amazon_s3_bucket_name, "Content-MD5" => base64_md5)
      end

      if post.has_preview? && File.exists?(post.preview_file_path)
        AWS::S3::S3Object.store("preview/#{post.md5}.jpg", open(post.preview_file_path, "rb"), Danbooru.config.amazon_s3_bucket_name)
      end

      if File.exists?(post.large_file_path)
```

```ruby
# -*- encoding: utf-8 -*-
$:.push File.expand_path('../lib', __FILE__)

Gem::Specification.new do |gem|
  gem.name = 'rails-data-explorer'
  gem.version = '1.0.4'
  gem.platform = Gem::Platform::RUBY

  gem.authors = ['Jo Hund']
  gem.email = 'jhund@clearcove.ca'
  gem.homepage = 'https://github.com/jhund/rails-data-explorer'
  gem.licenses = ['MIT']
  gem.summary = 'A Rails engine plugin for exploring data in your app with charts and statistics.'
  gem.description = %(rails-data-explorer is a Rails Engine plugin that makes it easy to explore the data in your app using charts and statistics.)

  gem.files = `git ls-files`.split("\n")
  gem.test_files = `git ls-files -- {test,spec,features}/*`.split("\n")

  gem.add_dependency 'rails', '>= 3.1.0'
  gem.add_dependency 'color', '~> 1.7', '>= 1.7.1'
  gem.add_dependency 'descriptive-statistics', '~> 2.1', '>= 2.1.2'
  gem.add_dependency 'distribution', '~> 0.7', '>= 0.7.1'
  gem.add_dependency 'interpolate', '~> 0.3', '>= 0.3.0'

  gem.add_development_dependency 'bundler', '~> 1.0', '>= 1.0.0'
  gem.add_development_dependency 'minitest', '>= 0'
  gem.add_development_dependency 'minitest-spec-expect', '>= 0'
  gem.add_development_dependency 'rake', '>= 0'
  gem.add_development_dependency 'yui-compressor', '>= 0'
end
```

```ruby
run do |opts, args, cmd|
          puts cmd.help(:verbose => opts[:verbose])
          exit 0
        end
      end
    end

    module Environment
      def self.command
        @cmd ||= Cri::Command.define do
```

```ruby
options.merge!('command' => 'listPortableIpRanges') 
          else
            options.merge!('command' => 'listPortableIpRanges')
          end
          request(options)
        end
      end

    end
  end
end
```

```ruby
###
# This Ruby source file was generated by test-to-ruby.xsl
# and is a derived work from the source document.
# The source document contained the following notice:
=begin


Copyright (c) 2001 World Wide Web Consortium, 
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University).  All 
Rights Reserved.  This program is distributed under the W3C's Software
Intellectual Property License.  This program is distributed in the 
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR 
PURPOSE.  

See W3C License http://www.w3.org/Consortium/Legal/ for more details.


=end
#

require File.expand_path(File.join(File.dirname(__FILE__), '..', '..', '..', 'helper'))


###
#     The lang attribute specifies the language code defined in RFC 1766. 
#     Retrieve the lang attribute of the ADDRESS element and examine its value.  
# @author NIST
# @author Mary Brady
```

```ruby
# frozen_string_literal: true

line = readline.split(' ').map(&:to_i)
a, b = line
S = a * b
C = 2 * (a + b)
puts "#{S} #{C}"
```

```ruby
a = gets.to_i
b = gets.to_i
c = gets.to_i
x = gets.to_i

count = 0

(0..a).each do |d|
  (0..b).each do |e|
    (0..c).each do |f|
      if x == (500 * d) + (100 * e) + (50 * f)
        count += 1
      end
    end
  end
end

puts count
```

```ruby
Dynamoid.adapter.put_item(test_table4, id: '1', order: 2, range: 2.0)
      Dynamoid.adapter.put_item(test_table4, id: '1', order: 3, range: 3.0)
      Dynamoid.adapter.put_item(test_table4, id: '1', order: 4, range: 4.0)
      Dynamoid.adapter.put_item(test_table4, id: '1', order: 5, range: 5.0)
      Dynamoid.adapter.put_item(test_table4, id: '1', order: 6, range: 6.0)
    end

    it 'performs query on a table with a range and selects items less than that is in the correct order, scan_index_forward true' do
      query = Dynamoid.adapter.query(test_table4, hash_value: '1', range_greater_than: 0, scan_index_forward: true).flat_map { |i| i }.to_a
      expect(query[0]).to eq(id: '1', order: 1, range: BigDecimal(1))
      expect(query[1]).to eq(id: '1', order: 2, range: BigDecimal(2))
      expect(query[2]).to eq(id: '1', order: 3, range: BigDecimal(3))
      expect(query[3]).to eq(id: '1', order: 4, range: BigDecimal(4))
      expect(query[4]).to eq(id: '1', order: 5, range: BigDecimal(5))
      expect(query[5]).to eq(id: '1', order: 6, range: BigDecimal(6))
    end

    it 'performs query on a table with a range and selects items less than that is in the correct order, scan_index_forward false' do
```

```ruby
# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::Relay::Mgmt::V2017_04_01
  #
  # A service client - single point of access to the REST API.
  #
  class RelayManagementClient < MsRestAzure::AzureServiceClient
    include MsRestAzure
    include MsRestAzure::Serialization

    # @return [String] the base URI of the service.
    attr_accessor :base_url

    # @return Credentials needed for the client to connect to Azure.
    attr_reader :credentials

    # @return [String] Subscription credentials which uniquely identify the
    # Microsoft Azure subscription. The subscription ID forms part of the URI
    # for every service call.
    attr_accessor :subscription_id

    # @return [String] Client API version.
    attr_reader :api_version

    # @return [String] The preferred language for the response.
    attr_accessor :accept_language

    # @return [Integer] The retry timeout in seconds for Long Running
    # Operations. Default value is 30.
    attr_accessor :long_running_operation_retry_timeout

    # @return [Boolean] Whether a unique x-ms-client-request-id should be
    # generated. When set to true a unique x-ms-client-request-id value is
    # generated and included in each request. Default is true.
    attr_accessor :generate_client_request_id
```

```ruby
# Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
#
# You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
# copy, modify, and distribute this software in source code or binary form for use
# in connection with the web services and APIs provided by Facebook.
#
# As with any software that integrates with the Facebook platform, your use of
# this software is subject to the Facebook Platform Policy
# [http://developers.facebook.com/policy/]. This copyright notice shall be
# included in all copies or substantial portions of the software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
# IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

# FB:AUTOGEN

module FacebookAds
  # This class is auto-generated.

  # For any issues or feature requests related to this class, please let us know
  # on github and we'll fix in our codegen framework. We'll not be able to accept
  # pull request for this class.

  class CustomAudienceDataSource < AdObject
    SUB_TYPE = [
      "ANYTHING",
      "APP_USERS",
      "CAMPAIGN_CONVERSIONS",
      "COMBINATION_CUSTOM_AUDIENCE_USERS",
      "CONSTANT_CONTACTS_EMAIL_HASHES",
      "CONTACT_IMPORTER",
      "CONVERSION_PIXEL_HITS",
      "COPY_PASTE_EMAIL_HASHES",
      "CUSTOM_AUDIENCE_USERS",
      "DATA_FILE",
      "DYNAMIC_RULE",
      "ENGAGEMENT_EVENT_USERS",
      "EXPANDED_AUDIENCE",
      "EXTERNAL_IDS",
      "EXTERNAL_IDS_MIX",
      "FB_EVENT_SIGNALS",
      "FB_PIXEL_HITS",
      "HASHES",
      "HASHES_OR_USER_IDS",
      "HOUSEHOLD_EXPANSION",
      "IG_BUSINESS_EVENTS",
      "IG_PROMOTED_POST",
      "INSTANT_ARTICLE_EVENTS",
      "LOOKALIKE_PLATFORM",
      "MAIL_CHIMP_EMAIL_HASHES",
      "MOBILE_ADVERTISER_IDS",
      "MOBILE_APP_COMBINATION_EVENTS",
      "MOBILE_APP_CUSTOM_AUDIENCE_USERS",
      "MOBILE_APP_EVENTS",
      "MULTICOUNTRY_COMBINATION",
      "MULTI_DATA_EVENTS",
      "MULTI_EVENT_SOURCE",
      "MULTI_HASHES",
      "NOTHING",
      "OFFLINE_EVENT_USERS",
      "PAGE_FANS",
      "PAGE_SMART_AUDIENCE",
      "PARTNER_CATEGORY_USERS",
      "PLACE_VISITS",
      "PLATFORM",
      "PLATFORM_USERS",
      "SEED_LIST",
      "SIGNAL_SOURCE",
      "SMART_AUDIENCE",
      "STORE_VISIT_EVENTS",
      "S_EXPR",
      "TOKENS",
      "USER_IDS",
      "VIDEO_EVENTS",
      "VIDEO_EVENT_USERS",
      "WEB_PIXEL_COMBINATION_EVENTS",
      "WEB_PIXEL_HITS",
      "WEB_PIXEL_HITS_CUSTOM_AUDIENCE_USERS",
    ]

    TYPE = [
      "CONTACT_IMPORTER",
      "COPY_PASTE",
      "EVENT_BASED",
      "FILE_IMPORTED",
      "HOUSEHOLD_AUDIENCE",
      "SEED_BASED",
      "THIRD_PARTY_IMPORTED",
      "UNKNOWN",
    ]


    field :creation_params, 'string'
    field :sub_type, { enum: -> { SUB_TYPE }}
    field :type, { enum: -> { TYPE }}
    has_no_id
    has_no_get
    has_no_post
    has_no_delete

  end
end
```

```ruby
require "language/go"

class Influxdb < Formula
  desc "Time series, events, and metrics database"
  homepage "https://influxdb.com"
  url "https://github.com/influxdb/influxdb/archive/v0.9.5.1.tar.gz"
```

```ruby
map = {
        title: title,
        description: description,
        date_depicted: date_depicted,
        issue_year: issue_year,
        source_uri: source_uri,
        tag_list: tag_list,
        subject_area: subject_area,
        publisher: publisher,
        authors: authors,
        scale: scale,
        published_date: published_date,
        reprint_date: reprint_date,
        publication_place: publication_place,
        metadata_projection: metadata_projection,
        metadata_lat: metadata_lat,
        metadata_lon: metadata_lon, 
        call_number: call_number,
        unique_id: uuid,
        status: :unloaded,
        map_type: 'is_map',
        public: true
      } 
      map = Map.new(map)
      map.upload = File.new(upload_filename)

      map.import_id = self.id
      map.owner = self.user
      map.users << self.user
      if map.save
        log_info "Saved new Map" + map.inspect
        Import.increment_counter(:imported_count, self.id)
      else
        log_info "Didn't save new Map" + map.inspect
        log_info "Errors" + map.errors.messages.inspect
      end
    end

  end

  def save_maps_to_layers
    log_info "Saving maps to layers"
    ids = self.layer_ids.split(",")
    layers = Layer.find(ids)
    layers.each do | layer |
      log_info "adding maps to layer"
      maps_to_add = self.maps.select{ |map| !layer.maps.include?(map)}
      layer.maps << maps_to_add
      save
    end
    log_info "finished saving maps to layers"
  end

  
  #counts number of files in the directory 
  def dir_file_count
    directory = APP_CONFIG['import_maps_sftp_path']
    count =  Dir[File.join(directory, '**')].count { |file| File.file?(file) }

    return count
  end
  
  protected

  def update_count
    file_count = dir_file_count
  end
  

  def log_info(msg)
    puts msg  if defined? Rake
    import_logger.info msg
  end
  
  def log_error(msg)
    puts msg  if defined? Rake
    import_logger.error msg
  end
  
  
  def delete_logfile
    if log_filename && log_filename.include?(".log") && File.exists?("#{Rails.root}/log/imports/#{log_filename}")
      File.delete("#{Rails.root}/log/imports/#{log_filename}")
    end
  end


  def numeric?(str)
    return true if str =~ /\A\d+\z/
    true if Float(str) rescue false
  end

end
```

```ruby
require "logstash/outputs/base"
require "logstash/namespace"

class LogStash::Outputs::Mongodb < LogStash::Outputs::Base

  config_name "mongodb"
  plugin_status "beta"

  # your mongodb host
  config :host, :validate => :string, :required => true

  # the mongodb port
  config :port, :validate => :number, :default => 27017

  # The database to use
  config :database, :validate => :string, :required => true

  config :user, :validate => :string, :required => false
  config :password, :validate => :password, :required => false

  # The collection to use. This value can use %{foo} values to dynamically
  # select a collection based on data in the event.
  config :collection, :validate => :string, :required => true

  # If true, store the @timestamp field in mongodb as an ISODate type instead
  # of an ISO8601 string.  For more information about this, see
  # http://www.mongodb.org/display/DOCS/Dates
```

```ruby
expect(message.errors[:base]).to include("Unknown query parameter(s): 'current'")
            end
          end
        end

        it 'validates organization_guids is an array' do
          message = DropletsListMessage.from_params organization_guids: 'tricked you, not an array'
          expect(message).to be_invalid
          expect(message.errors[:organization_guids].length).to eq 1
        end

        it 'validates space_guids is an array' do
          message = DropletsListMessage.from_params space_guids: 'tricked you, not an array'
          expect(message).to be_invalid
          expect(message.errors[:space_guids].length).to eq 1
        end

        it 'validates app_guids is an array' do
          message = DropletsListMessage.from_params app_guids: 'tricked you, not an array'
          expect(message).to be_invalid
          expect(message.errors[:app_guids].length).to eq 1
        end

        it 'validates states is an array' do
          message = DropletsListMessage.from_params states: 'not array at all'
          expect(message).to be_invalid
          expect(message.errors[:states].length).to eq 1
        end
      end
    end

    describe '#to_param_hash' do
      it 'excludes app_guid' do
        expect(DropletsListMessage.from_params({ app_guid: '24234' }).to_param_hash.keys).to match_array([])
      end

      it 'excludes package_guid' do
        expect(DropletsListMessage.from_params({ package_guid: '24234' }).to_param_hash.keys).to match_array([])
      end
    end

    describe 'validations' do
      it 'validates label_selector' do
        message = SpacesListMessage.from_params('label_selector' => '')

        expect_any_instance_of(Validators::LabelSelectorRequirementValidator).to receive(:validate).with(message).and_call_original
        message.valid?
      end
    end
  end
end
```

```ruby
# frozen_string_literal: true
# encoding: utf-8

require "support/ruby_version"

require "delegate"
require "time"
require "set"

require "active_support"
require "active_support/core_ext"
require "active_support/json"
require "active_support/inflector"
require "active_support/time_with_zone"
require "active_model"

require "mongo"

require "mongoid/version"
require "mongoid/config"
require "mongoid/persistence_context"
require "mongoid/loggable"
require "mongoid/clients"
require "mongoid/document"
require "mongoid/tasks/database"
require "mongoid/query_cache"

# If we are using Rails then we will include the Mongoid railtie. This has all
# the nifty initializers that Mongoid needs.
if defined?(Rails)
  require "mongoid/railtie"
end

# add english load path by default
I18n.load_path << File.join(File.dirname(__FILE__), "config", "locales", "en.yml")

module Mongoid
  extend Loggable
  extend self

  # A string added to the platform details of Ruby driver client handshake documents.
  #
  # @since 6.1.0
  PLATFORM_DETAILS = "mongoid-#{VERSION}".freeze

  # The minimum MongoDB version supported.
  MONGODB_VERSION = "2.6.0"

  # Sets the Mongoid configuration options. Best used by passing a block.
  #
  # @example Set up configuration options.
  #   Mongoid.configure do |config|
  #     config.connect_to("mongoid_test")
  #
  #     config.clients.default = {
  #       hosts: ["localhost:27017"],
  #       database: "mongoid_test",
  #     }
  #   end
  #
  # @return [ Config ] The configuration object.
  #
  # @since 1.0.0
  def configure
    block_given? ? yield(Config) : Config
  end

  # Convenience method for getting the default client.
  #
  # @example Get the default client.
  #   Mongoid.default_client
  #
  # @return [ Mongo::Client ] The default client.
  #
  # @since 5.0.0
  def default_client
    Clients.default
  end

  # Disconnect all active clients.
  #
  # @example Disconnect all active clients.
  #   Mongoid.disconnect_clients
  #
  # @return [ true ] True.
  #
  # @since 5.0.0
  def disconnect_clients
    Clients.disconnect
  end

  # Convenience method for getting a named client.
  #
  # @example Get a named client.
  #   Mongoid.client(:default)
  #
  # @return [ Mongo::Client ] The named client.
  #
  # @since 5.0.0
  def client(name)
    Clients.with_name(name)
  end

  # Take all the public instance methods from the Config singleton and allow
  # them to be accessed through the Mongoid module directly.
  #
  # @example Delegate the configuration methods.
  #   Mongoid.database = Mongo::Connection.new.db("test")
  #
  # @since 1.0.0
  delegate(*(Config.public_instance_methods(false) - [ :logger=, :logger ] << { to: Config }))
end
```

```ruby
# -*- encoding: utf-8 -*-
# stub: tux 0.3.0 ruby lib

Gem::Specification.new do |s|
  s.name = "tux".freeze
  s.version = "0.3.0"

  s.required_rubygems_version = Gem::Requirement.new(">= 1.3.6".freeze) if s.respond_to? :required_rubygems_version=
  s.require_paths = ["lib".freeze]
  s.authors = ["Gabriel Horner".freeze]
  s.date = "2011-04-10"
  s.description = "Tux dresses up sinatra in a shell. Use it to interact with your helpers, view rendering and your app's response objects. Tux also gives you commands to view your app's routes and settings.".freeze
  s.email = "gabriel.horner@gmail.com".freeze
  s.executables = ["tux".freeze]
  s.extra_rdoc_files = ["README.rdoc".freeze, "LICENSE.txt".freeze]
  s.files = ["LICENSE.txt".freeze, "README.rdoc".freeze, "bin/tux".freeze]
  s.homepage = "http://github.com/cldwalker/tux".freeze
  s.licenses = ["MIT".freeze]
  s.rubygems_version = "3.0.8".freeze
  s.summary = "Sinatra dressed for interactive ruby - a sinatra shell".freeze

  s.installed_by_version = "3.0.8" if s.respond_to? :installed_by_version

  if s.respond_to? :specification_version then
    s.specification_version = 3

    if Gem::Version.new(Gem::VERSION) >= Gem::Version.new('1.2.0') then
      s.add_runtime_dependency(%q<ripl>.freeze, [">= 0.3.5"])
      s.add_runtime_dependency(%q<ripl-rack>.freeze, [">= 0.2.0"])
      s.add_runtime_dependency(%q<ripl-multi_line>.freeze, [">= 0.2.4"])
      s.add_runtime_dependency(%q<sinatra>.freeze, [">= 1.2.1"])
      s.add_development_dependency(%q<bacon>.freeze, [">= 1.1.0"])
      s.add_development_dependency(%q<bacon-bits>.freeze, [">= 0.1.0"])
    else
      s.add_dependency(%q<ripl>.freeze, [">= 0.3.5"])
      s.add_dependency(%q<ripl-rack>.freeze, [">= 0.2.0"])
      s.add_dependency(%q<ripl-multi_line>.freeze, [">= 0.2.4"])
      s.add_dependency(%q<sinatra>.freeze, [">= 1.2.1"])
      s.add_dependency(%q<bacon>.freeze, [">= 1.1.0"])
      s.add_dependency(%q<bacon-bits>.freeze, [">= 0.1.0"])
    end
  else
    s.add_dependency(%q<ripl>.freeze, [">= 0.3.5"])
    s.add_dependency(%q<ripl-rack>.freeze, [">= 0.2.0"])
    s.add_dependency(%q<ripl-multi_line>.freeze, [">= 0.2.4"])
    s.add_dependency(%q<sinatra>.freeze, [">= 1.2.1"])
    s.add_dependency(%q<bacon>.freeze, [">= 1.1.0"])
    s.add_dependency(%q<bacon-bits>.freeze, [">= 0.1.0"])
  end
end
```

```ruby
module Midl
  module English
    # This class processes the MiDL Intermediate Rrepresentation query.
    class Query
      attr_reader :messages, :meta_data

      def initialize(meta_data)
        @meta_data = meta_data

        # process_meta_data
      end
    end
  end
end
```

```ruby
h = ((rect.attributes["width"].to_f * 10).round / 10.0).to_i #Inkscape bugs
			if w == 16 && h == 16
				rect.remove
			end
		end
		icon_f = File.new(icon[:file],'w+')
		icon_f.puts svgcrop
		icon_f.close
	else
		puts " -- #{icon[:name]} already exists"
	end
end #end of function

def get_output_filename(d,n)
	if (/rtl$/.match(n))
		outfile = "#{d}/#{n.chomp('-rtl')}-rtl.svg"
	else
		outfile = "#{d}/#{n}.svg"
	end
	return outfile
end

## DO IT
for COLOR in COLORS
	for SIZE in SIZES
		SRC="./#{COLOR}/source-panel-#{SIZE}.svg"
		PREFIX="../../#{THEME}/#{SIZE}x#{SIZE}"

		svg = Document.new(File.new(SRC, 'r'))

		if (ARGV[0].nil?) #render all SVGs
			puts "Rendering from icons in #{SRC}"
			# Go through every layer.
			svg.root.each_element("/svg/g[@inkscape:groupmode='layer']") do |context| 
				context_name = context.attributes.get_attribute("inkscape:label").value  
				puts "Going through layer '" + context_name + "'"
				context.each_element("g") do |icon|
					#puts "DEBUG #{icon.attributes.get_attribute('id')}"
					dir = "#{PREFIX}/#{context_name}"
					icon_name = icon.attributes.get_attribute("inkscape:label").value
					if icon_name.end_with?("-alt")
						puts " >> skipping icon '" + icon_name + "'"
					else
						chopSVG({ :name => icon_name,
								:id => icon.attributes.get_attribute("id"),
								:dir => dir,
								:file => get_output_filename(dir, icon_name)})
					end
				end
			end
			puts "\nrendered all SVGs"
		else #only render the icons passed
			icons = ARGV
			ARGV.each do |icon_name|
				icon = svg.root.elements["//g[@inkscape:label='#{icon_name}']"]
				dir = "#{PREFIX}/#{icon.parent.attributes['inkscape:label']}"
				chopSVG({ :name => icon_name,
						:id => icon.attributes["id"],
						:dir => dir,
						:file => get_output_filename(dir, icon_name),
						:forcerender => true})
			end
			puts "\nrendered #{ARGV.length} icons"
		end
	end
end
#EOF
```

```ruby
def test_empty_param_arg_not_ok
    assert_raises(ArgumentError) { AWSServiceCatalogCloudFormationProduct.new(name: '', client_args: { stub_responses: true }) }
  end

  def test_rejects_unrecognized_params
    assert_raises(ArgumentError) { AWSServiceCatalogCloudFormationProduct.new(unexpected: 9) }
  end
end

class AWSServiceCatalogCloudFormationProductSuccessPathTest < Minitest::Test

  def setup
    data = {}
    data[:method] = :describe_product_as_admin
    mock_data = {}
    mock_data[:product_view_detail] = {}
    mock_data[:provisioning_artifact_summaries] = []
    mock_data[:tags] = []
    mock_data[:tag_options] = []
    mock_data[:budgets] = []
    data[:data] = [mock_data]
    data[:client] = Aws::ServiceCatalog::Client
```

```ruby
#! /usr/bin/env ruby

$LOAD_PATH << "./src"

require 'optparse'
require 'fileutils'
require 'yaml'
require 'application'

configuration = {
    :participants => {},
    :participants_to_monitor => [],
    :output_directory => './out',
    :display_request_bodies => true,
    :display_response_bodies => true,
    :display_cookies => true,
    :skip_capture => false,
    :verbose => false
}

OptionParser.new do |o|
  o.banner = 'Usage: ./generate_html.rb [options]'

  o.on('-d', 'Run in development mode (overwrites dev.html)') do |development_mode|
    configuration[:development_mode] = development_mode
  end

  o.on('-o OUTPUT_DIR', "Output directory (defaults to '#{configuration[:output_directory]}')") do |output_directory|
    configuration[:output_directory] = output_directory
  end

  o.on('--hide_request_body', "Don't display request bodies") do
    configuration[:display_request_bodies] = false
  end

  o.on('--hide_response_body', "Don't display response bodies") do
    configuration[:display_response_bodies] = false
  end

  o.on('--hide_cookies', "Don't display cookie information") do
    configuration[:display_cookies] = false
  end

  configuration[:participants] = YAML.load_file('participants.yml').map { |participant| Hash[participant.map { |k,v| [k.to_sym,v] }] } if File.exists? 'particiants.yml'

  o.on('-r <participants file>', "Participants file if not in current directory") do |participants_yml|
    configuration[:participants] = YAML.load_file(participants_yml).map { |participant| Hash[participant.map { |k,v| [k.to_sym,v] }] }
  end

  participants = configuration[:participants].map { |participant| participant[:name] }
  o.on('-p PARTICIPANT', participants, 'Participant to capture (defaults to all)') do |participant|
    configuration[:participants_to_monitor] << participant
  end

  o.on('--skip_capture', 'Do not capture network traffic, re-use the results of a previous capture instead') do
    configuration[:skip_capture] = true
  end

  o.on('-v', 'verbose') do
    configuration[:verbose] = true
  end

  configuration[:test_events] = true
  o.on('-n', 'do not expect "Starting and Finishing" events') do
    configuration[:test_events] = false
  end

  o.on('-f', 'only display participants defined in participants.yml') do
    configuration[:strict_participants] = true
  end

  o.separator ''
  o.separator "#{o.summary_indent}Available Participants"
  o.separator "#{o.summary_indent}----------------------"
  configuration[:participants].each { |participant| o.separator("#{o.summary_indent}#{participant[:name]}") }
  o.separator ''

end::parse!

puts "Monitoring #{(configuration[:participants_to_monitor].empty? ? 'all participants' : configuration[:participants_to_monitor].join(', '))}" if configuration[:verbose]

Application.generate_diagrams(configuration)
```

```ruby
require_dependency "ckpages/application_controller"

module Ckpages
  class PartsController < ApplicationController
    before_action :set_part, only: [:show, :edit, :update, :destroy]

    # GET /parts
    def index
      @parts = Part.order(id: :desc).page(params[:page])
    end

    # GET /parts/1
    def show
    end

    # GET /parts/new
    def new
      @part = Part.new
    end

    # GET /parts/1/edit
    def edit
    end

    # POST /parts
    def create
      @part = Part.new(part_params)

      if @part.save
        redirect_to @part, notice: 'Part was successfully created.'
      else
        render :new
      end
    end

    # PATCH/PUT /parts/1
    def update
      if @part.update(part_params)
        redirect_to @part, notice: 'Part was successfully updated.'
      else
        render :edit
      end
    end

    # DELETE /parts/1
    def destroy
      @part.destroy
      redirect_to parts_url, notice: 'Part was successfully destroyed.'
    end

    private
      # Use callbacks to share common setup or constraints between actions.
      def set_part
        @part = Part.find(params[:id])
      end

      # Only allow a trusted parameter "white list" through.
      def part_params
        params.require(:part).permit(:title, :text)
      end
  end
end
```

```ruby
class InputLine
  def self.to_s
    gets.chomp
  end

  def self.to_i
    InputLine.to_s.to_i
  end
  
  def self.to_f
    InputLine.to_s.to_f
  end

  def self.to_sa
    InputLine.to_s.split(' ')
  end

  def self.to_ia
    InputLine.to_sa.map(&:to_i)
  end
  
  def self.to_fa
    InputLine.to_sa.map(&:to_f)
  end
end

def main(argv)
  x = InputLine.to_i

  p = x / 500

  x = x % 500

  q = x % 5

  puts (p * 1000 + q * 5).to_s
end

if self.to_s == 'main' then
  main(ARGV)
end
```

```ruby
class RubyBuild < Formula
  desc "Install various Ruby versions and implementations"
  homepage "https://github.com/rbenv/ruby-build"
  url "https://github.com/rbenv/ruby-build/archive/v20201117.tar.gz"
  sha256 "cf6995dd7ba6e31caaecc2dae181e4c2f6b4797337d45bf16a379255951f6acd"
  license "MIT"
  head "https://github.com/rbenv/ruby-build.git"

  bottle :unneeded

  depends_on "autoconf"
  depends_on "pkg-config"
  depends_on "readline"

  def install
    ENV["PREFIX"] = prefix
    system "./install.sh"
  end

  def caveats
    <<~EOS
      ruby-build installs a non-Homebrew OpenSSL for each Ruby version installed and these are never upgraded.

      To link Rubies to Homebrew's OpenSSL 1.1 (which is upgraded) add the following
      to your #{shell_profile}:
        export RUBY_CONFIGURE_OPTS="--with-openssl-dir=$(brew --prefix openssl@1.1)"

      Note: this may interfere with building old versions of Ruby (e.g <2.4) that use
      OpenSSL <1.1.
    EOS
  end

  test do
    assert_match "2.0.0", shell_output("#{bin}/ruby-build --definitions")
  end
end
```

```ruby
require 'cached_list'

class NotesController < ApplicationController
  before_filter :login_required, :except => [:show, :create_from_bookmark]
  before_filter :init_session_user_lists
  protect_from_forgery :except => [:create]
  include CachedList

  # GET /notes/1
  def show
    @note = Note.find(params[:id])

    if @note.is_private
      if user
        if not get_cached_list_info(@note.list_id)
          flash[:notice] = 'sorry, that note is someone else\'s and they don\'t want you to see it'
          redirect_to :controller => :lists
        end
      else
        #if this is a private note the user needs to be loged in to see it
        login_required
      end
    end
  end

  # GET /notes/search
  def search
    search_term = params[:s]
    @page = params.key?(:page) ? params[:page].to_i : 0
    if search_term != nil
      search_term =  search_term.gsub('%', '\%').gsub('_', '\_')
      list_ids = []
      user_lists.each_value do | list |
```

```ruby
n, q = gets.chomp.split.map(&:to_i)
s = gets
l, r = [], []
cnt = 0
q.times do |hoge|
    l[hoge], r[hoge] = gets.chomp.split.map(&:to_i)
end

q.times do |hoge|
    bubun = s[(l[hoge] - 1)..(r[hoge] - 1)]
    bubun.size.times do |huga|
        if bubun[huga..huga + 1] == "AC" then
            cnt += 1
        end
    end
    puts cnt
    cnt = 0
end
```

```ruby
n = gets.to_i
hs = Hash.new(0)

n.times do
  s = gets.chomp
  hs[s] += 1
end

puts "AC x %d" % [hs["AC"]]
puts "WA x %d" % [hs["WA"]]
puts "TLE x %d" % [hs["TLE"]]
puts "RE x %d" % [hs["RE"]]
```

```ruby
# frozen_string_literal: true

require "singleton"

module Ferrum
  class Browser
    module Options
      class Base
        BROWSER_HOST = "127.0.0.1"
        BROWSER_PORT = "0"

        include Singleton

        def self.options
          instance
        end

        def to_h
          self.class::DEFAULT_OPTIONS
        end

        def except(*keys)
          to_h.reject { |n, _| keys.include?(n) }
        end

        def detect_path
          if Ferrum.mac?
            self.class::MAC_BIN_PATH.find { |n| File.exist?(n) }
          else
            self.class::LINUX_BIN_PATH.find do |name|
              path = Cliver.detect(name) and break(path)
            end
          end
        end

        def merge_required(flags, options, user_data_dir)
          raise NotImplementedError
        end

        def merge_default(flags, options)
          raise NotImplementedError
        end
      end
    end
  end
end
```

```ruby
end

        def get(id)
          find { |tenant| tenant.id == id }
        end
      end # class Tenants
    end # class OpenStack
  end # module Compute
end # module Fog
```

```ruby
class Api::OpponentsController < ApplicationController

  def index
    @opponents = current_user.opponents
    render json: @opponents, include: "match,match.tournament"
  end

  def update
    @opponent = Opponent.find_by_id(params[:opponent][:id])

    if @opponent.update(opponent_params)
      render json: @opponent, include: "match,match.tournament"
    else
      render json: {
        error: "This Opponent Failed To Update"
      }
    end
  end

  private

  def opponent_params
    params.require(:opponent).permit(:first_name, :last_name, :age, :handedness, :utr, :notes, :match_id, :strengths, :weaknesses)
  end
end
```

```ruby
s=gets.chomp.split("")

answer=1
i=0
(s.length-1).times{
    answer+=i+1-s[0..i].count(s[i+1])
    
    i+=1
}
puts answer
```

```ruby
return execute_action('perform_exchange_rate_action', args, &block)
    end

    def perform_exchange_rate_action_to_xml(*args)
      return get_soap_xml('perform_exchange_rate_action', args)
    end

    def update_exchange_rates(*args, &block)
      return execute_action('update_exchange_rates', args, &block)
    end

    def update_exchange_rates_to_xml(*args)
      return get_soap_xml('update_exchange_rates', args)
    end

    private

    def get_service_registry()
      return ExchangeRateServiceRegistry
    end

    def get_module()
      return DfpApi::V201511::ExchangeRateService
    end
  end
end; end; end
```

```ruby
n = gets.chomp.to_i
x = []
y = []
h = []

n.times do |i|
  x[i], y[i], h[i] = gets.chomp.split.map(&:to_i)
end

101.times do |xx|
  101.times do |yy|
    highest = nil
    n.times do |i|
      if h[i] != 0
        highest = h[i] + (x[i] - xx).abs + (y[i] - yy)
        break
      end
    end
    flag = true
    n.times do |i|
      if h[i] != [highest - (x[i] - xx).abs - (y[i] - yy).abs, 0].max
        flag = false
        break
      end
    end
    if flag
      puts "#{xx} #{yy} #{highest}"
      exit
    end
  end
end
```

```ruby
# frozen_string_literal: true

# Copyright The OpenTelemetry Authors
#
# SPDX-License-Identifier: Apache-2.0

require 'opentelemetry'

module OpenTelemetry
  module Instrumentation
    # Contains the OpenTelemetry instrumentation for the DelayedJob gem
    module DelayedJob
    end
  end
end

require_relative './delayed_job/instrumentation'
require_relative './delayed_job/version'
```

```ruby
n = gets.to_i
a = n.times.map{gets.split.map(&:to_i)}
L,R = 0,1
b = [a.sort{|x,y|x[R]<=>y[R]},a.sort{|x,y|y[L]<=>x[L]}]
b[0].map!{|t|t[R]}
b[1].map!{|t|t[L]}

ans,sum,lc,rc = 0,0,0,0
xor = (-b[L][0]<b[R][0])? 1 : 0
n.times{|i|
  tmp = 2 * b[(i%2)^xor][i/2]
  tmp *= -1 if i%2==xor
  sum += tmp
  ans = sum if ans < sum
}

p ans
```

```sql
SELECT tab0.v0 AS v0 , tab1.v3 AS v3 , tab2.v2 AS v2 
 FROM    (SELECT sub AS v0 
	 FROM wsdbm__subscribes$$1$$
	 
	 WHERE obj = 'wsdbm:Website164'
	) tab0
 JOIN    (SELECT sub AS v0 , obj AS v2 
	 FROM wsdbm__likes$$3$$
	) tab2
 ON(tab0.v0=tab2.v0)
 JOIN    (SELECT obj AS v3 , sub AS v2 
	 FROM sorg__caption$$2$$
	
	) tab1
 ON(tab2.v2=tab1.v2)


++++++Tables Statistic
wsdbm__likes$$3$$	0	VP	wsdbm__likes/
	VP	<wsdbm__likes>	11256
------
wsdbm__subscribes$$1$$	0	VP	wsdbm__subscribes/
	VP	<wsdbm__subscribes>	14908
------
sorg__caption$$2$$	0	VP	sorg__caption/
	VP	<sorg__caption>	225
------
```

```sql
inventory_type_record=Formato para extraer el tipo de registro
label_height=Alto de la etiqueta
label_width=Ancho de la etiqueta
labels_mandatory=Obligatorio
labels_row=Etiquetas por fila
list_comma=Separados por coma
list_inventory=Inserte los números de inventario separados por coma
list_inventory_invalid=Demasiados números de inventario (max 100)
mail_error=Error al enviar el correo
mail_sent=Correo enviado
mail_sent_date=Correos enviados al
mail_to_send=Correos por enviar
missing=Falta
odt=Documento OpenOffice
range_classification_invalid=Rango de números de clasificación inválido
range_control_invalid=Rango de números de control inválido
range_date_invalid=Rango de fechas inválido
range_inventory_invalid=Rando de números de inventario inválido
range_mfn_invalid=Rango de MFNs inválido
sendto=Enviar a
to=Hasta
txt=Texto delimitado
update=Actualizar
```

```sql
CREATE OR REPLACE FUNCTION s_posts_by_lang(
    language_of_user BIGINT
)

RETURNS "PostDB"[]

LANGUAGE SQL
VOLATILE
RETURNS NULL ON NULL INPUT
PARALLEL UNSAFE

AS $$

SELECT ARRAY(
    SELECT (
        -- id
        tp_id,
        -- featured_image
        s_file_by_id(
            tp_featured_image,
            language_of_user
        ),
        -- trans_id
        tpt_id,
        -- lang
        s_language_by_id_lang(
            tpt_lang,
            language_of_user
        ),
        -- title
        tpt_title,
        -- description
        tpt_description,
        -- body
        tpt_body,
        -- permalink
        tpt_permalink,
        -- author
        tp_author,
        -- author_name
        COALESCE(
            s_user_name_by_user_lang(
                b.tu_id,
                language_of_user
            ),
            b.tu_name
        ),
        -- translator
        tpt_translator,
        -- translator_name
        COALESCE(
```

```sql
SELECT
	ih.DueDate
	, ih.InvoiceBal
	, ih.CreditMemo
FROM
	Erp.InvcHead ih with(nolock)
WHERE
	ih.OpenInvoice = 1
	AND ih.InvoiceBal > 0
```

```sql
;WITH 
a AS (
SELECT 
	--*,
	TRIM(object_name) AS object_name,
	TRIM(counter_name) AS counter_name,
	--TRIM(instance_name) AS instance_name,
	CASE WHEN counter_name LIKE '%/sec%' 
	THEN 'counter'
	ELSE 'gauge'
	END AS grafana_counter_type,
	REPLACE(object_name, ' ', '') + N'_' + REPLACE(counter_name, ' ', '') AS grafana_name 
		
FROM sys.dm_os_performance_counters
)
-- strip leading instance name (before :)
,j AS (SELECT CASE WHEN CHARINDEX(':', object_name) > 0 THEN
		SUBSTRING(object_name, CHARINDEX(':', object_name) + 1, LEN(object_name))
	ELSE object_name 
	END AS object_name
	,counter_name, grafana_counter_type, grafana_name
	FROM a)
,b AS (SELECT object_name, counter_name, grafana_counter_type, TRANSLATE(grafana_name, '().-', '____') AS grafana_name FROM j)
,g20 AS (SELECT object_name, counter_name, grafana_counter_type, REPLACE(grafana_name, '&', '') AS grafana_name FROM b)
,c AS (SELECT object_name, counter_name, grafana_counter_type, REPLACE(grafana_name, '/', '_over_') AS grafana_name FROM g20)
,d AS (SELECT object_name, counter_name, grafana_counter_type, REPLACE(grafana_name, '>=', '_ge_') AS grafana_name FROM c)
,e AS (SELECT object_name, counter_name, grafana_counter_type, REPLACE(grafana_name, '>', '_gt_') AS grafana_name FROM d)
,f AS (SELECT object_name, counter_name, grafana_counter_type, REPLACE(grafana_name, '<=', '_le_') AS grafana_name FROM e)
,g AS (SELECT object_name, counter_name, grafana_counter_type, REPLACE(grafana_name, '<', '_lt_') AS grafana_name FROM f)
,h AS (SELECT object_name, counter_name, grafana_counter_type, REPLACE(grafana_name, '%', '_perc_') AS grafana_name FROM g)
-- remove trailing underscore
,i AS (SELECT object_name, counter_name, grafana_counter_type, 
	CASE WHEN SUBSTRING(REVERSE(grafana_name), 1, 1) = '_' THEN
		SUBSTRING(grafana_name, 0, LEN(grafana_name))
	ELSE
		grafana_name
	END AS grafana_name FROM h)
-- strip leading instance name (before :)
,r AS (SELECT object_name, counter_name, grafana_counter_type, 
	CASE WHEN CHARINDEX(':', grafana_name) > 0 THEN
```

```sql
DROP TABLE IF EXISTS `wy_vote_data`;
CREATE TABLE `wy_vote_data` (
  `userid` mediumint(8) unsigned DEFAULT '0',
  `username` char(20) NOT NULL,
  `subjectid` mediumint(8) unsigned NOT NULL DEFAULT '0',
  `time` int(10) unsigned NOT NULL DEFAULT '0',
  `ip` char(15) NOT NULL,
  `data` text NOT NULL,
  `userinfo` text NOT NULL,
  KEY `subjectid` (`subjectid`),
  KEY `userid` (`userid`),
  KEY `ip` (`ip`)
) TYPE=MyISAM;
```

```sql
-- phpMyAdmin SQL Dump
-- version 5.0.2
-- https://www.phpmyadmin.net/
--
-- Host: 127.0.0.1
-- Generation Time: May 27, 2021 at 02:28 PM
-- Server version: 10.4.14-MariaDB
-- PHP Version: 7.4.9

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `votesystem`
--

-- --------------------------------------------------------

--
-- Table structure for table `admin`
--

CREATE TABLE `admin` (
  `id` int(11) NOT NULL,
  `username` varchar(50) NOT NULL,
  `password` varchar(60) NOT NULL,
  `firstname` varchar(50) NOT NULL,
  `lastname` varchar(50) NOT NULL,
  `photo` varchar(150) NOT NULL,
  `created_on` date NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `admin`
--

INSERT INTO `admin` (`id`, `username`, `password`, `firstname`, `lastname`, `photo`, `created_on`) VALUES
(1, 'crce', '$2y$10$kLqXG4BAJrPbsOjJ/.B4eeZn6oojNhAb8l5/cb9eZvFnYU.pz2qni', 'CRCE', 'Admin', 'WhatsApp Image 2021-05-27 at 17.55.34.jpeg', '2018-04-02');

-- --------------------------------------------------------

--
-- Table structure for table `candidates`
--

CREATE TABLE `candidates` (
  `id` int(11) NOT NULL,
  `position_id` int(11) NOT NULL,
  `firstname` varchar(30) NOT NULL,
  `lastname` varchar(30) NOT NULL,
  `photo` varchar(150) NOT NULL,
  `platform` text NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- --------------------------------------------------------

--
-- Table structure for table `positions`
--

CREATE TABLE `positions` (
  `id` int(11) NOT NULL,
  `description` varchar(50) NOT NULL,
  `max_vote` int(11) NOT NULL,
  `priority` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- --------------------------------------------------------

--
-- Table structure for table `voters`
--

CREATE TABLE `voters` (
  `id` int(11) NOT NULL,
  `voters_id` varchar(15) NOT NULL,
  `password` varchar(60) NOT NULL,
  `firstname` varchar(30) NOT NULL,
  `lastname` varchar(30) NOT NULL,
  `photo` varchar(150) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- --------------------------------------------------------

--
-- Table structure for table `votes`
--

CREATE TABLE `votes` (
  `id` int(11) NOT NULL,
  `voters_id` int(11) NOT NULL,
  `candidate_id` int(11) NOT NULL,
  `position_id` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Indexes for dumped tables
--

--
-- Indexes for table `admin`
--
ALTER TABLE `admin`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `candidates`
--
ALTER TABLE `candidates`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `positions`
--
ALTER TABLE `positions`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `voters`
--
ALTER TABLE `voters`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `votes`
--
ALTER TABLE `votes`
  ADD PRIMARY KEY (`id`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `admin`
--
ALTER TABLE `admin`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=2;

--
-- AUTO_INCREMENT for table `candidates`
--
ALTER TABLE `candidates`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=18;

--
-- AUTO_INCREMENT for table `positions`
--
ALTER TABLE `positions`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=8;

--
-- AUTO_INCREMENT for table `voters`
--
ALTER TABLE `voters`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=2;

--
-- AUTO_INCREMENT for table `votes`
--
ALTER TABLE `votes`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=81;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
```

```sql
SELECT [Name] 
    FROM Towns
ORDER BY [Name]

SELECT [Name] 
    FROM Departments
ORDER BY [Name]

SELECT FirstName, LastName, JobTitle, Salary 
    FROM Employees
ORDER BY Salary DESC
```

```sql
SELECT t1.name, count(*)
FROM
site as s,
so_user as u1,
question as q1,
answer as a1,
tag as t1,
tag_question as tq1
WHERE
q1.owner_user_id = u1.id
AND a1.question_id = q1.id
AND a1.owner_user_id = u1.id
AND s.site_id = q1.site_id
AND s.site_id = a1.site_id
AND s.site_id = u1.site_id
AND s.site_id = tq1.site_id
AND s.site_id = t1.site_id
AND q1.id = tq1.question_id
AND t1.id = tq1.tag_id
AND (s.site_name in ('magento','pt','ru','serverfault','tex'))
AND (t1.name in ('linux'))
AND (q1.favorite_count >= 5)
AND (q1.favorite_count <= 5000)
AND (u1.upvotes >= 0)
AND (u1.upvotes <= 100)
GROUP BY t1.name
```

```sql
create or replace
type SimpleMessage under Message
(
	m_message VARCHAR2(32000),
	constructor function SimpleMessage(SELF IN OUT NOCOPY SimpleMessage, msg IN VARCHAR2 ) return self as result,
	overriding member function getFormattedMessage(SELF IN OUT NOCOPY SimpleMessage) return VARCHAR2,
	overriding member function getFormat return VARCHAR2,
	overriding member function getParameters return log4_array,
	overriding member function getThrowable return GenericException

)
instantiable not final;
/
show errors
```

```sql
CREATE TABLE {{conn|qtIdent(data.schema, data.name)}} (
    LIKE {{conn|qtIdent(data.schema, data.orig_name)}} INCLUDING ALL
) PARTITION BY {{ data.partition_scheme }};
{{partition_sql}}
INSERT INTO {{conn|qtIdent(data.schema, data.name)}}(
{% if data.columns and data.columns|length > 0 %}
{% for c in data.columns %} {{c.name}}{% if not loop.last %},{% endif %}{% endfor %}{% endif %})
SELECT {% if data.columns and data.columns|length > 0 %}{% for c in data.columns %}{{c.name}}{% if not loop.last %},{% endif %}{% endfor %}{% endif %}
 FROM {{conn|qtIdent(data.schema, data.orig_name)}};

{% if partition_data.partitions and partition_data.partitions|length > 0 %}
{% for part in partition_data.partitions %}
DROP TABLE IF EXISTS {{conn|qtIdent(data.schema, part.partition_name)}};

ALTER TABLE {{conn|qtIdent(data.schema, part.temp_partition_name)}}
    RENAME TO {{conn|qtIdent(part.partition_name)}};

{% endfor %}{% endif %}
DROP TABLE {{conn|qtIdent(data.schema, data.orig_name)}};

ALTER TABLE {{conn|qtIdent(data.schema, data.name)}}
    RENAME TO {{data.orig_name}};
```

```sql
count(*) as numcust,
	sum(c_acctbal) as totacctbal
from
	(
		select
			substring(c_phone from 1 for 2) as cntrycode,
			c_acctbal
		from
			customer
		where
			substring(c_phone from 1 for 2) in
				('42', '21', '32', '31', '27', '33', '28')
			and c_acctbal > (
				select
					avg(c_acctbal)
				from
					customer
				where
					c_acctbal > 0.00
					and substring(c_phone from 1 for 2) in
						('42', '21', '32', '31', '27', '33', '28')
			)
			and not exists (
				select
					*
				from
					orders
				where
					o_custkey = c_custkey
			)
	) as custsale
group by
	cntrycode
order by
	cntrycode
;
COMMIT;
```

```sql
DO
$$
BEGIN

 IF NOT EXISTS (
    SELECT 1
    FROM   pg_tables
    WHERE  schemaname = current_schema
    AND    tablename  = 'response_data') THEN

    -- Table: public.response_data

    CREATE TABLE public.response_data
    (
      id bigint NOT NULL,
      creation_time timestamp without time zone NOT NULL,
      modification_time timestamp without time zone NOT NULL,
      version bigint,
      organisation_identification character varying(255),
      device_identification character varying(255),
      message_type character varying(255),
      correlation_uid character varying(255),
      message_data bytea,
      result_type character varying(255),
      number_of_notifications_sent smallint NOT NULL DEFAULT 0
    );

    ALTER TABLE public.response_data OWNER TO osp_admin;

    COMMENT ON COLUMN public.response_data.organisation_identification IS 'Identification of the organisation behind the request this response is for.';
    COMMENT ON COLUMN public.response_data.device_identification IS 'Identification of the device the response data belongs with.';
    COMMENT ON COLUMN public.response_data.message_type IS 'Indicates which device function was executed that lead to this response.';
    COMMENT ON COLUMN public.response_data.correlation_uid IS 'Unique identifier correlating all actions related to the request this response is for.';
    COMMENT ON COLUMN public.response_data.message_data IS 'Serialized response object.';
    COMMENT ON COLUMN public.response_data.result_type IS 'Message result type [OK, NOT_FOUND, NOT_OK].';
    COMMENT ON COLUMN public.response_data.number_of_notifications_sent IS 'Number of notifications that has been sent after the initial one to notify a response is available for the request with this records correlation_uid.';

    CREATE SEQUENCE response_data_id_seq
        START WITH 1
        INCREMENT BY 1
        NO MINVALUE
        NO MAXVALUE
        CACHE 1;

    ALTER TABLE public.response_data_id_seq OWNER TO osp_admin;

    ALTER SEQUENCE response_data_id_seq OWNED BY response_data.id;

    ALTER TABLE ONLY response_data ALTER COLUMN id SET DEFAULT nextval('response_data_id_seq'::regclass);

    ALTER TABLE ONLY response_data ADD CONSTRAINT response_data_pkey PRIMARY KEY (id);

    -- Index: public.meter_response_data_correlation_uid_idx

    CREATE UNIQUE INDEX response_data_correlation_uid_idx
      ON public.response_data
      USING btree
      (correlation_uid COLLATE pg_catalog."default");

 END IF;

 END;
$$
```

```sql
ID NUMERIC(20,0) NOT NULL,
APPLIED_AT VARCHAR(25) NOT NULL,
DESCRIPTION VARCHAR(255) NOT NULL
);

ALTER TABLE ${changelog}
ADD CONSTRAINT PK_${changelog}
PRIMARY KEY (id);

-- //@UNDO

DROP TABLE ${changelog};
```

```sql
INSERT INTO [data].[dbo].[CharterStatusType]
           ([CodeValue]
           ,[Description])
     VALUES
           ('School Charter'
           ,'School Charter')
GO

INSERT INTO [data].[dbo].[CharterStatusType]
           ([CodeValue]
           ,[Description])
     VALUES
           ('College/University Charter'
           ,'College/University Charter')
GO

INSERT INTO [data].[dbo].[CharterStatusType]
           ([CodeValue]
           ,[Description])
     VALUES
           ('Open Enrollment'
           ,'Open Enrollment')
GO

INSERT INTO [data].[dbo].[CharterStatusType]
           ([CodeValue]
           ,[Description])
     VALUES
           ('Not a Charter School'
           ,'Not a Charter School')
GO
```

```sql
--
-- Test the planner's ability to produce different kinds of plans to implement
-- grouping and aggregation.
--

drop table if exists olap_test;
drop table if exists olap_test_single;

create table olap_test(a int4, b int4, c int4, d int4) distributed by (a, b);
insert into olap_test select g / 5000, g / 1000, g / 500, g from generate_series(1, 10000) g;
analyze olap_test;

create table olap_test_single(a int4, b int4, c int4, d int4) distributed by (a);
insert into olap_test_single select g / 5000, g / 1000, g / 500, g from generate_series(1, 10000) g;
analyze olap_test_single;

-- If the GROUP BY is a superset of the table's distribution keys, the
-- aggregation can be independently in segments, and just gather the
-- results. (1-phase agg)
explain select a, b, sum(d) from olap_test group by a, b;
select a, b, sum(d) from olap_test group by a, b;

explain select a, b, c, sum(d) from olap_test group by a, b, c;
select a, b, c, sum(d) from olap_test group by a, b, c;

-- If it's not a superset, redistribution is needed.
explain select a, sum(d) from olap_test group by a;
select a, sum(d) from olap_test group by a;

-- Two-phase plain agg
explain select sum(d) from olap_test;
select sum(d) from olap_test;


--
-- DISTINCT aggregates
--

-- If the DISTINCT argument matches the distribution key, two-stage aggregation
-- is possible.

explain select sum(distinct a) from olap_test_single;
select sum(distinct a) from olap_test_single;

-- Otherwise, need a more complicated plans
explain select sum(distinct b) from olap_test_single;
select sum(distinct b) from olap_test_single;

-- If there are a lot of distinct values, then the preliminary aggregation and
-- redistribution steps are not worth the trouble, it's cheaper to just gather
-- all the input
explain select sum(distinct d) from olap_test_single;
select sum(distinct d) from olap_test_single;


--
-- GROUPING SETS
--

-- If the query produces a relatively small number of groups in comparison to
-- the number of input rows, two-stage aggregation will be picked.

-- GPDB_12_MERGE_FIXME: We support hashing for GROUPING SETS now. The planner
-- considers that cheaper than the two-stage grouping agg that was chosen
-- before. Disable hashagg to force the same plan as before. We should
-- implement two-stage Hash Agg for grouping sets; that would probably be
-- the real optimal plan here, and what the planner would choose, if it
-- was supported.
set enable_hashagg=off;
explain select a, b, c, sum(d) from olap_test group by grouping sets((a, b), (a), (b, c));
select a, b, c, sum(d) from olap_test group by grouping sets((a, b), (a), (b, c));
reset enable_hashagg;

-- If the query produces a relatively large number of groups in comparison to
-- the number of input rows, one-stage aggregation will be picked.
explain select a, b, d, sum(d) from olap_test group by grouping sets((a, b), (a), (b, d));
-- do not execute this query as it would produce too many tuples.
```

```sql
/*
This scenario adds a transportation sector to UIUC.
All transportation demand is measured by the energy equivalent of gasoline.
*/
BEGIN TRANSACTION;
CREATE TABLE "time_season" (
	"t_season"	text,
	PRIMARY KEY("t_season")
);
INSERT INTO "time_season" VALUES ('inter');
INSERT INTO "time_season" VALUES ('summer');
INSERT INTO "time_season" VALUES ('winter');


CREATE TABLE "time_periods" (
	"t_periods"	integer,
	"flag"	text,
	FOREIGN KEY("flag") REFERENCES "time_period_labels"("t_period_labels"),
	PRIMARY KEY("t_periods")
);
-- UIUC Data
INSERT INTO "time_periods" VALUES(2000, 'e');
INSERT INTO "time_periods" VALUES(2016, 'e');
INSERT INTO "time_periods" VALUES(2020, 'e');
INSERT INTO "time_periods" VALUES(2021, 'f');
INSERT INTO "time_periods" VALUES(2022, 'f');
INSERT INTO "time_periods" VALUES(2023, 'f');
INSERT INTO "time_periods" VALUES(2024, 'f');
INSERT INTO "time_periods" VALUES(2025, 'f');
INSERT INTO "time_periods" VALUES(2026, 'f');
INSERT INTO "time_periods" VALUES(2027, 'f');
INSERT INTO "time_periods" VALUES(2028, 'f');
INSERT INTO "time_periods" VALUES(2029, 'f');
INSERT INTO "time_periods" VALUES(2030, 'f');
INSERT INTO "time_periods" VALUES(2031, 'f');


CREATE TABLE "time_period_labels" (
	"t_period_labels"	text,
	"t_period_labels_desc"	text,
	PRIMARY KEY("t_period_labels")
);
INSERT INTO "time_period_labels" VALUES ('e','existing vintages');
INSERT INTO "time_period_labels" VALUES ('f','future');


CREATE TABLE "time_of_day" (
	"t_day"	text,
	PRIMARY KEY("t_day")
);
INSERT INTO "time_of_day" VALUES ('day');
INSERT INTO "time_of_day" VALUES ('night');


CREATE TABLE "technology_labels" (
	"tech_labels"	text,
```

```sql
DROP TABLE IF EXISTS updownvote;
DROP TABLE IF EXISTS favorite;
DROP TABLE IF EXISTS comment;
DROP TABLE IF EXISTS post;
DROP TABLE IF EXISTS profile;

CREATE TABLE profile (
	profileId INT UNSIGNED AUTO_INCREMENT NOT NULL,
	email VARCHAR(128)NOT NULL,
	username VARCHAR(40)NOT NULL,
	UNIQUE (email),
	UNIQUE (username),
	PRIMARY KEY (profileId)
);
CREATE TABLE post (
	postId      INT UNSIGNED AUTO_INCREMENT NOT NULL,
	profileId   INT UNSIGNED NOT NULL,
	postContent VARCHAR(255) NOT NULL,
	postDate    DATETIME NOT NULL,
	INDEX (profileId),
	FOREIGN KEY (profileId) REFERENCES profile (profileId),
	PRIMARY KEY (postId)
);
CREATE TABLE comment (
	postId      INT UNSIGNED NOT NULL,
	profileId   INT UNSIGNED NOT NULL,
	comment     VARCHAR(140) NOT NULL,
	commentDate DATETIME     NOT NULL,
	INDEX (profileId),
	INDEX (postId),
	FOREIGN KEY (profileId) REFERENCES profile (profileId),
	FOREIGN KEY (postId) REFERENCES post (postId),
	PRIMARY KEY (profileId, postId)
);
CREATE TABLE favorite (
	profileId INT UNSIGNED NOT NULL,
	postId INT UNSIGNED NOT NULL,
	favoriteDate DATETIME NOT NULL,
	INDEX (profileId),
	INDEX (postId),
	FOREIGN KEY (profileId) REFERENCES profile(profileId),
	FOREIGN KEY (postId) REFERENCES post(postId),
	PRIMARY KEY (profileId, postId)
);
CREATE TABLE updownvote (
	profileId INT UNSIGNED NOT NULL,
	postId INT UNSIGNED NOT NULL,
	updownvoteDate DATETIME NOT NULL,
	INDEX (profileId),
	INDEX (postId),
	FOREIGN KEY (profileId) REFERENCES profile(profileId),
	FOREIGN KEY (postId) REFERENCES post(postId),
	PRIMARY KEY (profileId, postId)
);
```

```sql
-- begin PLAYGROUND_SAMPLE_ENTITY
create table PLAYGROUND_SAMPLE_ENTITY (
    ID varchar(36) not null,
    VERSION integer not null,
    CREATE_TS timestamp,
    CREATED_BY varchar(50),
    UPDATE_TS timestamp,
    UPDATED_BY varchar(50),
    DELETE_TS timestamp,
    DELETED_BY varchar(50),
    --
    NAME varchar(255) not null,
    PARENT_ID varchar(36),
    USER_ID varchar(36),
    --
    primary key (ID)
)^
-- end PLAYGROUND_SAMPLE_ENTITY
-- begin PLAYGROUND_ENTITY_PARAMETER
create table PLAYGROUND_ENTITY_PARAMETER (
    ID varchar(36) not null,
    VERSION integer not null,
    CREATE_TS timestamp,
    CREATED_BY varchar(50),
    UPDATE_TS timestamp,
    UPDATED_BY varchar(50),
    DELETE_TS timestamp,
    DELETED_BY varchar(50),
    --
    NAME varchar(255),
    PARAM_VALUE bigint,
    SAMPLE_ENTITY_ID varchar(36),
    COMP_ENTITY_ID varchar(36),
    --
    primary key (ID)
)^
-- end PLAYGROUND_ENTITY_PARAMETER
-- begin SEC_USER
alter table SEC_USER add column LONG_NAME varchar(255) ^
alter table SEC_USER add column DTYPE varchar(100) ^
update SEC_USER set DTYPE = 'playground$ExtendedUser' where DTYPE is null ^
-- end SEC_USER
```

```sql
DROP DATABASE IF EXISTS ice_creamDB;

CREATE DATABASE ice_creamDB;

USE ice_creamDB;

CREATE TABLE products (
  id INT NOT NULL AUTO_INCREMENT,
  flavor VARCHAR(45) NULL,
  price DECIMAL(10,2) NULL,
  quantity INT NULL,
  PRIMARY KEY (id)
);

INSERT INTO products (flavor, price, quantity)
VALUES ("vanilla", 2.50, 100);

INSERT INTO products (flavor, price, quantity)
VALUES ("chocolate", 3.10, 120);

INSERT INTO products (flavor, price, quantity)
VALUES ("strawberry", 3.25, 75);
```

```sql
-- 804	Number of persons with at least one observation occurrence, by observation_concept_id by calendar year by gender by age decile

--HINT DISTRIBUTE_ON_KEY(stratum_1)
WITH rawData AS (
SELECT 
	o.observation_concept_id AS stratum_1,
	YEAR(o.observation_date) AS stratum_2,
	p.gender_concept_id AS stratum_3,
	FLOOR((YEAR(o.observation_date) - p.year_of_birth) / 10) AS stratum_4,
	COUNT_BIG(DISTINCT p.person_id) AS count_value
FROM 
	@cdmDatabaseSchema.person p
JOIN 
	@cdmDatabaseSchema.observation o 
ON 
	p.person_id = o.person_id
JOIN 
	@cdmDatabaseSchema.observation_period op 
ON 
	o.person_id = op.person_id
AND 
	o.observation_date >= op.observation_period_start_date
AND 
	o.observation_date <= op.observation_period_end_date
GROUP BY 
	o.observation_concept_id,
	YEAR(o.observation_date),
	p.gender_concept_id,
	FLOOR((YEAR(o.observation_date) - p.year_of_birth) / 10)
)
SELECT
	804 AS analysis_id,
	CAST(stratum_1 AS VARCHAR(255)) AS stratum_1,
	CAST(stratum_2 AS VARCHAR(255)) AS stratum_2,
	CAST(stratum_3 AS VARCHAR(255)) AS stratum_3,
	CAST(stratum_4 AS VARCHAR(255)) AS stratum_4,
	CAST(NULL AS VARCHAR(255)) AS stratum_5,
	count_value
INTO 
	@scratchDatabaseSchema@schemaDelim@tempAchillesPrefix_804
FROM 
	rawData;
```

```sql
CREATE TABLE "selfservice_login_requests" (
"id" TEXT PRIMARY KEY,
"request_url" TEXT NOT NULL,
"issued_at" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
"expires_at" DATETIME NOT NULL,
"active_method" TEXT NOT NULL,
"csrf_token" TEXT NOT NULL,
"created_at" DATETIME NOT NULL,
"updated_at" DATETIME NOT NULL
);
```

```sql
@@ -1,4 +1,4 @@
- phpMyAdmin SQL Dump
-- phpMyAdmin SQL Dump
-- version 4.0.10deb1
-- http://www.phpmyadmin.net
--
-- Host: localhost
-- Generation Time: Dec 12, 2018 at 11:25 AM
-- Server version: 5.5.57-0ubuntu0.14.04.1
-- PHP Version: 5.5.9-1ubuntu4.22
SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
--
-- Database: `project`
--
CREATE DATABASE IF NOT EXISTS `project` DEFAULT CHARACTER SET latin1 COLLATE latin1_swedish_ci;
USE `project`;
-- --------------------------------------------------------
--
-- Table structure for table `measurements`
--
CREATE TABLE IF NOT EXISTS `measurements` (
  `IDD` int(11) NOT NULL AUTO_INCREMENT,
  `device_datetime` datetime NOT NULL,
  `device_mac` varchar(255) NOT NULL,
  `device_value` varchar(255) NOT NULL,
  `Check` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`IDD`),
  UNIQUE KEY `IDD` (`IDD`),
  KEY `device_datetime` (`device_datetime`),
  KEY `device_mac` (`device_mac`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=3453329 ;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
```

```sql
/*
 Copyright (C) 2015 IASA - Institute of Accelerating Systems and Applications (http://www.iasa.gr)

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at
 
 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and 
 limitations under the License.
*/

/* 
EGI AppDB incremental SQL script
Previous version: 8.12.40
New version: 8.12.41
Author: wvkarag@kadath.priv.iasa.gr
*/
START TRANSACTION;

CREATE OR REPLACE FUNCTION clean_old_fedcloud_images(keep INT DEFAULT 200) 
RETURNS INT
AS
$$
BEGIN
DELETE FROM vapplists WHERE vmiinstanceid IN (
	SELECT id FROM vmiinstances WHERE vmiflavourid IN (
		SELECT id FROM vmiflavours WHERE vmiid IN (
			SELECT id FROM vmis WHERE vappid = 25 AND id NOT IN (
				SELECT id FROM vmis WHERE vappid = 25 ORDER BY id DESC LIMIT $1
			)
		)
	) AND id NOT IN (
		SELECT vowide_vmiinstanceid FROM va_provider_images WHERE NOT vowide_vmiinstanceid IS NULL
		UNION
		SELECT vmiinstanceid FROM va_provider_images
	) AND id NOT IN (
		SELECT vmiinstanceid FROM vmiinstance_contextscripts
	)
) AND id NOT IN (
	SELECT vapplistid FROM vowide_image_list_images
);

DELETE FROM vmiinstances WHERE vmiflavourid IN (
	SELECT id FROM vmiflavours WHERE vmiid IN (
		SELECT id FROM vmis WHERE vappid = 25  AND id NOT IN (
			SELECT id FROM vmis WHERE vappid = 25 ORDER BY id DESC LIMIT $1
		)
	)
) AND id NOT IN (
		SELECT vowide_vmiinstanceid FROM va_provider_images WHERE NOT vowide_vmiinstanceid IS NULL
		UNION
		SELECT vmiinstanceid FROM va_provider_images
) AND id NOT IN (
	SELECT vmiinstanceid FROM vapplists WHERE id IN (
		SELECT vapplistid FROM vowide_image_list_images
	)
) AND id NOT IN (
	SELECT vmiinstanceid FROM vmiinstance_contextscripts
);

DELETE FROM vmiflavours WHERE vmiid IN (
	SELECT id FROM vmis WHERE vappid = 25  AND id NOT IN (
		SELECT id FROM vmis WHERE vappid = 25 ORDER BY id DESC LIMIT $1
	) AND NOT EXISTS (
		SELECT * FROM vmiinstances WHERE vmiflavourid = vmiflavours.id
	)
);

DELETE FROM vmis WHERE vappid = 25 AND id NOT IN (
	SELECT id FROM vmis WHERE vappid = 25 ORDER BY id DESC LIMIT $1
) AND NOT EXISTS (
	SELECT * FROM vmiflavours WHERE vmiid = vmis.id
);

RETURN (SELECT COUNT(*) FROM vmis WHERE vappid = 25);
END;
$$ LANGUAGE plpgsql;
ALTER FUNCTION clean_old_fedcloud_images(INT) OWNER TO appdb;

INSERT INTO version (major,minor,revision,notes) 
	SELECT 8, 12, 41, E'Added function to cleanold fedcloud tesing VA images'
	WHERE NOT EXISTS (SELECT * FROM version WHERE major=8 AND minor=12 AND revision=41);

COMMIT;
```

```sql
CREATE TABLE `SITE_DB`.`item_client` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `item_id` int(11) NOT NULL,

  `name` varchar(100) NOT NULL,
  `html` text NOT NULL DEFAULT '',
  `secret_url_token` varchar(100) NOT NULL DEFAULT '',  

  `buy_button` int(11) NOT NULL DEFAULT 0,
```

```sql
`id` int(11) NOT NULL,
  `nama_petugas` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `alamat` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `telp` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `username` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `password` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `level` enum('admin','petugas') COLLATE utf8mb4_unicode_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- --------------------------------------------------------

--
-- Struktur dari tabel `transaksi`
--

CREATE TABLE `transaksi` (
  `id` int(11) NOT NULL,
  `id_petugas` int(11) NOT NULL,
  `id_penyewa` int(11) NOT NULL,
  `tgl_sewa` date NOT NULL,
  `tgl_deadline` date NOT NULL,
  `tgl_kembali` date NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Indexes for dumped tables
--

--
-- Indeks untuk tabel `data_mobil`
--
ALTER TABLE `data_mobil`
  ADD PRIMARY KEY (`id`),
  ADD KEY `id_jenis` (`id_jenis`);

--
-- Indeks untuk tabel `detail`
--
ALTER TABLE `detail`
  ADD PRIMARY KEY (`id`),
  ADD KEY `id_trans` (`id_trans`,`id_mobil`),
  ADD KEY `id_mobil` (`id_mobil`);

--
-- Indeks untuk tabel `jenis_mobil`
--
ALTER TABLE `jenis_mobil`
  ADD PRIMARY KEY (`id`);

--
```

```sql
/**
 * Copyright 2019 Dropbox
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

DROP TRIGGER update_expressions_etag ON portal.expressions;
```

```sql
-----------------------------------------------------------------------------------
--Do not modify this file, instead use an alter proc to over-write the procedure.--
--Make sure you follow the same expected interface of parameters, and resultsets.--
-----------------------------------------------------------------------------------

IF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[ElectionLevel_Exists]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[ElectionLevel_Exists]
GO--
CREATE PROCEDURE [Data].[ElectionLevel_Exists]
			@ElectionLevelId int
AS --Generated--
BEGIN
	SET NOCOUNT ON;

	IF EXISTS(
		SELECT * FROM [Data].[ElectionLevel]
		WHERE	[ElectionLevelId] = @ElectionLevelId
	) BEGIN
		SELECT CAST(1 as bit) as [Exists]
	END ELSE BEGIN
```

```sql
SET VERIFY OFF
conn /as sysdba
set echo on
spool /opt/oracle/crdb/cr_pdbdev.log append
select  'database_running' from dual;
host mkdir -p /opt/oracle/oradata/cdbdev/pdbdev;
CREATE PLUGGABLE DATABASE pdbdev ADMIN USER pdbadmin IDENTIFIED BY "oracle" ROLES=(DBA) DEFAULT TABLESPACE users DATAFILE SIZE 10m AUTOEXTEND ON NEXT 8192k file_name_convert=('/opt/oracle/oradata/cdbdev/pdbseed',
'/opt/oracle/oradata/cdbdev/pdbdev');
alter pluggable database pdbdev open;
alter system register;
```

```sql
WHERE table_schema IN ('old_db_name'));

drop procedure  if exists test_move;
CREATE PROCEDURE test_move ()
BEGIN

DECLARE i INT DEFAULT 0;
WHILE i < @queryCount 
DO
	SET @queryString := (
	SELECT CONCAT('RENAME TABLE ',table_schema,'.',table_name, ' TO ','new_db_name.',table_name,';')
		FROM information_schema.TABLES WHERE table_schema IN ('old_db_name') ORDER BY table_name LIMIT 1 );
	PREPARE stmt FROM @queryString;
	select @queryString as ``;
	select i as ``;
	EXECUTE stmt;
	SET i=i+1;
END WHILE ;
commit;

END;;
delimiter ;
CALL test_move();
```

```sql
WITH source AS (

    SELECT *
    FROM {{ source('salesforce', 'event') }}

), renamed AS (

    SELECT
      id                                    AS event_id,
        
        --keys
      accountid::VARCHAR                    AS account_id,
      ownerid::VARCHAR                      AS owner_id,
```

```sql
--
-- patch-logging-times-index.sql
--
-- Add a very humble index on logging times
--

ALTER TABLE /*$wgDBprefix*/logging
   ADD INDEX times (log_timestamp);
```

```sql
create or replace package body test_ut_executable is

  g_dbms_output_text varchar2(30) := 'Some output from procedure';

  procedure exec_schema_package_proc is
    l_executable ut3.ut_executable;
    l_test       ut3.ut_test;
    l_result     boolean;
  begin
    --Arrange
    l_test := ut3.ut_test(a_object_name => 'test_ut_executable',a_name => 'test_ut_executable', a_line_no=> 1);
    l_executable := ut3.ut_executable_test( null, 'test_ut_executable', 'passing_proc', ut3.ut_utils.gc_test_execute );
    --Act
    l_result := l_executable.do_execute(l_test);
    --Assert
    ut.expect(l_result).to_be_true;
    ut.expect(l_executable.serveroutput).to_be_null;
    ut.expect(l_executable.get_error_stack_trace()).to_be_null;
  end;

  procedure exec_package_proc_output is
    l_executable ut3.ut_executable;
    l_test       ut3.ut_test;
    l_result     boolean;
  begin
    --Arrange
    l_test := ut3.ut_test(a_object_owner => 'ut3_tester', a_object_name => 'test_ut_executable',a_name => 'test_ut_executable', a_line_no=> 1);
    l_executable := ut3.ut_executable_test( a_owner => 'ut3_tester', a_package => 'test_ut_executable', 
      a_procedure_name => 'output_proc', a_executable_type => ut3.ut_utils.gc_test_execute );
    --Act
    l_result := l_executable.do_execute(l_test);
    --Assert
    ut.expect(l_result).to_be_true;
    ut.expect(l_executable.serveroutput).to_equal(to_clob(g_dbms_output_text||chr(10)));
    ut.expect(l_executable.get_error_stack_trace()).to_be_null;
  end;

  procedure exec_failing_proc is
    l_executable ut3.ut_executable;
    l_test       ut3.ut_test;
```

```sql
-- ---------------------------------------------------
--  Records of 'movies' database > table : actors
-- ---------------------------------------------------
INSERT INTO actors (first_name,last_name,gender,date_of_birth) VALUES
('Malin','Akerman','F','1978-05-12'),
('Tim','Allen','M','1953-06-13'),
('Julie','Andrews','F','1935-10-01'),
('Ivana','Baquero','F','1994-06-11'),
('Lorraine','Bracco','F','1954-10-02'),
('Alice','Braga','F','1983-04-15'),
('Marlon','Brando','M','1924-04-03'),
('Adrien','Brody','M','1973-04-14'),
('Peter','Carlberg','M','1950-12-08'),
('Gemma','Chan','F','1982-11-29'),
('Chen','Chang','M','1976-10-14'),
('Graham','Chapman','M','1941-01-08'),
('Pei-pei','Cheng','F','1946-12-04'),
('Maggie ','Cheung','F','1964-09-20'),
('Min-sik','Choi','M','1962-05-30'),
('Yun-fat','Chow','M','1955-05-18'),
('John','Cleese','M','1939-10-27'),
('Paddy','Considine','M','1973-09-05'),
('Abbie','Cornish','F','1982-08-07'),
('Brian','Cox','M','1946-06-01'),
('Scatman','Crothers','M','1910-05-23'),
('Russell','Crowe','M','1964-04-07'),
('Tom','Cruise','M','1962-07-03'),
('Darlan','Cunha','M','1988-07-26'),
('Willem','Dafoe','M','1955-07-22'),
('Paul','Dano','M','1984-06-19'),
('Daniel','Day-Lewis','M','1957-04-29'),
('Robert','De Niro','M','1943-08-17'),
```

```sql
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--      http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.

BEGIN;

DROP INDEX IF EXISTS lock_lock_id_expires;

CREATE OR REPLACE FUNCTION AcquireLock(VARCHAR(100), INT) RETURNS TIMESTAMP AS $$
  DECLARE
    nowT TIMESTAMP;
    expiresT TIMESTAMP;
  BEGIN
    nowT := CURRENT_TIMESTAMP;
    expiresT := nowT + '1 SECOND'::interval * $2;

    IF EXISTS (SELECT lock_id FROM Lock WHERE lock_id = $1 AND expires > nowT) THEN
      RETURN to_timestamp(0); -- Special value indicating no lock acquired.
    END IF;

    IF EXISTS (SELECT lock_id FROM Lock WHERE lock_id = $1) THEN
      UPDATE Lock SET expires = expiresT WHERE lock_id = $1;
      RETURN expiresT;
    END IF;

    INSERT INTO Lock (lock_id, expires) VALUES ($1, expiresT);
    RETURN expiresT;
  END
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION ReleaseLock(VARCHAR(100), TIMESTAMP) RETURNS BOOLEAN AS $$
  BEGIN
    IF NOT EXISTS (SELECT lock_id FROM Lock WHERE lock_id = $1 AND expires = $2) THEN
      RETURN FALSE; -- Another process acquired an expired lock
    END IF;

    DELETE FROM Lock WHERE lock_id = $1;
    RETURN TRUE;
  END
$$ LANGUAGE plpgsql;

END;
```

```sql
END

	UPDATE TD_COMMENT
	SET CMM_VALUE = @CmmValue
	WHERE CMM_CODE = @CmmCode
		AND CMM_DELETE_FLAG = 0

	SET @updateCount = @@rowcount

	IF @updateCount > 0
	BEGIN
		-- Auditing:
		DECLARE @AuditUpdateCount INT

		EXEC @AuditUpdateCount = Security_Auditing_Update @DtgID
			,@CcnUsername

		-- check the previous stored procedure for error
		IF @AuditUpdateCount = 0
		BEGIN
```

```sql
and c.invalid_reason is null

) I
) C UNION ALL 
SELECT 8 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (197320,432961,444044)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (197320,432961,444044)
  and c.invalid_reason is null

) I
) C
;

with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 8))
) C


-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
```

```sql
SELECT search_key FROM car_portal_app.account_history WHERE account_id = 1000 GROUP BY search_key ORDER BY max(search_date) limit 10;
EXPLAIN SELECT search_key FROM car_portal_app.account_history WHERE account_id = 1000 GROUP BY search_key ORDER BY max(search_date) limit 10;

WITH test_account AS( 
	INSERT INTO car_portal_app.account 
		VALUES (2000, 'test_first_name', 'test_last_name','test4@email.com', 'password') RETURNING account_id
),car AS ( SELECT i as car_model FROM (VALUES('brand=BMW'), ('brand=VW'), ('brand=Audi'), ('brand=MB')) AS foo(i)
),manufacturing_date AS ( 
	SELECT 'year='|| i as date FROM generate_series (2017, 1900, -1) as foo(i)
)INSERT INTO account_history (account_id, search_key, search_date) 
	SELECT account_id, car.car_model||'&'||manufacturing_date.date, current_date
	FROM test_account, car, manufacturing_date;

VACUUM ANALYZE;
EXPLAIN SELECT search_key FROM car_portal_app.account_history WHERE account_id = 2000 GROUP BY search_key ORDER BY max(search_date) limit 10;

SELECT count(*), account_id FROM car_portal_app.account_history group by account_id;
EXPLAIN SELECT search_key FROM account_history WHERE account_id = 1000 GROUP BY search_key ORDER BY max(search_date) limit 10;

---- Index on expressions
CREATE index on car_portal_app.account(lower(first_name));

SELECT * FROM car_portal_app.account WHERE lower(first_name) = 'foo';

CREATE TABLE employee (employee_id INT PRIMARY KEY, supervisor_id INT);
ALTER TABLE employee ADD CONSTRAINT supervisor_id_fkey FOREIGN KEY
(supervisor_id) REFERENCES employee(employee_id);
CREATE UNIQUE INDEX ON employee ((1)) WHERE supervisor_id IS NULL;
INSERT INTO employee VALUES (1, NULL);
INSERT INTO employee VALUES (2, 1);
INSERT INTO employee VALUES (3, NULL);

--- Covering index 
CREATE TABLE bus_station(id INT, name TEXT , location POINT);
CREATE INDEX ON bus_station(name, location);
CREATE INDEX ON bus_station(name) INCLUDE (location);
CREATE INDEX ON  car_portal_app.account (first_name) INCLUDE (last_name);

--- Index can be duplicated 

CREATE index on car_portal_app.account(first_name);
CREATE index on car_portal_app.account(first_name);
```

```sql
-- 12.2.9 upgrade script for Oracle
-- delim /
create or replace procedure ${username}opa_create_obj_if_not_exists (
	objectDef IN VARCHAR2
) as
begin
  declare
    object_exists exception;
```

```sql
-- Verify postgraphile_organizations:organization_invitations on pg

BEGIN;

SET search_path TO app_public,public;
SELECT id, organization_id, code, user_id, email
FROM organization_invitations
WHERE FALSE;

ROLLBACK;
```

```sql
-- phpMyAdmin SQL Dump
-- version 4.7.9
-- https://www.phpmyadmin.net/
--
-- Host: 127.0.0.1
-- Generation Time: May 25, 2018 at 05:12 PM
-- Server version: 10.1.31-MariaDB
-- PHP Version: 7.2.3

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET AUTOCOMMIT = 0;
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `db_tokobuku_java`
--

-- --------------------------------------------------------

--
-- Table structure for table `tb_admin`
--

CREATE TABLE `tb_admin` (
  `username` varchar(50) NOT NULL,
  `password` varchar(50) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tb_admin`
--

INSERT INTO `tb_admin` (`username`, `password`) VALUES
('admin', 'admin');

-- --------------------------------------------------------

--
-- Table structure for table `tb_jual`
--

CREATE TABLE `tb_jual` (
  `id_pelanggan` int(10) NOT NULL,
  `id_novel` varchar(10) NOT NULL,
  `judul` varchar(100) NOT NULL,
  `stok` int(10) NOT NULL,
  `total` int(10) NOT NULL,
  `uang` int(10) NOT NULL,
  `kembalian` int(10) NOT NULL,
  `tanggal` date NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tb_jual`
--

INSERT INTO `tb_jual` (`id_pelanggan`, `id_novel`, `judul`, `stok`, `total`, `uang`, `kembalian`, `tanggal`) VALUES
(1, 'BOOK001', 'OK', 1, 40000, 45000, 5000, '2018-02-15'),
(2, 'BOOK001', 'OK', 2, 80000, 90000, 10000, '2018-02-24'),
(3, 'BOOK001', 'OK', 3, 120000, 200000, 80000, '2018-05-23'),
(4, 'BOOK001', 'OK', 1, 40000, 40000, 0, '2018-05-23'),
(5, 'BOOK001', 'OK', 3, 120000, 150000, 30000, '2018-05-23'),
(6, 'BOOK002', 'Ganti Presiden', 10, 500000, 600000, 100000, '2018-05-24'),
(7, 'BOOK002', 'Ganti Presiden', 10, 500000, 500100, 100, '2018-05-24');

--
-- Triggers `tb_jual`
--
DELIMITER $$
CREATE TRIGGER `jual_barang` AFTER INSERT ON `tb_jual` FOR EACH ROW BEGIN
```

```sql
CREATE DATABASE postgres;
CREATE USER postgres WITH PASSWORD 'postgres';
ALTER ROLE postgres SET client_encoding TO 'utf8'; 
ALTER ROLE postgres SET default_transaction_isolation TO 'read committed'; 
ALTER ROLE postgres SET timezone TO 'America/New_York';
GRANT ALL PRIVILEGES ON DATABASE postgres TO postgres;
CREATE SEQUENCE video_id_seq;
CREATE TABLE video_video(
     id integer NOT NULL DEFAULT nextval('video_id_seq'),
     uuid VARCHAR(100),
     title VARCHAR(200),
     description VARCHAR(2000),
     author VARCHAR(200),
     duration FLOAT DEFAULT 0,
     aspect_ratio FLOAT DEFAULT 1,
     source VARCHAR(1200),
     extension VARCHAR(10),
     time_published TIMESTAMP,
     time_created TIMESTAMP,
     meta VARCHAR(1500)
);

INSERT INTO video_video(title,uuid, description, author, aspect_ratio, duration, source, extension, time_published, time_created, meta) VALUES ('First Video',
```

```sql
DROP DATABASE IF EXISTS servicemembers;

CREATE DATABASE servicemembers;
```

```javascript
/*
 * Copyright 2016-2017 ZTE, Inc. and others.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
(function( factory ) {
	if ( typeof define === "function" && define.amd ) {
		define( ["jquery", "../jquery.validate"], factory );
	} else {
		factory( jQuery );
	}
}(function( $ ) {

/*
 * Translated default messages for the jQuery validation plugin.
 * Locale: PT (Portuguese; português)
 * Region: BR (Brazil)
 */
$.extend($.validator.messages, {
	required: "Este campo &eacute; requerido.",
	remote: "Por favor, corrija este campo.",
	email: "Por favor, forne&ccedil;a um endere&ccedil;o de email v&aacute;lido.",
	url: "Por favor, forne&ccedil;a uma URL v&aacute;lida.",
	date: "Por favor, forne&ccedil;a uma data v&aacute;lida.",
	dateISO: "Por favor, forne&ccedil;a uma data v&aacute;lida (ISO).",
	number: "Por favor, forne&ccedil;a um n&uacute;mero v&aacute;lido.",
	digits: "Por favor, forne&ccedil;a somente d&iacute;gitos.",
	creditcard: "Por favor, forne&ccedil;a um cart&atilde;o de cr&eacute;dito v&aacute;lido.",
	equalTo: "Por favor, forne&ccedil;a o mesmo valor novamente.",
	extension: "Por favor, forne&ccedil;a um valor com uma extens&atilde;o v&aacute;lida.",
	maxlength: $.validator.format("Por favor, forne&ccedil;a n&atilde;o mais que {0} caracteres."),
	minlength: $.validator.format("Por favor, forne&ccedil;a ao menos {0} caracteres."),
	rangelength: $.validator.format("Por favor, forne&ccedil;a um valor entre {0} e {1} caracteres de comprimento."),
	range: $.validator.format("Por favor, forne&ccedil;a um valor entre {0} e {1}."),
	max: $.validator.format("Por favor, forne&ccedil;a um valor menor ou igual a {0}."),
	min: $.validator.format("Por favor, forne&ccedil;a um valor maior ou igual a {0}."),
	nifES: "Por favor, forne&ccedil;a um NIF v&aacute;lido.",
	nieES: "Por favor, forne&ccedil;a um NIE v&aacute;lido.",
	cifEE: "Por favor, forne&ccedil;a um CIF v&aacute;lido."
});

}));
```

```javascript
import styles from './styles.scss';

const RouteBack = ({ match, history }) => {
    const handleGoToHome = () => {
        history.push('/');
    };
    return (
        <div className={styles.route}>
            <h3>path: {match.path}</h3>
            <button onClick={handleGoToHome}>go to Home</button>
        </div>
    )
};

export default RouteBack;
```

```javascript
import React, {useState, useEffect} from 'react'
import {Link, withPrefix} from 'gatsby'
import {Menu, Container, Icon} from 'semantic-ui-react'
import ShoppingCartIcon from './ShoppingCartIcon'
import Logo from './Logo'

const DesktopMenu = ({location: {pathname}, token, cartCount, signout}) => {
  const [activeItem, setActiveItem] = useState(pathname)

  useEffect(() => {
    setActiveItem(pathname)
  }, [pathname])

  return (
    <Menu size="huge" borderless pointing>
      <Container text>
        <Menu.Item
          active={activeItem === withPrefix('/')}
          as={Link}
          to="/"
          header
        >
          <Logo />
          MLS Artistics
        </Menu.Item>
        {token ? (
          <Menu.Menu position="right">
            <Menu.Item
              as={Link}
              to="/myaccount/"
              active={activeItem === withPrefix('/myaccount/')}
            >
              <Icon name="user" />
              My Account
            </Menu.Item>
            <Menu.Item onClick={signout}>Sign out</Menu.Item>
            <Menu.Item
              as={Link}
              to="/cart/"
              active={activeItem === withPrefix('/cart/')}
            >
              <ShoppingCartIcon cartCount={cartCount} name="Cart" />
            </Menu.Item>
          </Menu.Menu>
        ) : (
          <Menu.Menu position="right">
            <Menu.Item
              as={Link}
              to="/register/"
              active={activeItem === withPrefix('/register/')}
            >
              Sign up
            </Menu.Item>
            <Menu.Item
              as={Link}
              to="/login/"
              active={activeItem === withPrefix('/login/')}
            >
              Sign in
            </Menu.Item>
            <Menu.Item
              as={Link}
              to="/cart/"
              active={activeItem === withPrefix('/cart/')}
            >
              <ShoppingCartIcon cartCount={cartCount} name="Cart" />
            </Menu.Item>
          </Menu.Menu>
        )}
      </Container>
    </Menu>
  )
}

export default DesktopMenu
```

```javascript
})

/**
 * THUNK CREATORS
 */
export const fetchProducts = () => {
  return async dispatch => {
    try {
      const res = await axios.get('/api/products')
      dispatch(setProducts(res.data))
    } catch (error) {
      console.error(error)
    }
  }
}

export const fetchSingleProduct = productId => {
  return async dispatch => {
    try {
      const res = await axios.get(`/api/products/${productId}`)
      dispatch(setSingleProduct(res.data))
    } catch (error) {
      console.error(error)
    }
  }
}

/**
 * INITIAL STATE
 */
const initialState = {
  allProducts: [],
  selectedProduct: {}
}

/**
 * REDUCER
 */
export default function(state = initialState, action) {
  switch (action.type) {
    case SET_PRODUCTS:
      return {...state, allProducts: action.products}
    case SET_SINGLE_PRODUCT:
      return {...state, selectedProduct: action.product}
    default:
      return state
  }
}
```

```javascript
function workerWithImport() {
    const workerPort = new SharedWorker("worker-with-import.js").port;
    workerPort.onmessage = (evt) => {
      if (evt.data != 'hullo there!') {
        chrome.test.fail();
      } else {
        chrome.test.succeed();
      }
    };
    workerPort.start();
  }
]);
```

```javascript
{props.course.parts[0].section} {props.course.parts[0].exercises}
                </p>        
                <p>
                {props.course.parts[1].section} {props.course.parts[1].exercises}
                </p>
                <p>
                {props.course.parts[2].section} {props.course.parts[2].exercises}
                </p>
                
            </div> 

        )
    }


    const Total = (props) => {
        // Save the sum of the exercises to a variable...
        const totalExercises= props.course.parts[0].exercises + props.course.parts[1].exercises + props.course.parts[2].exercises;

        // then send the total to the dom using the variable
        return (
            <div>
                <section>
                    <p>Number of exercises {totalExercises}</p>
                </section>
            </div> 
        )
    }



    return(
        <div>
            {/* the component props must be linked to course object */}
            <Header course={course} />
            <Content course={course}/>
            <Total course={course}/>
        </div>


    )
  
}


ReactDOM.render(<App />, document.getElementById('root'));
```

```javascript
// React to url change
chrome.tabs.onUpdated.addListener(
  function(tabId, changeInfo) {
    if (changeInfo.url) {
      chrome.tabs.sendMessage(tabId, {
        'on-message-page': true,
      })
    }
  }
);
```

```javascript
/**
 * output default new terminal data obj
 */

import { generate } from 'shortid'
import { statusMap } from './constants'

const { prefix } = window
const e = prefix('control')
const defaultStatus = statusMap.processing

export default () => ({
  id: generate(),
  status: defaultStatus,
  title: e('newTerminal')
})
```

```javascript
'use strict';

function Main(INPUT) {
    const input = INPUT.split(" ").map(n => Number(n));
    const X = input[0];
    const Y = input[1];
    let ans = -1;
    if (X % Y != 0) {
        ans = X;
    }
    console.log(ans);
}

Main(require("fs").readFileSync("/dev/stdin", "utf8"));
```

```javascript
const express = require("express");
const app = express();
const bodyParser = require("body-parser");

const ArenaSimulator = require("./arena");

app.use(bodyParser.json());

app.get("/", function (req, res) {
  console.log("test get");
  const moves = ["F", "T", "L", "R"];
  res.send(moves[Math.floor(Math.random() * moves.length)]);
});

app.post("/", function (req, res) {
  try {
    const arenaSimulator = new ArenaSimulator(req.body);
```

```javascript
import React from 'react';

import { background, Heading } from '@chakra-ui/react';

const Headline = props => {
	return (
		<Heading p={props.p} color={props.color} variant={props.variant}>
			{props.children}
		</Heading>
	);
};

export default Headline;
```

```javascript
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DefaultStory = DefaultStory;

var _portal = require("part:@sanity/components/portal");

var _tooltip = require("part:@sanity/components/tooltip");

var _knobs = require("part:@sanity/storybook/addons/knobs");

var _sanity = _interopRequireDefault(require("part:@sanity/storybook/addons/sanity"));

var _components = require("part:@sanity/storybook/components");

var _react = _interopRequireWildcard(require("react"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
```

```javascript
import React, { Component } from "react"
import { Button, Col, Row, Form } from "react-bootstrap"
import PropTypes from "prop-types"
import { TextField } from "@components/shared/Fields/TextField"
import { SelectField } from "@components/shared/Fields/SelectField"

export class ModelForm extends Component {
  state = {
    name: "",
    manufactureId: null,
  }

  onChange = e => {
    const { name, value } = e.target
    this.setState({ [name]: value })
  }

  componentWillUnmount() {
    this.props.resetModelErrors()
  }

  onSubmit = async e => {
    e.preventDefault()
    const { addModel } = this.props
    const { name, manufactureId } = this.state
    await addModel({ name, manufactureId })
    this.setState({ name: "", manufactureId: "" })
  }

  render() {
    const { name, manufactureId } = this.state
    const { error, manufactures } = this.props
    return (
      <Form noValidate onSubmit={this.onSubmit}>
        <TextField
          name="name"
```

```javascript
import {Socket} from "phoenix"

// Fetch a socket token, to actually be able to connect:
function fetchSocketToken(onOk, onFail) {
  let page_current_user = document.querySelector("meta[name='bors-current-user']");
  if (page_current_user === null) {
    setTimeout(() => onFail("current user"), 0);
  }
  page_current_user = Number(page_current_user.content);
  let current_token = sessionStorage.getItem("bors-socket-token");
  current_token = current_token === null ? null : JSON.parse(current_token);
  // Refresh the token every half hour.
  let timeout = Date.now() + (1000 * 60 * 30);
  if (current_token === null || current_token.current_user !== page_current_user || current_token.time < timeout) {
    let ajax = new XMLHttpRequest();
    ajax.open("GET", "/auth/socket-token", true);
    ajax.onreadystatechange = function() {
      if (ajax.readyState === XMLHttpRequest.DONE) {
        if (ajax.status === 200) {
          let new_token = JSON.parse(ajax.responseText);
          new_token.time = Date.now();
          if (new_token.current_user !== page_current_user) {
            onFail("ajax current user");
          } else {
            sessionStorage.setItem("bors-socket-token", JSON.stringify(new_token));
            onOk(new_token.token);
          }
        } else {
          onFail("ajax");
        }
      }
    };
    ajax.send();
  } else {
    setTimeout(() => onOk(current_token.token), 0);
  }
}

// Connect to a socket, including the user token fetching:
function connectSocket(onOk, onError) {
  fetchSocketToken(function(token) {
    let socket = new Socket("/socket", {params: {token: token}});
    socket.connect();
    onOk(socket);
  }, onError);
}

// Find project reload dialog element, and connect if it's there.
let reload_template = document.getElementById("js--on-project-ping");
if (reload_template !== null) {
  connectSocket(function(socket) {
    let project_id = Number(reload_template.getAttribute("data-bors-project-id"));
    setupProjectPingChannel(socket, project_id);
  }, function(error) {
    console.log("bors socket error: " + error)
  });
}
// Pop up the project reload dialog.
function popupProjectPingDialog() {
  reload_template.removeAttribute("hidden");
}
// If this is the project page, pop up the reload dialog.
function setupProjectPingChannel(socket, project_id) {
  let channel = socket.channel("project_ping:"+project_id, {});
  channel.join()
    .receive("ok", resp => { console.log("Joined successfully", resp) })
    .receive("error", resp => { console.log("Unable to join", resp) });
  channel.on("new_msg", popupProjectPingDialog);
}
```

```javascript
module.exports = {
  preset: 'ts-jest',
  verbose: false,
  testEnvironment: 'node',
  resetMocks: true,
  collectCoverage: true,
  coverageThreshold: {
    global: {
      branches: 100,
      functions: 90,
      lines: 90,
      statements: 90,
    },
  },
  coveragePathIgnorePatterns: [
    '/node_modules/',
    'src/tests',
    'src/angular-provider-helper.ts',
  ],
  setupFilesAfterEnv: [
    '../../node_modules/@hirez_io/jest-given/dist/jest-given.js',
```

```javascript
const chai = require('chai');
chai.use(require('chai-http'));
const server = require('../app');
const should = chai.should();
const expect = chai.expect;
const fs = require('fs');
const request = require('request');
const got = require('got');
const models = require('../models');
const logger = require('../config/winston');
const config = require('config');
const Workflow = require('./workflow');

describe('validation', () => {

	describe('/POST create workflow', () => {

		let workflowId, secondWorkflowId;
		let name = "workflow";

		it("Should be able to add a new user.", async() => {
			await models.user.sync({force:true});
			const result = await models.user.create({name: "martinchapman", password: config.get("user.DEFAULT_PASSWORD"), verified: "true", homepage: "https://martinchapman.co.uk"});
			result.should.be.a("object");
		});

		it('Should be able to create workflow.', async() => {
			await models.workflow.sync({force:true});
			workflowId = await Workflow.createWorkflow(name, "this is a special phenotype", "martinchapman");
		});

		it('Should be able to create second workflow.', async() => {
			secondWorkflowId = await Workflow.createWorkflow(name, "this is another special phenotype", "martinchapman");
		});

		let stepId;

		it('Should be able to create step with unique id + workflow + position.', async() => {
			await models.step.sync({force:true});
			stepId = await Workflow.upsertStep(workflowId, 1, "stepId-" + 1, "doc", "type");
		});

		it('Should be able to create another step with unique id + workflow + position.', async() => {
			await Workflow.upsertStep(workflowId, 2, "stepId-" + 2, "doc", "type");
		});

		it('Should be able to create same step with different workflow.', async() => {
			await Workflow.upsertStep(secondWorkflowId, 1, "stepId-" + 1, "doc", "type");
		});

		it('Step with same id + workflow + position should update', async() => {
			await Workflow.upsertStep(workflowId, 1, "stepId-" + 1, "newDoc", "newType");
		});

		it('Should not be able to add step with same id + workflow', async() => {
			await Workflow.notUpsertStep(workflowId, 2, "stepId-" + 1, "doc", "type");
		});

		it('Should not be able to create another step with unique id + workflow and same position as previous step', async() => {
			await Workflow.notUpsertStep(workflowId, 1, "stepId-" + 2, "doc", "type");
		});

	});

});
```

```javascript
"use strict";

// read lines from stdin
const S = require("fs")
  .readFileSync("/dev/stdin", "utf8")
  .trim();

let countZero = 0;
let countOne = 0;

for (let i = 0; i < S.length; i++) {
  if (S.charAt(i) === "0") {
    countZero++;
  } else {
    countOne++;
  }
}

console.log(Math.min(countZero, countOne) * 2);
```

```javascript
const sinon = require("sinon");
const { expect } = require("chai");

Object.assign(global, {
    expect,
    sinon
});
```

```javascript
setTitle(title) {
    this.title = title;

    return this;
  }

  appendStory(story) {
    this.story += story;

    return this;
  }

  setDate(date) {
    this.date = date;

    return this;
  }

  print() {
    console.log(`
      Written on ${this.date.toLocaleDateString()},

      "${this.title}" written by ${this.auhtor},

      ${this.story}

      The End.
    `);
  }
}

new Story()
  .setAuthor("yuko")
  .setDate(new Date())
  .setTitle("Award-Winning Story With A Twist")
  .appendStory("Jake woke up in the morning and took a look around. ")
  .appendStory("He was feeling weird yet he recognized the feeling. ")
  .appendStory("Once again he was being used in a design pattern example.")
  .print();

// Output:
// Written on 10/25/2019,
//
// "Award-Winning Story With A Twist" written by yuko,
//
// Jake woke up in the morning and took a look around. He was feeling weird yet he recognized the feeling. Once again he was being used in a design pattern example.
//
// The End.
```

```javascript
const port = 3003

const bodyParser = require('body-parser')
const express = require('express')
const server = express()
const allowCors = require('./cors')

server.use(bodyParser.urlencoded({extended: true}))
server.use(bodyParser.json())
server.use(allowCors)

server.listen(port,function() {
    console.log(`BACKEND is running on port ${port}.`)
})

module.exports = server
```

```javascript
"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/quiz",{

/***/ "./pages/quiz.tsx":
/*!************************!*\
  !*** ./pages/quiz.tsx ***!
  \************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {
```

```javascript
function Main(input) {
  var tmp = input.trim()
  var N = parseInt(tmp.split(' ')[0])
  var A = parseInt(tmp.split(' ')[1])
  var B = parseInt(tmp.split(' ')[2])

  var stock = { blue: '', red: '' }

  for (var i = 1; i <= A; i++) {
    stock['blue'] = stock['blue'] + 'b'

  }

  var red = ''

  for (var i = 1; i <= B; i++) {
    stock['red'] = stock['red'] + 'r'
  }

  var str = ''
  var j = 0
  var ball = ['blue', 'red']

  while (str.length < N) {
    str = str + stock[ball[j % 2]]
    j = j + 1
  }

  var strSplited = str.split('')
  var result = 0

  for (var k = 0; k < N; ++k) {
    if (strSplited[k] === 'b') {
      result = result + 1
    }
  }

  console.log(result)
  return result
}

Main(require('fs').readFileSync('/dev/stdin', 'utf8'))
```

```javascript
const jwt = require('jsonwebtoken');
const config = require('config');

module.exports = (req, res, next) => {
  // Get token from header
  const token = req.header('x-auth-token');

  // Check if not token
  if (!token) {
    return res.status(401).json({ msg: 'No token, authorization denied' });
  }

  // Verify token
  try {
    const decoded = jwt.verify(token, config.get('jwtSecret'));

    req.user = decoded.user;
    next();
  } catch (err) {
    res.status(401).json({ msg: 'Token is not valid' });
  }
};
```

```javascript
import React from "react"
import { graphql, useStaticQuery } from "gatsby"
import Layout from "../components/basics/layout"
import SEO from "../components/basics/seo"
import Slider from "../components/servicios/slider"
import useServicios from "../hooks/useServicios"
import "../css/servicios.scss"

const Servicios = () => {
  const info = useStaticQuery(graphql`
      query{
          allDatoCmsPagina(filter: { slug: { eq:"servicios"} }){
              nodes{
                  tituloPagina
              }
          }
      }
  `);
  const {tituloPagina} = info.allDatoCmsPagina.nodes[0]

  const servicios = useServicios()

  return (
    <div className="container">
      <Layout>
        <SEO title={tituloPagina} description="Servicios Innova" lang="es"/>
        <div id="contenidoServicios">
          <Slider servicios={servicios}/>
        </div>
      </Layout>
    </div>
  )
}

export default Servicios
```

```javascript
import _extends from 'babel-runtime/helpers/extends';
import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _createClass from 'babel-runtime/helpers/createClass';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';
import * as React from 'react';
import * as PropTypes from 'prop-types';
import RPullToRefresh from 'rmc-pull-to-refresh';
import { getComponentLocale } from '../_util/getLocale';
import Icon from '../icon';

var PullToRefresh = function (_React$Component) {
    _inherits(PullToRefresh, _React$Component);

    function PullToRefresh() {
        _classCallCheck(this, PullToRefresh);

        return _possibleConstructorReturn(this, (PullToRefresh.__proto__ || Object.getPrototypeOf(PullToRefresh)).apply(this, arguments));
    }

    _createClass(PullToRefresh, [{
        key: 'render',
        value: function render() {
            // tslint:disable-next-line:variable-name
            var _getComponentLocale = getComponentLocale(this.props, this.context, 'PullToRefresh', function () {
                return require('./locale/zh_CN');
            }),
                activateText = _getComponentLocale.activateText,
                deactivateText = _getComponentLocale.deactivateText,
                finishText = _getComponentLocale.finishText;

            var ind = _extends({ activate: activateText, deactivate: deactivateText, release: React.createElement(Icon, { type: 'loading' }), finish: finishText }, this.props.indicator);
            return React.createElement(RPullToRefresh, _extends({}, this.props, { indicator: ind }));
        }
    }]);

    return PullToRefresh;
}(React.Component);

export default PullToRefresh;

PullToRefresh.defaultProps = {
    prefixCls: 'am-pull-to-refresh'
};
PullToRefresh.contextTypes = {
    antLocale: PropTypes.object
};
```

```javascript
(function () {
  'use strict';

  angular
    .module('travelBlogs')
    .controller('TravelBlogsController', TravelBlogsController);

  TravelBlogsController.$inject = ['$scope', 'travelBlogResolve', 'Authentication', 'PostsService', '$window', '$state'];

  function TravelBlogsController($scope, travelBlog, Authentication, PostsService, $window, $state) {
    var vm = this;

    vm.travelBlog = travelBlog;
    vm.authentication = Authentication;
    vm.posts = PostsService.query({
      travelBlogId: vm.travelBlog._id
    });
    vm.remove = remove;

    // Remove existing TravelBlog
    function remove() {
      if ($window.confirm('Are you sure you want to delete?')) {
        vm.travelBlog.$remove(function () {
          $state.go('travelBlogs.list');
          Notification.success({ message: '<i class="glyphicon glyphicon-ok"></i> TravelBlog deleted successfully!' });
        });
      }
    }
  }
}());
```

```javascript
{
    margin: 5px auto 0;
    width: 335px;
    height: 80px;
  }
`;

const LogoImg = styled.img`
  {
    height: 80px;
  }
`;
```

```javascript
// console.log("received response");
    if (document.getElementById('main-loader'))
        document.getElementById('main-loader').classList.add('d-none')
    return response;
}, function (error) {
    // Do something with response error
    // console.log("error in response");
    if (document.getElementById('main-loader'))
        document.getElementById('main-loader').classList.add('d-none');
    //code to use for for unauthenticated requests
    //419 : Unknown Status
    //401 : Unauthenticated Status
    if (error.response.status === 401 || error.response.status === 419) {
        console.log("Not Logged in")
        location.href = location.origin;
    }
    return Promise.reject(error);
});


/**
 * Echo exposes an expressive API for subscribing to channels and listening
 * for events that are broadcast by Laravel. Echo and event broadcasting
 * allows your team to easily build robust real-time web applications.
 */

// import Echo from "laravel-echo"
// import Pusher from "pusher-js";

// Echo = new Echo({
//     broadcaster: 'pusher',
//     key: process.env.MIX_PUSHER_APP_KEY,
//     cluster: process.env.MIX_PUSHER_APP_CLUSTER,
//     encrypted: true
// });
// Pusher.logToConsole = true;
```

```javascript
import { combineReducers } from 'redux';
import courses from './coursesReducer';

const rootReducer = combineReducers({
    courses
});

export default rootReducer;
```

```javascript
content: {
            type: {},
            min: 20,
            max: 2000000
        },
        postedBy: {
            type: ObjectId,
            ref: 'User'
        }
    },
    { timestamps: true }
);

module.exports = mongoose.model('Category', categorySchema);
```

```javascript
const jwt = require('jsonwebtoken');
const CryptoJS = require('crypto-js');
const moment = require('moment');
const { AUTH_DATA_SECRET, TOKEN_LIFE_TIME, TOKEN_SECRET, TOKEN_HEADER } = require('../constants');

const parseAuthHeaders = function (request) {
    const upcApiKey = request.headers['upc-api-key'] || '';
    const access_token = request.headers['upc-auth-token'] || '';
    const refresh_token = request.headers['upc-refresh-token'] || '';
    const simpleAccessKey = request.headers['upc-simple-access-key'] || '';

    return { upcApiKey, access_token, refresh_token, simpleAccessKey };
};

const forbid = function (request, response) {
    request.forbidden = true;
    response.status(403).json({ message: 'Forbidden' }).end();
};

function base64url_encode (src) {
    // Encode in classical base64
    let encodedSource = CryptoJS.enc.Base64.stringify(src);

    // Remove padding equal characters
    encodedSource = encodedSource.replace(/=+$/, '');

    // Replace characters according to base64url specifications
    encodedSource = encodedSource.replace(/\+/g, '-');
    encodedSource = encodedSource.replace(/\//g, '_');

    return encodedSource;
}

function base64url_decode (str = '') {
    let decodedSource = str.replace(/\_/g, '/');
    decodedSource = decodedSource.replace(/\-/g, '+');

    decodedSource += '=';

    decodedSource = CryptoJS.enc.Base64.parse(decodedSource);

    return decodedSource;
}

function createToken (userData) {
    const data = {
        ...userData,
        expirationDate: moment() + TOKEN_LIFE_TIME,
    };

    let header_str = CryptoJS.enc.Utf8.parse(JSON.stringify(TOKEN_HEADER));
    let header_enc = base64url_encode(header_str);

    let data_str = CryptoJS.enc.Utf8.parse(JSON.stringify(data));
    let data_enc = base64url_encode(data_str);

    let token = header_enc + '.' + data_enc;

    token = CryptoJS.AES.encrypt(token, TOKEN_SECRET).toString();

    return token;
}

function parseToken (tk = '') {
    const token = CryptoJS.AES.decrypt(tk, TOKEN_SECRET).toString(CryptoJS.enc.Utf8);

    let [ header_enc, data_enc ] = token.split('.');

    let data_str = base64url_decode(data_enc);
    let t_data = JSON.parse(data_str.toString(CryptoJS.enc.Utf8));

    let header_str = base64url_decode(header_enc);
    let t_header = JSON.parse(header_str.toString(CryptoJS.enc.Utf8));

    return { data: t_data, header: t_header };
}

function shallowEquality (obj1, obj2) {
    if (Object.keys(obj1).length !== Object.keys(obj2).length) return false;
    for (let key in obj1) {
        if (!(obj1.hasOwnProperty(key) && obj2.hasOwnProperty(key) && obj1[key] === obj2[key])) {
            return false;
        }
    }

    return true;
}

function decryptData (token) {
    return jwt.verify(token, AUTH_DATA_SECRET);
}

module.exports = { parseAuthHeaders, forbid, base64url_encode, base64url_decode, shallowEquality, decryptData, createToken, parseToken };
```

```javascript
} catch (error) {
    console.log(error);
    res.status(500).send({error:true,message:"Oops Something went wrong !"})

  }



 }

}
```

```javascript
import Vue from 'vue';
import VueRouter from 'vue-router';
import { User } from "../models/my-fetch";
import Home from '../views/Home.vue';
import Game from '../views/Game';
import Login from '../views/Login';
import JoinGame from '../views/JoinGame';
import BURNT from '../views/About';
import TIME from '../views/Time';

Vue.use(VueRouter);

const routes = [
  { path: '/', name: 'home', component: Home },
  { 
    path: '/game', name: 'game', component: Game,
    beforeEnter: (to, from, next) => {
      if(User.User_Id == null){
        next( { name: "login" } )
      }else{
        next();
      }
    }
  },
  { path: '/login', name: 'login', component: Login },
  { path: '/join', name: 'join-game', component: JoinGame },
  { path: '/burnt', name: 'calorie', component: BURNT },
  { path: '/time', name: 'time', component: TIME },

  /*{
    path: '/calorie',
    name: 'calorie',
    // route level code-splitting
    // this generates a separate chunk (calorie.[hash].js) for this route
    // which is lazy-loaded when the route is visited.
    component: () => import(/* webpackChunkName: "calorie" *-/ '../views/About.vue'),
  },*/
];

const router = new VueRouter({
  mode: 'history',
  base: process.env.BASE_URL,
  routes,
});

export default router;
```

```javascript
/** @constructor */
function Article() {
}

Article.prototype = {
	/** instance get title */
	getTitle: function(){
	}
}

/** static get title */
Article.getTitle = function(){
}
```

```javascript
getElementsByTagName() {
      return [
        {
          appendChild(el) {
            setTimeout(function() {
              if (el.tag === 'script') {
                vm.runInContext(
                  fs.readFileSync(path.join(__dirname, 'dist', el.src)),
                  ctx
                );
              }

              el.onload();
            }, 0);
          }
        }
      ];
    }
  };

  var ctx = Object.assign(
    {
      document: fakeDocument,
      WebSocket,
      console,
      location: {hostname: 'localhost'}
    },
    globals
  );

  ctx.window = ctx;

  vm.createContext(ctx);
  vm.runInContext(fs.readFileSync(bundle.name), ctx);
  return ctx.require(bundle.entryAsset.id);
}

function assertBundleTree(bundle, tree) {
  if (tree.name) {
```

```javascript
// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Note: this file is purely for documentation. Any contents are not expected
// to be loaded as the JS file.

/**
 * Represents a single validation error.
 *
 * @property {number} severity
 *   The severity of the error.
 *
 *   The number should be among the values of [Severity]{@link google.cloud.dialogflow.v2beta1.Severity}
 *
 * @property {string[]} entries
 *   The names of the entries that the error is associated with.
 *   Format:
 *
 *   - "projects/<Project ID>/agent", if the error is associated with the entire
 *   agent.
 *   - "projects/<Project ID>/agent/intents/<Intent ID>", if the error is
 *   associated with certain intents.
 *   - "projects/<Project
 *   ID>/agent/intents/<Intent Id>/trainingPhrases/<Training Phrase ID>", if the
 *   error is associated with certain intent training phrases.
 *   - "projects/<Project ID>/agent/intents/<Intent Id>/parameters/<Parameter
 *   ID>", if the error is associated with certain intent parameters.
 *   - "projects/<Project ID>/agent/entities/<Entity ID>", if the error is
 *   associated with certain entities.
 *
 * @property {string} errorMessage
 *   The detailed error messsage.
 *
 * @typedef ValidationError
 * @memberof google.cloud.dialogflow.v2beta1
 * @see [google.cloud.dialogflow.v2beta1.ValidationError definition in proto format]{@link https://github.com/googleapis/googleapis/blob/master/google/cloud/dialogflow/v2beta1/validation_result.proto}
 */
const ValidationError = {
  // This is for documentation. Actual contents will be loaded by gRPC.

  /**
   * Represents a level of severity.
   *
   * @enum {number}
   * @memberof google.cloud.dialogflow.v2beta1
   */
  Severity: {

    /**
     * Not specified. This value should never be used.
     */
    SEVERITY_UNSPECIFIED: 0,

    /**
```

```javascript
// This code doesn't run in the codebase, it's a backup of the code running in AWS Lambda

// Are you editing this on AWS? Please make sure to update github.com/hackclub/game-lab once you deploy.

// Are you on github? You can find this on https://eu-west-1.console.aws.amazon.com/lambda/home?region=eu-west-1#/functions/getPresignedURL?tab=code
// Under the logins@hackclub.com account (details in the team 1password)

// Based on https://www.youtube.com/watch?v=mw_-0iCVpUc

const AWS = require('aws-sdk')
AWS.config.update({ region: process.env.AWS_REGION })
const s3 = new AWS.S3()

// Main Lambda entry point
exports.handler = async (event) => {
    const result = await getUploadURL(event)
    console.log('Event:', event)
    console.log('Result:', result)
    return result
}

const checkFileExists = async function(filename) {
    const s3Params = {
        Bucket: process.env.UploadBucket,
        Key: filename
    }
    const result = await new Promise(resolve => {
        s3.headObject(s3Params, resolve)
    })
    // this is weird, but this returns "null" when the file exists
    return result == null
}

const createUploadURL = async function(filename) {
    console.log('generating uploadURL')
    const s3Params = {
        Bucket: process.env.UploadBucket,
        Key: filename,
        ContentType: 'application/json',
        ACL: 'public-read'
    }
    return await s3.getSignedUrl('putObject', s3Params)
}

const getUploadURL = async function(event) {
    const id = event?.queryStringParameters?.id || parseInt(Math.random()*10000000000)
    const filename = `${id}.json`

    const exists = await checkFileExists(filename)
    const uploadUrl = await createUploadURL(filename)
    return new Promise((resolve, reject) => {
        // Get signed URL
        resolve({
            "statusCode": 200,
            "isBase64Encoded": false,
            "headers": {
                "Access-Control-Allow-Origin": "*"
```

```javascript
module.exports = {
  collectCoverage: true, //process.env.NODE_ENV === 'production' ? true : false,
  globals: {
    WITH_NETWORK: false,
    VERSION: 'test',
    NODE_ENV: 'test',
    ROUTER_MODE: 'hash'
  },
  collectCoverageFrom: ['src/**/*.{js,vue}'],
  coveragePathIgnorePatterns: [
    '.*index.js$',
    'src/components/FaqContents/.*',
    'src/wallets/hardware/.*',
    'src/networks/.*'
  ],
  coverageDirectory: '<rootDir>/tests/unit/coverage',
  moduleFileExtensions: ['js', 'jsx', 'json', 'vue', 'node', 'svg'],
  reporters: ['default', 'jest-skipped-reporter'],
  transform: {
    '^.+\\.vue$': 'vue-jest',
    '.+\\.(css|styl|less|sass|scss|svg|png|jpg|ttf|woff|woff2)$':
      'jest-transform-stub',
    '^.+\\.jsx?$': 'babel-jest'
  },
  moduleNameMapper: {
    '^@/utils/networks$': '<rootDir>/tests/unit/__mocks__/networksMock.js',
    '^@/(.*)$': '<rootDir>/src/$1',
    '^@@/(.*)$': '<rootDir>/tests/unit/$1',
    '^@/tests$': '<rootDir>/tests/index.js',
    '^@/tests/(.*)$': '<rootDir>/tests/$1',
    '\\.worker.js': '<rootDir>/tests/unit/__mocks__/workerMock.js',
    '\\.md': '<rootDir>/tests/unit/__mocks__/mdMockup.js'
  },
  transformIgnorePatterns: [
    'node_modules/(?!(vue-router|bootstrap|register-service-worker|vue-tel-input))'
  ],
  moduleDirectories: ['node_modules'],
  snapshotSerializers: ['jest-serializer-vue'],
  testMatch: [
    '**/tests/unit/**/*.spec.(js|jsx|ts|tsx)',
    '**/__tests__/*.(js | jsx | ts | tsx)',
    '**/tests/*.spec.js'
  ],
  testEnvironmentOptions: {},
  testURL: 'https://localhost:8080',
  setupFilesAfterEnv: ['<rootDir>/tests/unit/__mocks__/mocks.js']
};
```

```javascript
'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var __chunk_1 = require('../chunk-49d9503c.js');
var React = _interopDefault(require('react'));
require('@carbon/icon-helpers');
require('prop-types');

var Light20 =
/*#__PURE__*/
React.forwardRef(function Light20(props, ref) {
  return React.createElement(__chunk_1.Icon, __chunk_1._extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    ref: ref
  }, props), React.createElement("path", {
    d: "M15 2h2v4.96h-2zm6.687 6.89l3.507-3.506 1.414 1.414-3.507 3.507zM25.04 15H30v2h-4.96zm-3.347 8.104l1.414-1.414 3.507 3.507L25.2 26.61zM15 25.04h2V30h-2zm-9.604.162l3.508-3.507 1.414 1.414-3.507 3.507zM2 15h4.96v2H2zm3.39-8.197l1.415-1.414 3.507 3.507-1.414 1.414zM16 12a4 4 0 1 1-4 4 4 4 0 0 1 4-4m0-2a6 6 0 1 0 6 6 6 6 0 0 0-6-6z"
  }), props.children);
});

module.exports = Light20;
```

```javascript
const input = require('fs').readFileSync('/dev/stdin', 'utf8');

const inputs = input.trim().split('\n');
const n = Number(inputs.shift());
const adj = inputs.map((s) => s.split(' ').map(Number));


class Node {
  constructor(id, depth) {
    this.id = id;
    this.parent = -1;
    this.depth = depth;
    this.children = [];
  }
  add(node) {
    node.depth = this.depth + 1;
    node.parent = this.id;
    this.children.push(node);
  }
  getType() {
    if (this.depth === 0) {
      return 'root';
    }
    return this.children.length ? 'internal node' : 'leaf';
  }
  toString() {
    return 'node ' + this.id + ': ' + [
      'parent = ' + this.parent,
      'depth = ' + this.depth,
      this.getType(),
      '[' + this.children.map(node => node.id).join(', ') + ']',
    ].join(', ');
  }
}

class Tree {
  constructor() {
    this.map = new Map();
  }
  getNode(id) {
    if (!this.map.has(id)) {
      this.map.set(id, new Node(id, 0));
    }
    return this.map.get(id);
  }
  print() {
    for (let i = 0; i < this.map.size; i++) {
      const node = this.map.get(id);
      console.log(node.toString());
    }
  }
}

const tree = new Tree();
adj.forEach(([id, k, ...ck]) => {
  const parent = tree.getNode(id);
  ck.forEach(c => {
    const node = tree.getNode(c);
    parent.add(node);
  });
});

tree.print();
```

```javascript
const NeDB = require('nedb');
const path = require('path');

module.exports = function (app) {
  const dbPath = app.get('nedb');
  const Model = new NeDB({
    filename: path.join(dbPath, 'form-data.db'),
    autoload: true
  });

  return Model;
};
```

```javascript
/*
    This module runs the scripts from react-scripts (Create React App)
    and gives an opportunity to override the Webpack config by creating
    a "config-overrides.dev.js" or "config-overrides.prod.js" file in the
    root of the project.

    The config-override file should export a single function that takes a
    config and returns the modified config, like this:

    module.exports = function(webpackConfig) {
        return webpackConfig;
    };
*/
var rewire = require('rewire');
var proxyquire = require('proxyquire');
var noop = (config) => config;

switch(process.argv[2]) {
    // The "start" script is run during development mode
    case 'start':
        rewireModule('react-scripts/scripts/start.js', tryRequire('../config-overrides.dev'));
        break;
    // The "build" script is run to produce a production bundle
    case 'build':
        rewireModule('react-scripts/scripts/build.js', tryRequire('../config-overrides.prod'));
        break;
    // The "test" script runs all the tests with Jest
    case 'test':
        // Load customizations from the config-overrides.testing file.
        // That file should export a single function that takes a config and returns a config
        let customizer = tryRequire('../config-overrides.testing') || noop;
        proxyquire('react-scripts/scripts/test.js', {
            // When test.js asks for '../utils/createJestConfig' it will get this instead:
            '../utils/createJestConfig': (...args) => {
                // Use the existing createJestConfig function to create a config, then pass
                // it through the customizer
                var createJestConfig = require('react-scripts/utils/createJestConfig');
                return customizer(createJestConfig(...args));
            }
        });
        break;
    default:
        console.log('customized-config only supports "start", "build", and "test" options.');
        process.exit(-1);
}

// Attempt to load the given module and return null if it fails.
function tryRequire(module) {
    try {
        return require(module);
    } catch(e) {
        if(e.code !== "MODULE_NOT_FOUND") {
            throw e;
        }
    }
    return null;
}
```

```javascript
/**
 * Generated bundle index. Do not edit.
 */
export * from './index';

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVzdGluZy5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vbW9kdWxlcy9lZmZlY3RzL3Rlc3RpbmcvdGVzdGluZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0EsR0FBRztBQUVILGNBQWMsU0FBUyxDQUFDO0FBQ3hCIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBHZW5lcmF0ZWQgYnVuZGxlIGluZGV4LiBEbyBub3QgZWRpdC5cbiAqL1xuXG5leHBvcnQgKiBmcm9tICcuL2luZGV4JztcbiJdfQ==
```

```c
#include <stdio.h>

int main(void){
    
    int a,b,c,i,max=10000;
    
    scanf( "%d %d %d",&a,&b,&c );
    
    for( i = 1; i <= max; i++){
        if( i * a % b == c){
            printf("YES");
        }
        else printf("NO");
    }

       return 0;
}
```

```c
// user's vault keyset, and |signature_challenge_info| containing the data to
  // be stored in the auth block state.
  // If the operation fails, the arguments will be null.
  using GenerateNewCallback =
      base::OnceCallback<void(std::unique_ptr<structure::SignatureChallengeInfo>
                                  signature_challenge_info,
                              std::unique_ptr<brillo::SecureBlob> passkey)>;

  // This callback reports result of a Decrypt() call.
  //
  // If the operation succeeds, |passkey| can be used for decryption of the
  // user's vault keyset.
  // If the operation fails, the argument will be null.
  using DecryptCallback =
      base::OnceCallback<void(std::unique_ptr<brillo::SecureBlob> passkey)>;

  // This callback reports result of a VerifyKey() call.
  //
  // The |is_key_valid| argument will be true iff the operation succeeds and
  // the provided key is valid for decryption of the given vault keyset.
  using VerifyKeyCallback = base::OnceCallback<void(bool /* is_key_valid */)>;

  // The maximum number of attempts that will be made for a single operation
  // when it fails with a transient error.
  static constexpr int kRetryAttemptCount = 3;

  ChallengeCredentialsHelper() = default;
  ChallengeCredentialsHelper(const ChallengeCredentialsHelper&) = delete;
  ChallengeCredentialsHelper& operator=(const ChallengeCredentialsHelper&) =
      delete;
  virtual ~ChallengeCredentialsHelper() = default;

  // Generates and returns fresh random-based credentials for the given user
  // and the referenced key, and also returns the encrypted
  // (challenge-protected) representation of the created secrets that should
  // be stored in the created vault keyset. This operation may involve making
  // challenge request(s) against the specified key.
  //
  // |default_pcr_map| and |extended_pcr_map| are the PCR values maps; the
  // created credentials will be protected in a way that decrypting them back is
  // possible iff at least one of these maps is satisfied.
  //
  // The result is reported via |callback|.
  virtual void GenerateNew(
      const std::string& account_id,
      const structure::ChallengePublicKeyInfo& public_key_info,
      const std::map<uint32_t, brillo::Blob>& default_pcr_map,
      const std::map<uint32_t, brillo::Blob>& extended_pcr_map,
      std::unique_ptr<KeyChallengeService> key_challenge_service,
      GenerateNewCallback callback) = 0;

  // Builds credentials for the given user, based on the encrypted
  // (challenge-protected) representation of the previously created secrets. The
  // referred cryptographic key should be the same as the one used for the
  // secrets generation via GenerateNew(); although a difference in the key's
  // supported algorithms may be tolerated in some cases. This operation
  // involves making challenge request(s) against the key.
  //
  // |keyset_challenge_info| is the encrypted representation of secrets as
  // created via GenerateNew().
  // The result is reported via |callback|.
  virtual void Decrypt(
      const std::string& account_id,
      const structure::ChallengePublicKeyInfo& public_key_info,
      const structure::SignatureChallengeInfo& keyset_challenge_info,
      bool locked_to_single_user,
      std::unique_ptr<KeyChallengeService> key_challenge_service,
      DecryptCallback callback) = 0;

  // Verifies that the specified cryptographic key is available and can be used
  // for authentication. This operation involves making challenge request(s)
  // against the key. This method is intended as a lightweight analog of
  // Decrypt() for cases where the actual credentials aren't needed.
  //
  // The result is reported via |callback|.
  virtual void VerifyKey(
      const std::string& account_id,
      const structure::ChallengePublicKeyInfo& public_key_info,
      std::unique_ptr<KeyChallengeService> key_challenge_service,
      VerifyKeyCallback callback) = 0;
};

}  // namespace cryptohome

#endif  // CRYPTOHOME_CHALLENGE_CREDENTIALS_CHALLENGE_CREDENTIALS_HELPER_H_
```

```c
#include <stdio.h>
int main() {

  int n1;
  int n2;
  int lcm;
  int gcd;
  printf("Enter two integers: ");
  scanf("%d %d", &n1, &n2);
  for (int i = 1;i<=n1 && i <= n2;i++) {
    if (n1%i==0 && n2%i == 0) {
      gcd = i;
    }
  }

  lcm = n1*n2/gcd;
  printf("LCM of %d and %d is %d",n1, n2, lcm);
  return lcm;
}
```

```c
#ifndef _GUISLICE_CONFIG_ARD_H_
#define _GUISLICE_CONFIG_ARD_H_

#warning No config selected in GUIslice_config.h - resorting to defaults.

// =============================================================================
// GUIslice library (user configuration) for:
//     - Arduino
//     - Cortex-M0
//     - ESP8266 / ESP32
//     - nRF52
//     - STM32
//
// - Calvin Hass
// - https://www.impulseadventure.com/elec/guislice-gui.html
// - https://github.com/ImpulseAdventure/GUIslice
// =============================================================================
//
// The MIT License
//
// Copyright 2016-2020 Calvin Hass
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//
// =============================================================================
// \file GUIslice_config_ard.h

// =============================================================================
// User Configuration
// - This file can be modified by the user to match the
//   intended target configuration
// - Please refer to "docs/GUIslice_config_guide.xlsx" for detailed examples
//   specific to board and display combinations
// =============================================================================

#ifdef __cplusplus
extern "C" {
#endif // __cplusplus


// =============================================================================
// DISPLAY CONFIGURATION - SELECT
// =============================================================================

  // Specify the graphics driver library
```

```c
#include <stdio.h>
#define N 100
#define WHITE 0
#define GRAY 1
#define BLACK 2

int n,M[N][N];
int color[N],d[N],f[N],tt;

void dfs_visit(int u){
  int v;
  color[u]=GRAY;
  d[u]=++tt;
  for(v=0;v<n;v++){
    if(v<n)break;
  }
  for(v=0;v<n;v++){
    if(M[u][v]==0)continue;
    if(color[v]==WHITE){
      dfs_visit(v);
    }
  }
  color[u]=BLACK;
  f[u]=++tt;
}

void dfs(){
  int u;
  for(u=0;u<n;u++){
    if(u<n)break;
  }
  for(u=0;u<n;u++)color[u]=WHITE;
  tt=0;

  for(u=0;u<n;u++){
    if(color[u]==WHITE)dfs_visit(u);
  }
  for(u=0;u<n;u++){
    printf("%d %d %d\n",u+1,d[u],f[u]);
  }
}


int main(){
  int u,v,k,i,j;

  scanf("%d",&n);
  for(i=0;i<n;i++){
    for(j=0;j<n;j++)M[i][j]=0;
  }

  for(i=0;i<n;i++){
    scanf("%d %d",&u,&k);
    u--;
    for(j=0;j<k;j++){
      scanf("%d",&v);
      v--;
      M[u][v]=1;
    }
  }

  dfs();

  return 0;
}
```

```c
//MainWindow.h

#ifndef _MAINWINDOW_H__
#define _MAINWINDOW_H__



namespace VCF {
	class ListBoxControl;
};
/**
*Class MainWindow documentation
*/
class MainWindow : public VCF::Window { 
public:
	MainWindow();

	virtual ~MainWindow();
	void onFileOpen( VCF::MenuItemEvent* e );

	void onFileSave( VCF::MenuItemEvent* e );

	void onFileExit( VCF::MenuItemEvent* e );

	void onEditAddItemToListView(  VCF::MenuItemEvent* e );

	void onEditAddItemToListBox(  VCF::MenuItemEvent* e );

	void onViewListViewIconStyle(  VCF::MenuItemEvent* e );

	void onViewListViewAddColumn(  VCF::MenuItemEvent* e );
protected:
	VCF::ListBoxControl* m_listBox;
	VCF::ListViewControl* m_listView;
private:
};


#endif //_MAINWINDOW_H__
```

```c
#ifndef UTREEXO_NODE_H
#define UTREEXO_NODE_H

#include "../include/accumulator.h"
#include "nodepool.h"
#include <array>

namespace utreexo {

using Hash = std::array<uint8_t, 32>;

class Accumulator::Node
{
public:
    // The number of leaves at the time this node was created.
    uint64_t m_num_leaves;

    // A pointer to the parent node.
    // This is useful if you want to rehash a path from the bottom up.
    NodePtr<Accumulator::Node> m_parent;

    // The position of the node in the forest.
    uint64_t m_position;

    virtual ~Node() {}

    /*
     * Return the hash of the node.
     * This does not compute the hash only returns a previously computed hash.
     */
    virtual const Hash& GetHash() const = 0;

    /* Recompute the hash from children nodes and return it. */
    virtual void ReHash() = 0;

    /*
     * Return the parent of the node.
     * A return value of nullptr does *not* always indicate that a tree top was reached. 
     */
    virtual NodePtr<Accumulator::Node> Parent() const { return m_parent; }

    virtual void NodePoolDestroy() { m_parent = nullptr; }
};

}; // namespace utreexo

#endif // UTREEXO_NODE_H
```

```c
#include<stdio.h>
int main(void){
    int n; scanf("%d",&n);
    int a[n+1]; for(int i=0;i<n+1;i++)scanf("%d",&a[i]);
    int b[n]; for(int i=0;i<n;i++)scanf("%d",&b[i]);

    int i=n,j=n-1;
    int sum=0;
    while(i>=0 && j>=0){
        if(i>=j && b[j]==a[i]){
            b[j]-=a[i];
            sum += a[i];
            //printf("a:%d\n",sum);
            j--;
            a[i]=0;
            i--;
        }else if(i>=j && b[j]<a[i]){
            a[i]-=b[j];
            sum += b[j];
            //printf("b:%d\n",sum);
            j--;
        }else if(i>=j && b[j]>a[i]){
            b[j]-=a[i];
            sum += a[i];
            //printf("c:%d\n",sum);
            i--;
        }
        if(i<j)j--;
        if(j+2 == i)i--;
    }

    printf("%d\n",sum);
    return(0);
}
```

```c
//
//  SplitChannelsFilter.h
//  moments
//
//  Created by Adam Juhasz on 11/6/14.
//  Copyright (c) 2014 Adam Juhasz. All rights reserved.
//

#import "MomentFilter.h"

@interface SplitChannelsFilter : MomentFilter
{
    CIImage *redChannel;
    CIImage *greenChannel;
    CIImage *blueChanel;
    
    CGFloat pixelsToMove;
}
@end
```

```c
/*************************************************************************
 *
 * ADOBE CONFIDENTIAL
 * ___________________
 *
 *  Copyright 2013 Adobe Systems Incorporated
 *  All Rights Reserved.
 *
 * NOTICE:  All information contained herein is, and remains
 * the property of Adobe Systems Incorporated and its suppliers,
 * if any.  The intellectual and technical concepts contained
 * herein are proprietary to Adobe Systems Incorporated and its
 * suppliers and are protected by trade secret or copyright law.
 * Dissemination of this information or reproduction of this material
 * is strictly forbidden unless prior written permission is obtained
 * from Adobe Systems Incorporated.
 *
 **************************************************************************/

#import <UIKit/UIKit.h>

@class GalleryItem, ADBS7ImageView, AppDelegate;

@interface GalleryViewController : UIViewController <UIGestureRecognizerDelegate>

@property (weak) AppDelegate *appDelegate;

@property (strong) NSMutableArray *galleryItems;

@property (nonatomic, strong) GalleryItem *galleryItem;

@property (weak) IBOutlet ADBS7ImageView *imgGallery;

@property (weak) IBOutlet UIImageView *imgBanner;
@property (weak) NSString *webURL;

@property (weak) IBOutlet UIView *viewProgressBackground;
@property (weak) IBOutlet UILabel *lblProgress;

@property (weak) IBOutlet UIView *viewInfoBackground;
@property (weak) IBOutlet UILabel *lblInfo;

@property (weak) IBOutlet UISwipeGestureRecognizer *swipeLeftRecognizer;
@property (weak) IBOutlet UISwipeGestureRecognizer *swipeRightRecognizer;
@property (weak) IBOutlet UITapGestureRecognizer *tapRecognizer;

@property NSInteger currentIndex;

@property BOOL infoVisible;

@end
```

```c
#include <stdio.h>
#include <string.h>

#define N 1000000
#define L 12

  char A[N][L];
  int getChar(char c);
  long long getKey(char str[]);
  int g1(int key){
    return key%N;
  }

  int g2(int key){return 1+(key%(N-1));}
  int find(char str[]);
  int insert(char str[]);

  int main(){
    int i,n;
    char str[L],cmp[9];
    for(i=0;i<N;i++){
      A[i][0]='\0';
    }
    scanf("%d",&n);
    for(i=0;i<n;i++){
      scanf("%s %s",cmp,str);
      if(cmp[0]=='i'){
        insert(str);
      } else {
        if(find(str)){
          printf("yes\n");
        } else {
          printf("no\n");
        }
      }
    }
    return 0;
  }
  int getChar(char c){
    if(c=='A')return 1;
    else if(c=='C')return 2;
    else if(c=='G')return 3;
    else if(c=='T')return 4;
    else return 0;
}
  long long getKey(char str[]){
    long long sum=0,p=1,i;
    for (i=0;i<strlen(str);i++){
      sum+=p*(getChar(str[i]));
      p*=5;
    }
    return sum;
  }
  int find(char str[]){
    int i,x;
    x=(g1(getKey(str))+i*g2(getKey(str)))% N;
    for(i=0;i<14;i++){
      x=(g1(getKey(str))+i*g2(getKey(str)))%N;
        if(strcmp(A[h],str) == 0) return 1;
      }
      return 0;
    }
    int insert(char str[]){
      int i;
      if(find(str))return 0;
      for(i=0;i<14;i++){
          if(A[(g1(getKey(str))+i*g2(getKey(str)))%N][0]=='\0'){
            strcpy(A[(g1(getKey(str))+i*g2(getKey(str)))%N],str);
            return 1;
          }
        }
  return 0;
  }
```

```c
res.col(i) = a.row(i);
  }

  return res;
}

template <typename T>
inline Matrix<T, 2> transpose(const MatrixRef<T, 2> &a) {
  Matrix<T, 2> res(a.n_cols(), a.n_rows());
  for (std::size_t i = 0; i < a.n_rows(); ++i) {
    res.col(i) = a.row(i);
  }

  return res;
}

_SLAB_END_NAMESPACE

#endif  // _SLAB_MATRIX_FNS_TRANS_H
```

```c
#include "types.h"
#include "stat.h"
#include "user.h"
#include "pstat.h"

#define check(exp, msg) if(exp) {} else {\
  printf(1, "%s:%d check (" #exp ") failed: %s\n", __FILE__, __LINE__, msg);\
  ;}

#define DDEBUG 1

#ifdef DDEBUG
# define DEBUG_PRINT(x) printf x
#else
# define DEBUG_PRINT(x) do {} while (0)
#endif


int
main(int argc, char *argv[])
{
  struct pstat st;
  check(getpinfo(&st) == 0, "getpinfo");

  int fret;

  fret = fork2(2);

  int pri = getpri(fret);
  if(fret != 0){
    if( fret != -1 && pri == 2){
      printf(1, "XV6_SCHEDULER\t SUCCESS\n");
    } else{
      printf(1, "XV6_SCHEDULER\t fork2 FAILED\n");
    }
  }else{
    exit();
  }

  wait();
  
  exit();
}
```

```c
/**
  ******************************************************************************
  * @file    stm32f1xx_ll_usb.h
  * @author  MCD Application Team
  * @version V1.0.5
  * @date    06-December-2016
  * @brief   Header file of USB Low Layer HAL module.
  ******************************************************************************
  * @attention
  *
  * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  *
  * Redistribution and use in source and binary forms, with or without modification,
  * are permitted provided that the following conditions are met:
  *   1. Redistributions of source code must retain the above copyright notice,
  *      this list of conditions and the following disclaimer.
  *   2. Redistributions in binary form must reproduce the above copyright notice,
  *      this list of conditions and the following disclaimer in the documentation
  *      and/or other materials provided with the distribution.
  *   3. Neither the name of STMicroelectronics nor the names of its contributors
  *      may be used to endorse or promote products derived from this software
  *      without specific prior written permission.
  *
  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
```

```c
#ifdef _MSC_VER
#pragma once
#endif

#ifndef _TIMER_H_
#define _TIMER_H_

#if __cplusplus > 199711L
#include <chrono>
typedef std::chrono::time_point<std::chrono::system_clock> time_type;
inline time_type tick() {
    return std::chrono::system_clock::now();
}
inline double to_duration(time_type start, time_type end) {
    return std::chrono::duration_cast<std::chrono::milliseconds>(end - start).count() / 1000.0;
}
#else
#include <ctime>
typedef clock_t time_type;
inline time_type tick() {
    return clock();
}
inline double to_duration(time_type start, time_type end) {
    return (end - start) / 1000.0;
}
#endif

class Timer {
public:
    Timer()
        : _start()
        , _end() {
    }

    void start() {
        _start = tick();
    }

    double stop() {
        _end = tick();
        return to_duration(_start, _end);
    }

private:
    time_type _start;
    time_type _end;
};

#endif  // _TIMER_H_
```

```c
// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef SERVICES_NETWORK_HTTP_CACHE_DATA_COUNTER_H_
#define SERVICES_NETWORK_HTTP_CACHE_DATA_COUNTER_H_

#include <memory>

#include "base/callback.h"
#include "base/component_export.h"
#include "base/memory/weak_ptr.h"
#include "base/time/time.h"

namespace disk_cache {
class Backend;
}

namespace net {
class URLRequestContext;
}

namespace network {

// Helper to count data in HTTP cache.
// Export is for testing only.
class COMPONENT_EXPORT(NETWORK_SERVICE) HttpCacheDataCounter {
 public:
  using HttpCacheDataCounterCallback = base::OnceCallback<
      void(HttpCacheDataCounter*, bool upper_bound, int64_t size_or_error)>;

  // Computes the amount of disk space taken up by entries last used between
  // [start_time, end_time), and return it, or error.  Note that there may be
  // some approximation with respect to both bytes and dates.
  //
  // Furthermore, if there is no efficient way of computing this information,
  // a very loose upper bound (e.g. total disk space used by the cache) may be
  // returned; in that case |upper_bound| will be set to true.
  //
  // Once complete, invokes |callback|, passing |this| and result.
  //
  // If either |this| or |url_request_context| get destroyed, |callback|
  // will not be invoked.
  static std::unique_ptr<HttpCacheDataCounter> CreateAndStart(
      net::URLRequestContext* url_request_context,
      base::Time start_time,
      base::Time end_time,
      HttpCacheDataCounterCallback callback);

  HttpCacheDataCounter(const HttpCacheDataCounter&) = delete;
  HttpCacheDataCounter& operator=(const HttpCacheDataCounter&) = delete;

  ~HttpCacheDataCounter();

 private:
  HttpCacheDataCounter(base::Time start_time,
                       base::Time end_time,
                       HttpCacheDataCounterCallback callback);

  void GotBackend(std::unique_ptr<disk_cache::Backend*> backend,
                  int error_code);
  void PostResult(bool is_upper_limit, int64_t result_or_error);

  base::WeakPtr<HttpCacheDataCounter> GetWeakPtr() {
    return weak_factory_.GetWeakPtr();
  }

  base::Time start_time_;
  base::Time end_time_;
  HttpCacheDataCounterCallback callback_;

  base::WeakPtrFactory<HttpCacheDataCounter> weak_factory_{this};
};

}  // namespace network

#endif  // SERVICES_NETWORK_HTTP_CACHE_DATA_COUNTER_H_
```

```c
//
//  AppDelegate.h
//  Flicks
//
//  Created by Kaeson Ho on 1/23/17.
//  Copyright © 2017 Kaeson Ho. All rights reserved.
//

#import <UIKit/UIKit.h>

@interface AppDelegate : UIResponder <UIApplicationDelegate>

@property (strong, nonatomic) UIWindow *window;


@end
```

```c
// Copyright (c) 2015 fjz13. All rights reserved.
// Use of this source code is governed by a MIT-style
// license that can be found in the LICENSE file.
#pragma  once

#include "MedusaCorePreDeclares.h"
#include "Core/Compile/TypeTraits.h"

MEDUSA_BEGIN;
template<typename T, uint TIndex>
class OverrideValue
{
public:
	typedef typename Compile::TypeTraits<T>::ParameterType TParameterType;
	typedef typename Compile::TypeTraits<T>::ReferenceType TReferenceType;
	const static uint Index = TIndex;
public:
	OverrideValue() :mIsOverride(false) {}
	explicit OverrideValue(TParameterType val) :mValue(val), mIsOverride(false) {}
	OverrideValue(const OverrideValue& field) { mValue = field.mValue; mOverrideValue = field.mOverrideValue; mIsOverride = field.IsOverride(); }
	OverrideValue& operator=(const OverrideValue& field) { mValue = field.mValue; mOverrideValue = field.mOverrideValue; mIsOverride = field.IsOverride(); return *this; }
	OverrideValue& operator=(TParameterType val) { mOverrideValue = val; mIsOverride = mOverrideValue != mValue; return *this; }

	operator T()const { return IsOverride() ? mOverrideValue : mValue; }

	operator T&() { return IsOverride() ? mOverrideValue : mValue; }

	bool operator==(const OverrideValue& val)const { return Value() == val.Value(); }
	bool operator!=(const OverrideValue& val)const { return Value() != val.Value(); }
	bool operator>(const OverrideValue& val)const { return Value() > val.Value(); }
	bool operator>=(const OverrideValue& val)const { return Value() >= val.Value(); }
	bool operator<(const OverrideValue& val)const { return Value() < val.Value(); }
	bool operator<=(const OverrideValue& val)const { return Value() <= val.Value(); }

	/*bool operator==(TParameterType val)const{return Value()==val;}
	bool operator!=(TParameterType val)const{return Value()!=val;}
	bool operator>(TParameterType val)const{return Value()>val;}
	bool operator>=(TParameterType val)const{return Value()>=val;}
	bool operator<(TParameterType val)const{return Value()<val;}
	bool operator<=(TParameterType val)const{return Value()<=val;}*/
public:
	bool IsOverride() const { return mIsOverride; }
	const T& Value()const { return IsOverride() ? mOverrideValue : mValue; }
	void SetOverriedValue(TParameterType val) { mOverrideValue = val; mIsOverride = mOverrideValue != mValue; }

	void ForceSetValue(TParameterType val) { mValue = val; mOverrideValue = mValue; mIsOverride = false; }

	const T& ForceGetValueReference()const { return mValue; }
	T& ForceGetValueReference() { return mValue; }

	const T* ForceGetValuePointer()const { return &mValue; }
	T* ForceGetValuePointer() { return &mValue; }

	void Apply() { if (mIsOverride) { mValue = mOverrideValue; mIsOverride = false; } }

private:
	T mValue;
	T mOverrideValue;
	bool mIsOverride;
};
MEDUSA_END;
```

```c
//===- MachOObject.h - Mach-O Object File Wrapper ---------------*- C++ -*-===//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//

#ifndef LLVM_OBJECT_MACHOOBJECT_H
#define LLVM_OBJECT_MACHOOBJECT_H

#include <string>
#include "llvm/ADT/InMemoryStruct.h"
#include "llvm/ADT/OwningPtr.h"
#include "llvm/ADT/StringRef.h"
#include "llvm/Object/MachOFormat.h"

namespace llvm {

class MemoryBuffer;

namespace object {

/// \brief Wrapper object for manipulating Mach-O object files.
///
/// This class is designed to implement a full-featured, efficient, portable,
/// and robust Mach-O interface to Mach-O object files. It does not attempt to
/// smooth over rough edges in the Mach-O format or generalize access to object
/// independent features.
///
/// The class is designed around accessing the Mach-O object which is expected
/// to be fully loaded into memory.
///
/// This class is *not* suitable for concurrent use. For efficient operation,
/// the class uses APIs which rely on the ability to cache the results of
/// certain calls in internal objects which are not safe for concurrent
/// access. This allows the API to be zero-copy on the common paths.
//
// FIXME: It would be cool if we supported a "paged" MemoryBuffer
// implementation. This would allow us to implement a more sensible version of
// MemoryObject which can work like a MemoryBuffer, but be more efficient for
// objects which are in the current address space.
class MachOObject {
public:
  struct LoadCommandInfo {
    /// The load command information.
    macho::LoadCommand Command;

    /// The offset to the start of the load command in memory.
    uint64_t Offset;
  };

private:
  OwningPtr<MemoryBuffer> Buffer;

  /// Whether the object is little endian.
  bool IsLittleEndian;
  /// Whether the object is 64-bit.
  bool Is64Bit;
  /// Whether the object is swapped endianness from the host.
  bool IsSwappedEndian;
  /// Whether the string table has been registered.
```

```c
/*
                       * This header is generated by classdump-dyld 1.5
                       * on Tuesday, November 10, 2020 at 10:19:10 PM Mountain Standard Time
                       * Operating System: Version 14.2 (Build 18K57)
                       * Image Source: /System/Library/Frameworks/TVMLKit.framework/TVMLKit
                       * classdump-dyld is licensed under GPLv3, Copyright © 2013-2016 by Elias Limneos. Updated by Kevin Bradley.
                       */

#import <TVMLKit/TVMLKit-Structs.h>
#import <UIKit/UIViewControllerTransitioningDelegate.h>
#import <UIKit/UIPopoverPresentationControllerDelegate.h>

@class NSHashTable, _UIProgressiveBlurPresentationAnimator, NSArray, NSString;

@interface TVModalPresenter : NSObject <UIViewControllerTransitioningDelegate, UIPopoverPresentationControllerDelegate> {

	NSHashTable* __presentationControllers;
	_UIProgressiveBlurPresentationAnimator* _presentingAnimator;
	_UIProgressiveBlurPresentationAnimator* _dismissingAnimator;

}

@property (nonatomic,readonly) NSHashTable * _presentationControllers; 
@property (nonatomic,copy,readonly) NSArray * presentedViewControllers; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sharedInstance;
+(id)_viewControllerForResponder:(id)arg1 ;
-(id)init;
-(id)animationControllerForPresentedController:(id)arg1 presentingController:(id)arg2 sourceController:(id)arg3 ;
-(id)animationControllerForDismissedController:(id)arg1 ;
-(id)presentationControllerForPresentedViewController:(id)arg1 presentingViewController:(id)arg2 sourceViewController:(id)arg3 ;
-(NSHashTable *)_presentationControllers;
-(void)presentViewController:(id)arg1 fromViewController:(id)arg2 options:(id)arg3 completion:(/*^block*/id)arg4 ;
-(NSArray *)presentedViewControllers;
-(void)dismissViewController:(id)arg1 animated:(BOOL)arg2 completion:(/*^block*/id)arg3 ;
-(void)presentViewController:(id)arg1 forResponder:(id)arg2 options:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)dismissViewControllerWithResponder:(id)arg1 animated:(BOOL)arg2 completion:(/*^block*/id)arg3 ;
-(void)dismissAllViewControllersWithAnimation:(BOOL)arg1 completion:(/*^block*/id)arg2 ;
@end
```

```c
M=99;main(n,i,j,k,a,b,c){
	float p=atan(1)*4,X[100],Y[100],x,y;
	for(;scanf("%d",&n),n;printf("%d\n",a)){
		for(i=0;i<n;i++)scanf("%f,%f",X+i,Y+i);
		for(a=i=0;i<n;i++){
			for(b=k=0;k<M;k++){
				x=X[i]+cos(p*k/M),y=Y[i]+sin(p*k/M);
				for(c=0,j=i;j<n;j++){
					if((X[j]-x)*(X[j]-x)+(Y[j]-y)*(Y[j]-y)<1+1e-3)c++;
				}
				if(b<c)b=c;
			}
			if(a<b)a=b;
		}
	}
exit(0);}
```

```c
* that count reaches 0 all associated ressources will be released.
 *
 * Even if your application does not have any references left to a
 * buffer it may still hang around if it is in use by internal
 * mechanisms (kernel call, ...)
 */
GPUARRAY_PUBLIC void gpudata_release(gpudata *b);

/**
 * Check if two buffers may overlap.
 *
 * Both buffers must have been created with the same backend.
 *
 * \param a first buffer
 * \param b second buffer
 * \param ret error return pointer
 *
 * \retval 1 The buffers may overlap
 * \retval 0 The buffers do not overlap.
 * \retval -1 An error was encoutered, `ret` contains a detailed
 * error code if not NULL.
 */
GPUARRAY_PUBLIC int gpudata_share(gpudata *a, gpudata *b, int *ret);

/**
 * Copy the content of a buffer to another.
 *
 * Both buffers must be in the same context and contiguous.
 * Additionally the buffers must not overlap otherwise the content of
 * the destination buffer is not defined.
 *
 * \param dst destination buffer
 * \param dstoff offset inside the destination buffer
 * \param src source buffer
 * \param srcoff offset inside the source buffer
 * \param sz size of data to copy (in bytes)
 *
 * \returns GA_NO_ERROR or an error code if an error occurred.
 */
GPUARRAY_PUBLIC int gpudata_move(gpudata *dst, size_t dstoff,
                                 gpudata *src, size_t srcoff,
                                 size_t sz);

/**
```

```c
#include <stdio.h>
#include <math.h>
#include <string.h>
int main(void){
    
    long long n;
    long long y=0;
    long long ans=0;
    
    scanf("%lld", &n);
    
    for(long long i=1; i<=n; i++){
        
        if(i*i==n){
            
            y = i;
            break;
            
        }
        
        if(i*i>=n){
            
            break;
            
        }
        
        if(n%i==0){
            
            y = i;
            
        }
        
    }
    
    ans = y - 1;
    // printf("%lld\n", ans); // debug
    y = n / y;
    ans += y - 1;
    
    printf("%lld", ans);
    
    return 0;
    
}
```

```c
// Copyright (c) 2008  GeometryFactory (France)
// All rights reserved.
//
// This file is part of CGAL (www.cgal.org); you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 3 of the License,
// or (at your option) any later version.
//
// Licensees holding a valid commercial license may use this file in
// accordance with the commercial license agreement provided with the software.
//
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
//
// $URL$
// $Id$
//
//
// Author(s)     : Laurent Rineau

#ifdef CGAL_HEADER_ONLY
#define CGAL_INLINE_FUNCTION inline
#else
#define CGAL_INLINE_FUNCTION
#endif

#ifndef CGAL_NDEBUG

#include <CGAL/basic.h>
#include <CGAL/assertions.h>

namespace CGAL {

struct Check_FPU_rounding_mode_is_restored {
  FPU_CW_t mode;

  Check_FPU_rounding_mode_is_restored()
    : mode( FPU_get_cw()) {}

  ~Check_FPU_rounding_mode_is_restored()
  {
    CGAL_assertion_msg( FPU_get_cw() == mode,
                        "The default FPU rounding mode has not been restored "
                        " before the exit of the program. "
                        "That may be a bug in some CGAL kernel code.");
  }
};

#ifdef CGAL_HEADER_ONLY

inline const Check_FPU_rounding_mode_is_restored& 
get_static_check_fpu_rounding_mode_is_restored()
{
  // A static object that emits a warning if the rounding mode at the
  // beginning and the end of the program are not the same.
  // Note that the get_static_check_fpu_rounding_mode_is_restored() function
  // must be called at least once so that this object is created.
  // It is done in the FPU_set_cw() function in FPU.h
  static const Check_FPU_rounding_mode_is_restored check_fpu_rounding_mode_is_restored;
  return check_fpu_rounding_mode_is_restored;
}

namespace {
  CGAL_UNUSED const Check_FPU_rounding_mode_is_restored &
    check_fpu_rounding_mode_is_restored 
    = get_static_check_fpu_rounding_mode_is_restored();
}

#else

// A global object that emits a warning if the rounding mode at the
// beginning and the end of the program are not the same.
static const Check_FPU_rounding_mode_is_restored check_fpu_rounding_mode_is_restored;

#endif // CGAL_HEADER_ONLY

} // end namespace CGAL

#endif // #ifnedef CGAL_NDEBUG
```

```c
/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "S1AP-IEs"
 * 	found in "/home/user/openairinterface5g/openair3/S1AP/MESSAGES/ASN1/R14/s1ap-14.5.0.asn1"
 * 	`asn1c -pdu=all -fcompound-names -fno-include-deps -gen-PER -no-gen-OER -no-gen-example -D /home/user/openairinterface5g/cmake_targets/basic_simulator/enb/CMakeFiles/S1AP_R14`
 */

#include "S1AP_Cdma2000OneXRAND.h"

/*
 * This type is implemented using OCTET_STRING,
 * so here we adjust the DEF accordingly.
 */
static const ber_tlv_tag_t asn_DEF_S1AP_Cdma2000OneXRAND_tags_1[] = {
	(ASN_TAG_CLASS_UNIVERSAL | (4 << 2))
};
asn_TYPE_descriptor_t asn_DEF_S1AP_Cdma2000OneXRAND = {
	"Cdma2000OneXRAND",
	"Cdma2000OneXRAND",
	&asn_OP_OCTET_STRING,
	asn_DEF_S1AP_Cdma2000OneXRAND_tags_1,
	sizeof(asn_DEF_S1AP_Cdma2000OneXRAND_tags_1)
		/sizeof(asn_DEF_S1AP_Cdma2000OneXRAND_tags_1[0]), /* 1 */
	asn_DEF_S1AP_Cdma2000OneXRAND_tags_1,	/* Same as above */
	sizeof(asn_DEF_S1AP_Cdma2000OneXRAND_tags_1)
		/sizeof(asn_DEF_S1AP_Cdma2000OneXRAND_tags_1[0]), /* 1 */
	{ 0, 0, OCTET_STRING_constraint },
	0, 0,	/* No members */
	&asn_SPC_OCTET_STRING_specs	/* Additional specs */
};
```

```c
private:
    std::string path_;

public:
    ActorPath(const std::string & path) {
        path_ = path;
    }

    ~ActorPath() {
    }
};

}  /* namespace akee */

#endif  /* _AKEE_ACTOR_ACTORPATHTEMPLATE_H_ */
```

```c
/**
*** :: Light ::
***
***   Currently this is so large because
***   it supports all types of light.
***
***   This means it holds data for shadow
***   mapping etc which may not be relevant
***   for some light types.
***
**/

#ifndef light_h
#define light_h

#include "cengine.h"

static const int light_type_point = 0;
static const int light_type_directional = 1;
static const int light_type_sun = 2;
static const int light_type_spot = 3;

typedef struct {
  vec3 position;
  vec3 target;
  
  vec3 diffuse_color;
  vec3 specular_color;
  vec3 ambient_color;
  
  float power;
  float falloff;
  
  bool enabled;
  bool cast_shadows;
  
  int type;
  
  /* Shadow Mapping */
  vec3 shadow_color;
  int shadow_map_width;
  int shadow_map_height;
  
  /* Orthographic Shadow Mapping */
  bool orthographic;
  float ortho_width;
  float ortho_height;
  
  /* Projection Shadow Mapping */
  float fov;
  float aspect_ratio;
  
} light;

light* light_new();
light* light_new_position(vec3 position);

/* Builds light using type's default values */
light* light_new_type(vec3 position, int type);
void light_delete(light* l);

void light_set_type(light* l, int type);

vec3 light_direction(light* l);

mat4 light_view_matrix(light* l);
mat4 light_proj_matrix(light* l);

#endif
```

```c
#include <stdio.h>

int main(void)
{
int H, W, i, j, k;

i = 0;
j = 0;
k = 0;

while(1){
scanf("%d %d", &H, &W);

if(H == 0 && W == 0)break;
for(k = 0; k <= H; k++) {
for(i = 0; i < H; i++){
  for(j = 0; j < H; i++){
  printf("#");
  }
printf("\n ");
}
printf("\n ");
}
}
return 0;
}
```

```c
#include<stdio.h>
int main(){
    char a[101];
    scanf("%s",a);
    int i,j,k,u;
    for(u=0;a[u]!=NULL;u++){
      i++;  
     }

     for(j=0;j<i/2;j++){
         if(a[j]==a[i-j])k++;
     }
     printf("%d",k);
    return 0;
}
```

```c
// Copyright 2016 The Fuchsia Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#ifndef COBALT_ALGORITHMS_FORCULUS_FORCULUS_UTILS_H_
#define COBALT_ALGORITHMS_FORCULUS_FORCULUS_UTILS_H_

#include "config/encodings.pb.h"
#include "util/datetime_util.h"

// Common utilities used in the encoder and analyzer.

namespace cobalt {
namespace forculus {

using util::kInvalidIndex;

// Compute the Forculus epoch index for the given |day_index| based on
// the given |epoch_type|.
uint32_t EpochIndexFromDayIndex(uint32_t day_index,
                                const EpochType& epoch_type);

}  // namespace forculus
}  // namespace cobalt

#endif  // COBALT_ALGORITHMS_FORCULUS_FORCULUS_UTILS_H_
```

```c
// Copyright (c) 2009-2010 Satoshi Nakamoto
// Copyright (c) 2009-2016 The Bitcoin Core developers
// Copyright (c) 2019-2020 MalwareChain LLC
// Distributed under the MIT software license, see the accompanying
// file COPYING or http://www.opensource.org/licenses/mit-license.php.

#ifndef BITCOIN_SCRIPT_INTERPRETER_H
#define BITCOIN_SCRIPT_INTERPRETER_H

#include "script_error.h"
#include "primitives/transaction.h"

#include <vector>
#include <stdint.h>
#include <string>

class CPubKey;
class CScript;
class CTransaction;
class uint256;

/** Signature hash types/flags */
enum
{
    SIGHASH_ALL = 1,
    SIGHASH_NONE = 2,
    SIGHASH_SINGLE = 3,
    SIGHASH_ANYONECANPAY = 0x80,
};

/** Script verification flags */
enum
{
    SCRIPT_VERIFY_NONE      = 0,

    // Evaluate P2SH subscripts (softfork safe, BIP16).
    SCRIPT_VERIFY_P2SH      = (1U << 0),

    // Passing a non-strict-DER signature or one with undefined hashtype to a checksig operation causes script failure.
    // Evaluating a pubkey that is not (0x04 + 64 bytes) or (0x02 or 0x03 + 32 bytes) by checksig causes script failure.
    // (softfork safe, but not used or intended as a consensus rule).
    SCRIPT_VERIFY_STRICTENC = (1U << 1),

    // Passing a non-strict-DER signature to a checksig operation causes script failure (softfork safe, BIP62 rule 1)
    SCRIPT_VERIFY_DERSIG    = (1U << 2),

    // Passing a non-strict-DER signature or one with S > order/2 to a checksig operation causes script failure
    // (softfork safe, BIP62 rule 5).
    SCRIPT_VERIFY_LOW_S     = (1U << 3),

    // verify dummy stack item consumed by CHECKMULTISIG is of zero-length (softfork safe, BIP62 rule 7).
    SCRIPT_VERIFY_NULLDUMMY = (1U << 4),

    // Using a non-push operator in the scriptSig causes script failure (softfork safe, BIP62 rule 2).
    SCRIPT_VERIFY_SIGPUSHONLY = (1U << 5),

    // Require minimal encodings for all push operations (OP_0... OP_16, OP_1NEGATE where possible, direct
```

```c
#include <stdio.h>
 
int main(void) {
    char c;
 
    scanf("%c", &c);
 
    printf("%c\n", c + 1);
 
    return 0;
}
```

```c
//
// Copyright 2018 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

#import <Foundation/Foundation.h>

NS_ASSUME_NONNULL_BEGIN

/**
 *  By default, NSObject has pass-by-value behavior during remote invocation.
 *
 *  This category provides APIs to do pass-by-value (or return-by-value) for one invocation, or
 *  statically enable a class to be pass-by-value. All APIs require the class to conform to
 *  NSCoding.
 */
@interface NSObject (EDOValueObject)

/**
 *  Enables this type to be a value type so it will be passed by value.
 *
 *  If a class is enabled as a value type, during remote invocation the objects of the class will
 *  be passed by value. Only classes conforming to @c NSCoding protocol can be passed by value.
 */
+ (void)edo_enableValueType;

/**
 *  Method to be called on invocation target to get a value object from remote invocation.
 *  This should not be called on a non-remote object.
 */
- (instancetype)returnByValue;

/**
 *  Method to be called on method parameter to pass a value object to remote invocation.
 */
- (instancetype)passByValue;

@end

NS_ASSUME_NONNULL_END
```

```c
#include<stdio.h>
/*int bubble(int arr[], int n){
	int a;
	int j, k;
	int count = 0;
	for(j=0; j<n; j++){
		for(k=n; k>=0; k--){
			if(arr[k-1]>arr[k]){
				a = arr[k-1];
				arr[k-1] = arr[k];
				arr[k] = a;
				count++;
			}
		}
	}
	return count;
}*/

int main(){
	int n;
	int arr[100];
	int i;
	int a;
	int j, k;
	int count = 0;
	scanf("%d", &n);
	for(i=0; i<n; i++){
		scanf("%d", &arr[i]);
	}
	
	
	for(j=0; j<n; j++){
		for(k=n; k>=0; k--){
			if(arr[k-1]>arr[k]){
				a = arr[k-1];
				arr[k-1] = arr[k];
				arr[k] = a;
				count++;
			}
		}
	}
	
	for(i=0; i<n; i++){
		if(i!=0){
			printf(" ");
		}
		printf("%d",arr[i]);
	}
	printf("\n");
	printf("%d\n",count);
	
	
	return 0;
}
```

```c
/* In-place translation functons: */
void xlat_start_info(struct start_info *native,
                     enum XLAT_start_info_console console)
{
    struct compat_start_info *compat = (void *)native;

    BUILD_BUG_ON(sizeof(*native) < sizeof(*compat));
    XLAT_start_info(compat, native);
}

void xlat_vcpu_runstate_info(struct vcpu_runstate_info *native)
{
    struct compat_vcpu_runstate_info *compat = (void *)native;

    BUILD_BUG_ON(sizeof(*native) < sizeof(*compat));
    XLAT_vcpu_runstate_info(compat, native);
}

#define xen_dom0_vga_console_info dom0_vga_console_info
CHECK_dom0_vga_console_info;
#undef dom0_vga_console_info

#define xen_evtchn_alloc_unbound evtchn_alloc_unbound
#define xen_evtchn_bind_interdomain evtchn_bind_interdomain
#define xen_evtchn_bind_ipi evtchn_bind_ipi
#define xen_evtchn_bind_pirq evtchn_bind_pirq
#define xen_evtchn_bind_vcpu evtchn_bind_vcpu
#define xen_evtchn_bind_virq evtchn_bind_virq
#define xen_evtchn_close evtchn_close
#define xen_evtchn_op evtchn_op
#define xen_evtchn_send evtchn_send
#define xen_evtchn_status evtchn_status
#define xen_evtchn_unmask evtchn_unmask
CHECK_evtchn_op;
#undef xen_evtchn_alloc_unbound
#undef xen_evtchn_bind_interdomain
#undef xen_evtchn_bind_ipi
#undef xen_evtchn_bind_pirq
#undef xen_evtchn_bind_vcpu
#undef xen_evtchn_bind_virq
#undef xen_evtchn_close
#undef xen_evtchn_op
#undef xen_evtchn_send
#undef xen_evtchn_status
#undef xen_evtchn_unmask

#define xen_mmu_update mmu_update
CHECK_mmu_update;
#undef xen_mmu_update

#define xen_vcpu_time_info vcpu_time_info
CHECK_vcpu_time_info;
#undef xen_vcpu_time_info

/*
 * Local variables:
 * mode: C
 * c-file-style: "BSD"
```

```c
SG_ENTER_SUBR("regex-matches");
  if (SG_ARGC != 1)
    Sg_WrongNumberOfArgumentsViolation(
     SG_INTERN("regex-matches"), 1, SG_ARGC, SG_NIL);
  m_scm = SG_ARGREF(0);
  if (!SG_MATCHERP(m_scm))
    Sg_WrongTypeOfArgumentViolation(
       sg__rc.d164[4], SG_MAKE_STRING("matcher"), m_scm, SG_NIL);
  m = SG_MATCHER(m_scm);
  {
{
int SG_RESULT = (int)NULL;

#line 42 "./regex_stub.stub"
SG_RESULT=(Sg_RegexMatches(m));
SG_RETURN(SG_MAKE_BOOL(SG_RESULT));
}
  }
}
static SG_DEFINE_SUBR(regex_stub_regex_matches__STUB, 1, 0,regex_stub_regex_matches, SG_FALSE, NULL);
```

```c
// @flag --unroll=6

#define USAGE "./reorder <param1> <param2>\n"

static int iSet = 4;
static int iCheck = 1;

static int a = 0;
static int b = 0;

void *setThread(void *param);
void *checkThread(void *param);
void set();
int check();

int main(int argc, char *argv[]) {
  int i, err;

  if (argc != 1) {
    if (argc != 3) {
      fprintf(stderr, "./reorder <param1> <param2>\n");
      exit(-1);
    } else {
      sscanf(argv[1], "%d", &iSet);
      sscanf(argv[2], "%d", &iCheck);
    }
  }

  pthread_t setPool[iSet];
  pthread_t checkPool[iCheck];

  for (i = 0; i < iSet; i++) {
    if (0 != (err = pthread_create(&setPool[i], ((void *)0), &setThread,
                                   ((void *)0)))) {
      fprintf(stderr, "Error [%d] found creating set thread.\n", err);
      exit(-1);
    }
  }

  for (i = 0; i < iCheck; i++) {
    if (0 != (err = pthread_create(&checkPool[i], ((void *)0), &checkThread,
                                   ((void *)0)))) {
      fprintf(stderr, "Error [%d] found creating check thread.\n", err);
      exit(-1);
    }
  }
```

```c
bool Static = false;

	//camera
	
	float FOV;
	float AspectRatio;
	float NearPlane=0.1f;
	float FarPlane = 1000.0f;


	bool materialActive = true;
	bool diffuse = true;
	bool chekers = false;

	bool meshActive = true;
	bool vertex_normals = false;
	bool facenormals = false;

	int Triangles = 0;
	int vertex = 0;
	int normal = 0;
	int normal_faces = 0;
	int index = 0;
	int uvs = 0;

	

};

#endif //__WINDOWINSPECTOR_SETTINGS_H__
```

```c
// Copyright 2019, Institute for Artificial Intelligence - University of Bremen
// Author: Andrei Haidu (http://haidu.eu)

#pragma once

#include "CoreMinimal.h"
#include "Skeletal/SLPoseableMeshActor.h"
#include "SLPoseableMeshActorWithMask.generated.h"

class USkeletalMesh;
class ASkeletalMeshActor;
class UPoseableMeshComponent;

UCLASS()
class ASLPoseableMeshActorWithMask : public ASLPoseableMeshActor
{
	GENERATED_BODY()
	
public:	
	// Sets default values for this actor's properties
	ASLPoseableMeshActorWithMask();

	// Setup the poseable mesh
	virtual void SetSkeletalMesh(USkeletalMesh* SkelMesh) override;

	// Setup the poseable mesh from a skeletal mesh actor
	virtual void SetSkeletalMeshAndPose(ASkeletalMeshActor* SkelMeshActor) override;

	// Apply bone transformations
	virtual void SetSkeletalPose(const TPair<FTransform, TMap<int32, FTransform>>& SkeletalPose) override;

	// Set a custom material on the skeletal mesh at the given index
	void SetCustomMaterial(int32 ElementIndex, UMaterialInterface* Material);

	// Set a custom material on all the indexes
	void SetCustomMaterial(UMaterialInterface* Material);

	// Show mask
	void ShowMask();

	// Show original
	void ShowOriginal();

	// Returns PoseableMeshComponent subobject 
	UPoseableMeshComponent* GetPoseableMeshComponentMask() const { return PoseableMeshComponentMask; }

protected:
```

```c
#ifndef _MOT_EST_MB_H
#define _MOT_EST_MB_H

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

Void  	MBMotionEstimation _P_((	
			SInt *curr,
			SInt *prev,
			Int br_x,
			Int br_y,
			Int br_width,
			Int i,
			Int j,
			Int prev_x,
			Int prev_y,
			Int vop_width,
			Int vop_height,
			Int enable_8x8_mv,
			Int edge,
			Int f_code,
			Int sr,
			Float hint_mv_w,
			Float hint_mv_h,
			Float *mv16_w,
			Float *mv16_h,
			Float *mv8_w,
			Float *mv8_h,
			Int *min_error,
			SInt *flags
	));
```

```c
@property (strong, nonatomic) BPDisplaySettings *displaySettings;

/*!
 * Whether or not to render the markdown asynchronously. If you are concerned with loading long
 * bodies of text, this may be of use to you. You can schedule the view to immediately load,
 * render markdown to Core Text frames in the background, and then show the results when it 
 * has finished.
 *
 * The default is to load synchronously.
 */
@property (assign, nonatomic, getter = isAsynchronous) BOOL asynchronous;

/*!
 * The duration at which an asynchronous load operation will fade the text in at. This property
 * only has an effect when this view loads asynchronously.
 */
@property (assign, nonatomic) NSTimeInterval asynchronousRevealDuration;

/*!
 * The delegate that should handle link taps. By default this view will use the system to open
 * links based on whatever handler is most appropriate.
 */
@property (weak, nonatomic) id<BPMarkdownViewLinkDelegate> linkDelegate;

- (id)initWithFrame:(CGRect)frame markdown:(NSString *)markdown;

@end

@protocol BPMarkdownViewLinkDelegate <NSObject>

- (void)markdownView:(BPMarkdownView *)markdownView didHaveLinkTapped:(NSString *)link;

@end
```

```c
/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 2:50:50 AM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /System/Library/Frameworks/StoreKit.framework/StoreKit
* classdump-dyld is licensed under GPLv3, Copyright © 2013-2016 by Elias Limneos.
*/


@class NSString, NSArray, SKProductDiscount, NSDecimalNumber, NSLocale, SKProductSubscriptionPeriod;

@interface SKProductInternal : NSObject {

	NSString* _contentVersion;
	BOOL _downloadable;
	NSArray* _downloadContentLengths;
	SKProductDiscount* _introductoryPrice;
	NSString* _localeIdentifier;
	NSString* _localizedDescription;
	NSString* _localizedTitle;
	NSDecimalNumber* _price;
	NSLocale* _priceLocale;
	NSString* _productIdentifier;
	NSString* _subscriptionGroupIdentifier;
	SKProductSubscriptionPeriod* _subscriptionPeriod;
	NSArray* _discounts;

}
@end
```

```c
/*
 * exit.c
 */

#include "lib/os/syscalls.h"

void __ctOS__exit(int status) {
    __ctOS_syscall(__SYSNO_EXIT, 1,  status);
}
```

```cpp
#include <bits/stdc++.h>

using namespace std;

int main() {
  ios_base::sync_with_stdio(0);
  cin.tie(0);
  long long n, s;
  cin >> n >> s;
  // b <= sqrt(n)
  for (long long b = 2; b * b <= n; b++) {
    long long digSum = 0, num = n;
    while (num >= b) {
      digSum += num % b;
      num /= b;
    }
    digSum += num;
    if (digSum == s) {
      cout << b << "\n";
      exit(0);
    }
  }
  // b > sqrt(n)
  auto ok = [](long long p, long long q, long long b) {
    return p >= 0 && p < b && q >= 0 && q < b;
  };
  long long ans = LONG_LONG_MAX;
  for (long long x = 1; x * x <= n - s; x++) {
    if ((n - s) % x == 0) {
      long long y = (n - s) / x;
      long long b = x + 1;
      long long p = (n - s) / x, q = s - p;
      if (ok(p, q, b)) ans = min(ans, b);
      b = y + 1;
      p = (n - s) / y;
      q = s - p;
      if (ok(p, q, b)) ans = min(ans, b);
    }
  }
  cout << ((ans == LONG_LONG_MAX) ? -1 : ans) << "\n"; 
  return 0;
}
```

```cpp
#include <bits/stdc++.h>
#define INF 2000000000
using namespace std;
typedef long long ll;
int read(){
	int f = 1, x = 0;
	char c = getchar();
	while(c < '0' || c > '9'){if(c == '-') f = -f; c = getchar();}
	while(c >= '0' && c <= '9')x = x * 10 + c - '0', c = getchar();
	return f * x; 
}
class Solution {
public:
    int trap(vector<int>& height) {
        int n = height.size();
        vector<int> l(n, 0), r(n, 0);
        int ans = 0;
        for (int i = 1; i < n; ++i)
            l[i] = max(l[i - 1], height[i - 1]);
        for (int i = n - 2; i >= 0; --i)
            r[i] = max(r[i + 1], height[i + 1]), 
            ans += max(0, min(l[i], r[i]) - height[i]);
        
        return ans;
    }
};
Solution sol;
void init(){
    
}
void solve(){
	// sol.convert();
}
int main(){
	init();
	solve();
	return 0;
}
```

```cpp
#include <iostream>
#include <string>
using namespace std;


int main(){

    string S;
    cin >> S;

    int price = 700;
    
    for( int i = 0; i < 3; i ++ ){
        if( S[i] == 'o' ) price += 100;
    }

    cout << price << endl;

    return 0;

}
```

```cpp
#include <iostream>
#include <unordered_map>
using namespace std;
typedef long long ll;

int main() {
    int N; cin >> N;
    unordered_map<ll, ll> mp;
    for (int i = 0; i < N; i++) {
        int A; cin >> A;
        mp[A]++;
    }
    int Q; cin >> Q;
    for (int i = 0; i < Q; i++) {
        int B, C; cin >> B >> C;
        ll n = 0;
        for (auto ite = mp.begin(); ite != mp.end(); ite++) {
            if (ite->first == B) {
                n = ite->second;
                mp.erase(ite);
            }
        }
        mp[C] += n;
        ll ans = 0;
        for (auto ite = mp.begin(); ite != mp.end(); ite++) {
            ans += ite->first * ite->second;
        }
        cout << ans << endl;
    }
}
```

```cpp
// Copyright (c) 2009-2010 crury Nakamoto
// Copyright (c) 2009-2018 The Cruro Core developers
// Distributed under the MIT software license, see the accompanying
// file COPYING or http://www.opensource.org/licenses/mit-license.php.

#include <policy/fees.h>

#include <clientversion.h>
#include <primitives/transaction.h>
#include <streams.h>
#include <txmempool.h>
#include <util/system.h>

static constexpr double INF_FEERATE = 1e99;

std::string StringForFeeEstimateHorizon(FeeEstimateHorizon horizon) {
    static const std::map<FeeEstimateHorizon, std::string> horizon_strings = {
        {FeeEstimateHorizon::SHORT_HALFLIFE, "short"},
        {FeeEstimateHorizon::MED_HALFLIFE, "medium"},
        {FeeEstimateHorizon::LONG_HALFLIFE, "long"},
    };
    auto horizon_string = horizon_strings.find(horizon);

    if (horizon_string == horizon_strings.end()) return "unknown";

    return horizon_string->second;
}

/**
 * We will instantiate an instance of this class to track transactions that were
 * included in a block. We will lump transactions into a bucket according to their
 * approximate feerate and then track how long it took for those txs to be included in a block
 *
 * The tracking of unconfirmed (mempool) transactions is completely independent of the
 * historical tracking of transactions that have been confirmed in a block.
 */
class TxConfirmStats
{
private:
    //Define the buckets we will group transactions into
    const std::vector<double>& buckets;              // The upper-bound of the range for the bucket (inclusive)
    const std::map<double, unsigned int>& bucketMap; // Map of bucket upper-bound to index into all vectors by bucket

    // For each bucket X:
    // Count the total # of txs in each bucket
    // Track the historical moving average of this total over blocks
    std::vector<double> txCtAvg;

    // Count the total # of txs confirmed within Y blocks in each bucket
    // Track the historical moving average of these totals over blocks
    std::vector<std::vector<double>> confAvg; // confAvg[Y][X]
```

```cpp
// Copyright (c) 2009-2010 Satoshi Nakamoto
// Copyright (c) 2009-2014 The Bitcoin developers
// Copyright (c) 2014-2015 The Dash developers
// Copyright (c) 2015-2017 The PIVX developers
// Copyright (c) 2021 The Retrex Developers
// Distributed under the MIT/X11 software license, see the accompanying
```

```cpp
#include<iostream>
using namespace std ;
int main()
{
  int W,S;
  cin>>S>>W;
  if(W>=S)
  {
    cout<<"unsafe";
  }
  else cout<<"safe";
}
```

```cpp
// Gimbal2Servo.cpp : This file contains the 'main' function. Program execution begins and ends there.
//

#include "pch.h"
#include <iostream>
#include <cmath>

// Inner Gimbal is Pitch
// Outer Gimbal is Roll

using namespace std;

double pi = 3.1415926535;

// Inner Gimbal Dimensions (mm)
// l1 = 27.5;% distance from gimbal point to connecting rod mount
// l2 = 37.9;% connecting rod length
// l3 = 11.9;% servo control horn radius
// pos1 = -37.65;% x component of gimbal pivit point position
// pos2 = -35;% y component of gimbal pivit point position

// Outer Gimbal Dimensions (mm)
// l1 = 25.75;% distance from gimbal point to connecting rod mount
// l2 = 36.3;% connecting rod length
// l3 = 11.9;% servo control horn radius
// pos1 = 36.2;% x component of gimbal pivit point position
// pos2 = -11;% y component of gimbal pivit point position

// g_theta = Wanted Gimbal Deflection (degrees)

double gimbal2servo(double l1, double l2, double l3, double pos1, double pos2, double g_theta)
{
	double point2x = cos((g_theta * (pi / 180)) - pi / 2) * l1;
	double point2y = sin((g_theta * (pi / 180)) - pi / 2) * l1;
	double d = sqrt(pow((point2x - pos1), 2) + pow((point2y - pos2), 2));
	double L = (pow(l2, 2) - pow(l3, 2) + pow(d, 2)) / (2 * d);
	double h = sqrt(pow(l2, 2) - pow(L, 2));
	double p3_x = (L / d) * (pos1 - point2x) + (h / d) * (pos2 - point2y) + point2x;
	double p3_y = (L / d) * (pos2 - point2y) - (h / d) * (pos1 - point2x) + point2y;
	double servoangle = (atan((p3_x - pos1) / (pos2 - p3_y))) * (180 / pi);
	return servoangle;
}

int main()
{
	double InnerGimbal = gimbal2servo(27.5, 37.9, 11.9, -37.65, -35, 10);
	// Inner Gimbal Deflection of 10 degrees
	cout << InnerGimbal << endl; // Inner Gimbal is Pitch

	double OuterGimbal = gimbal2servo(25.75, 36.3, 11.9, 36.2, -11, 10);
	// Outer Gimbal Deflection of 10 degrees
	cout << OuterGimbal << endl; // Outer Gimbal is Roll
}
```

```cpp
#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#pragma GCC optimize("unroll-loops,no-stack-protector")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
 
using namespace __gnu_pbds;
using namespace std;
 
template <typename T>
using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;
 
typedef long long ll;
typedef long double ld;	
 
int main(){
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	ll n;
	cin >> n;
	string s;
	cin >> s;
	if (s.size() & 1){
		cout << "No" << endl;
	}
	else {
		string a,b;
		for (int z=0;z<n/2;z++){
			a += s[z];
		}
		for (int z=n/2;z<n;z++){
			b += s[z];
		}
		if (a == b) cout << "Yes" << endl;
		else cout << "No" << endl;
	}
}
```

```cpp
/***********************************************************************************************************************
 *  OpenStudio(R), Copyright (c) 2008-2018, Alliance for Sustainable Energy, LLC. All rights reserved.
 *
 *  Redistribution and use in source and binary forms, with or without modification, are permitted provided that the
 *  following conditions are met:
 *
 *  (1) Redistributions of source code must retain the above copyright notice, this list of conditions and the following
 *  disclaimer.
 *
 *  (2) Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
 *  following disclaimer in the documentation and/or other materials provided with the distribution.
 *
 *  (3) Neither the name of the copyright holder nor the names of any contributors may be used to endorse or promote
 *  products derived from this software without specific prior written permission from the respective party.
 *
 *  (4) Other than as required in clauses (1) and (2), distributions in any form of modifications or other derivative
 *  works may not use the "OpenStudio" trademark, "OS", "os", or any other confusingly similar designation without
 *  specific prior written permission from Alliance for Sustainable Energy, LLC.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
 *  INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 *  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER, THE UNITED STATES GOVERNMENT, OR ANY CONTRIBUTORS BE LIABLE FOR
 *  ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 *  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
 *  AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 **********************************************************************************************************************/

#include "../ForwardTranslator.hpp"
#include "../../model/HeatBalanceAlgorithm.hpp"
#include "../../utilities/idd/IddEnums.hpp"
#include <utilities/idd/HeatBalanceAlgorithm_FieldEnums.hxx>
#include <utilities/idd/IddEnums.hxx>

using namespace openstudio::model;

namespace openstudio {

namespace energyplus {

boost::optional<IdfObject> ForwardTranslator::translateHeatBalanceAlgorithm( HeatBalanceAlgorithm & modelObject )
{
  IdfObject idfObject( openstudio::IddObjectType::HeatBalanceAlgorithm);

  idfObject.setString(HeatBalanceAlgorithmFields::Algorithm,modelObject.algorithm());

  idfObject.setDouble(HeatBalanceAlgorithmFields::SurfaceTemperatureUpperLimit,modelObject.surfaceTemperatureUpperLimit());

  if (!modelObject.isMinimumSurfaceConvectionHeatTransferCoefficientValueDefaulted()) {
    idfObject.setDouble(HeatBalanceAlgorithmFields::MinimumSurfaceConvectionHeatTransferCoefficientValue,
                        modelObject.minimumSurfaceConvectionHeatTransferCoefficientValue());
  }

  if (!modelObject.isMaximumSurfaceConvectionHeatTransferCoefficientValueDefaulted()) {
    idfObject.setDouble(HeatBalanceAlgorithmFields::MaximumSurfaceConvectionHeatTransferCoefficientValue,
                        modelObject.maximumSurfaceConvectionHeatTransferCoefficientValue());
  }

  m_idfObjects.push_back(idfObject);

  return boost::optional<IdfObject>(idfObject);
}

} // energyplus

} // openstudio
```

```cpp
#include "catch.hpp"
#include "main.hpp"

#include <iostream>

TEST_CASE("Collection functions", "[collections]") {

    SECTION("something") {
        //REQUIRE(c == 37);
    }

    SECTION("something_else") {
        //REQUIRE(c == 44);
    }
}
```

```cpp
#include "bits/stdc++.h"

using namespace std;

using ll = long long;

int main() {
  int n, c, k;
  cin >> n >> c >> k;
  vector<ll> v(n);
  for (int i = 0; i < n; ++i) {
    cin >> v[i];
  }
  sort(v.begin(), v.end());
  int ans = 0;
  for (int i = 0; i < n; ++i) {
    int passenger = 0;
    for (int j = 0; j < c && v[i + j] <= v[i] + k; ++j) {
      passenger = j;
      if (i + j + 1 >= n)
        break;
    }
    i += passenger;
    ans++;
  }
  cout << ans << endl;
}
```

```cpp
// ARKSurvivalEvolved (329.9) SDK

#ifdef _MSC_VER
	#pragma pack(push, 0x8)
#endif

#include "ARKSurvivalEvolved_PrimalItemConsumable_UnlockHair_Facial_VikingBeard_parameters.hpp"

namespace sdk
{
//---------------------------------------------------------------------------
//Functions
//---------------------------------------------------------------------------

// Function PrimalItemConsumable_UnlockHair_Facial_VikingBeard.PrimalItemConsumable_UnlockHair_Facial_VikingBeard_C.ExecuteUbergraph_PrimalItemConsumable_UnlockHair_Facial_VikingBeard
// ()
// Parameters:
// int                            EntryPoint                     (Parm, ZeroConstructor, IsPlainOldData)

void UPrimalItemConsumable_UnlockHair_Facial_VikingBeard_C::ExecuteUbergraph_PrimalItemConsumable_UnlockHair_Facial_VikingBeard(int EntryPoint)
{
	static auto fn = UObject::FindObject<UFunction>("Function PrimalItemConsumable_UnlockHair_Facial_VikingBeard.PrimalItemConsumable_UnlockHair_Facial_VikingBeard_C.ExecuteUbergraph_PrimalItemConsumable_UnlockHair_Facial_VikingBeard");

	UPrimalItemConsumable_UnlockHair_Facial_VikingBeard_C_ExecuteUbergraph_PrimalItemConsumable_UnlockHair_Facial_VikingBeard_Params params;
	params.EntryPoint = EntryPoint;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
```

```cpp
#include "bits/stdc++.h"
#define rep(i,n) for(int i = 0; i < (n); ++i)
using namespace std;
typedef long long int ll;
typedef pair<ll, ll> P;
template<class T> inline bool chmax(T& a, T b) { if (a < b) { a = b; return 1; } return 0; }
template<class T> inline bool chmin(T& a, T b) { if (a > b) { a = b; return 1; } return 0; }

int a[505][505];

int main(){
	cin.tie(0);
	ios::sync_with_stdio(false);
	int h, w;
	cin >> h >> w;
	rep(i,h)rep(j,w) cin >> a[i][j];
	vector<pair<P,P>> ans;
	for(int i = 0; i < h; ++i){
		if(i%2 == 0){
			for(int j = 0; j < w-1; ++j){
				if(a[i][j]%2 != 0){
					a[i][j]--;
					a[i][j+1]++;
					ans.emplace_back(P(i,j),P(i,j+1));
				}
			}
			if(i == h-1) continue;
			if(a[i][w-1]%2 != 0){
				a[i][w-1]--;
				a[i+1][w-1]++;
				ans.emplace_back(P(i,w-1),P(i+1,w-1));
			}
		}
		else{
			for(int j = w-1; j > 0; --j){
				if(a[i][j]%2 != 0){
					a[i][j]--;
					a[i][j-1]++;
					ans.emplace_back(P(i,j),P(i,j-1));
				}
			}
			if(i == h-1) continue;
			if(a[i][0]%2 != 0){
				a[i][0]--;
				a[i+1][0]++;
				ans.emplace_back(P(i,0),P(i+1,0));
			}
		}
	}
	cout << ans.size() << endl;
	for(auto p : ans){
		cout << p.first.first+1 << " " << p.first.second+1 << " ";
		cout << p.second.first+1 << " " << p.second.second+1 << endl;
	}
	return 0;
}
```

```cpp
#include <iostream>
#include <string>
using namespace std;
const char* solve() {
	string S;
	cin >> S;
	for (int i = 0; i < S.size(); i += 2) {
		if (S[i] == 'L') return "No";
		if (i + 1 < S.size() && S[i + 1] == 'R') return "No";
	}
	return "Yes";
}
int main() {
	cout << solve() << endl;
}
```

```cpp
// Boost.Geometry (aka GGL, Generic Geometry Library)
// Unit Test

// Copyright (c) 2017, Oracle and/or its affiliates.

// Contributed and/or modified by Vissarion Fysikopoulos, on behalf of Oracle

// Licensed under the Boost Software License version 1.0.
// http://www.boost.org/users/license.html

#include <iostream>

#ifndef BOOST_TEST_MODULE
#define BOOST_TEST_MODULE test_distance_geographic_point_box
#endif

#include <boost/range.hpp>
#include <boost/type_traits/is_same.hpp>

#include <boost/test/included/unit_test.hpp>
#include <boost/geometry/util/condition.hpp>
#include <boost/geometry/strategies/strategies.hpp>

#include "test_distance_geo_common.hpp"

typedef bg::cs::geographic<bg::degree> cs_type;
typedef bg::model::point<double, 2, cs_type> point_type;
typedef bg::model::multi_point<point_type> multi_point_type;
typedef bg::model::segment<point_type> segment_type;
typedef bg::model::box<point_type> box_type;

namespace services = bg::strategy::distance::services;
typedef bg::default_distance_result<point_type>::type return_type;

typedef bg::srs::spheroid<double> stype;

// Strategies for point-point distance

typedef bg::strategy::distance::andoyer<stype> andoyer_pp;
typedef bg::strategy::distance::thomas<stype> thomas_pp;
typedef bg::strategy::distance::vincenty<stype> vincenty_pp;

// Strategies for point-segment distance

typedef bg::strategy::distance::geographic_cross_track<bg::strategy::andoyer, stype, double>
        andoyer_ps;

typedef bg::strategy::distance::geographic_cross_track<bg::strategy::thomas, stype, double>
        thomas_ps;

typedef bg::strategy::distance::geographic_cross_track<bg::strategy::vincenty, stype, double>
        vincenty_ps;

// Strategies for point-box distance

typedef bg::strategy::distance::geographic_cross_track_point_box
        <
            bg::strategy::andoyer,
            bg::srs::spheroid<double>,
            double
        > andoyer_pb;

typedef bg::strategy::distance::geographic_cross_track_point_box
        <
            bg::strategy::thomas,
            bg::srs::spheroid<double>,
            double
        > thomas_pb;

typedef bg::strategy::distance::geographic_cross_track_point_box
        <
            bg::strategy::vincenty,
            bg::srs::spheroid<double>,
            double
        > vincenty_pb;

//===========================================================================

template <typename Strategy>
inline bg::default_distance_result<point_type>::type
pp_distance(std::string const& wkt1,
            std::string const& wkt2,
            Strategy const& strategy)
{
    point_type p1, p2;
    bg::read_wkt(wkt1, p1);
    bg::read_wkt(wkt2, p2);
    return bg::distance(p1, p2, strategy);
}

template <typename Strategy>
inline bg::default_distance_result<point_type>::type
ps_distance(std::string const& wkt1,
            std::string const& wkt2,
            Strategy const& strategy)
{
    point_type p;
    segment_type s;
    bg::read_wkt(wkt1, p);
    bg::read_wkt(wkt2, s);
    return bg::distance(p, s, strategy);
}

//===========================================================================
// Cases for relative location of a point wrt to a box
//
//           |         |
//           |    3    |
//           |         |
//           +---------+
//           |         |
//       1   |    5    |   2
//           |         |
//           +---------+
//           |         |
//           |    4    |
//           |         |
//
// and also the following cases
//
//           |         |
//           A         B
//           |         |
//           +----C----+
//           |         |
//           D         E
//           |         |
//           +----F----+
//           |         |
//           G         H
//           |         |
//
// and finally we have the corners
//
```

```cpp
#include<iostream>
#include<cmath>
#include<cstdio>

using namespace std;

class Dice{
public:
    int face[6];

    Dice(int m[]){
        for (int i = 0; i < 6; ++i)
        {
            face[i] = m[i];
        }
    };
    void swap4(int a, int b, int c, int d){
        int s;
        s = face[a]; face[a] = face[b]; face[b] = face[c]; face[c] = face[d]; face[d] = s;
    }
    void move(char direction){
        int s;
        if(direction == 'N') swap4(1,2,6,5);
        if(direction == 'W') swap4(1,3,6,4);
        if(direction == 'S') swap4(1,5,6,2);
        if(direction == 'E') swap4(1,4,6,3);
    }
};



int main(int argc, char const *argv[])
{
    int input[6];
    char ch;
    for (int i = 0; i < 6; ++i)
    {
        cin >> input[i];
    }
    Dice dice(input);
    while(scanf("%c", &ch) != EOF) {
        dice.move(ch);
    }
    printf("%d\n", dice.face[1]);
    return 0;
}
```

```cpp
/********************************************************************
	created:	2010/09/05
	filename: 	ShaderVariableMap.cc
	author:		Crazii
	purpose:	

*********************************************************************/
#include <BladePCH.h>
#include <ShaderVariableMap.h>
#include <interface/public/graphics/IGraphicsResourceManager.h>
#include "ShaderConstantTypeBind.h"

#define USE_VECTOR_FOR_INSTANCE_MAP 1

namespace Blade
{
	namespace Impl
	{
		class CustomVariable : public AutoShaderVariable
		{
		public:
			CustomVariable()
				:AutoShaderVariable(NULL, SCT_UNDEFINED, 0, SVU_CUSTOM_FLAG)
			{
			}

			~CustomVariable()
			{
			}

			CustomVariable(const CustomVariable& rhs)
				:AutoShaderVariable(rhs.mUpdater, rhs)
			{
				if (rhs.getBuffer() != NULL)
				{
					mData = mBuffer.alloc(EShaderConstantType(mType), mCount);
					assert(mData != NULL);
					assert(mDataDirty == false);
				}
				else
					assert(mType == SCT_UNDEFINED && mCount == 0 && mDataDirty == true);
			}

			/** @brief  */
			void		initialize(SHADER_CONSTANT_TYPE type, size_t count, EShaderVariableUsage usage)
			{
				assert(mBuffer.getBuffer() == NULL);
				mType = type;
				mCount = (uint16)count;
				mSize = (uint16)IGraphicsResourceManager::getSingleton().getShaderConstantSize(mType);
				mBytes = (uint32)mSize * (uint32)mCount;
```

```cpp
#include <bits/stdc++.h>
using namespace std;

int main() {
  int a;
  int b;
  cin >> a;
  cin >> b;
  cout << b+b-a<< endl;
}
```

```cpp
#include <taskflow/taskflow.hpp>  // Taskflow is header-only

#include "idx.h"

#include "../util/chrono.h"

std::atomic<int> task_counter = 0;

struct NodeOp {
  Idx idx;

  NodeOp(const Idx& idx) : idx(idx){}

  void operator()(tf::Subflow& subflow) {
    ++task_counter;
    if (idx.l+1<LMAX) {
      subflow.emplace(NodeOp(Idx(idx.l + 1, {{idx.x[0] * 2}})));
      subflow.emplace(NodeOp(Idx(idx.l + 1, {{idx.x[0] * 2 + 1}})));
    }
  }
};

int main(int argc, char *argv[]){

  int nt = std::thread::hardware_concurrency();
  if (argc > 1) {
    nt = std::atoi(argv[1]);
  }

  tf::Executor executor(nt);
  tf::Taskflow taskflow;

  auto t0 = now();

  tf::Task init = taskflow.emplace([](){ ++task_counter; });

  tf::Task down = taskflow.emplace(NodeOp(Idx{}));
  init.precede(down);

  executor.run(taskflow).wait();
  auto t1 = now();
```

```cpp
/* Copyright 2015 The TensorFlow Authors. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
==============================================================================*/

#if GOOGLE_CUDA

#define EIGEN_USE_GPU

#include "tensorflow/core/framework/bfloat16.h"
#define SPECIALIZE_FOR_GPUS
#include "tensorflow/core/kernels/cast_op.h"
#undef SPECIALIZE_FOR_GPUS

namespace tensorflow {
namespace functor {

typedef Eigen::GpuDevice GPUDevice;

CAST_FUNCTORS(GPUDevice);

#define DEFINE(O, I) template struct CastFunctor<GPUDevice, O, I>

#define DEFINE_ALL_FROM(in_type)        \
  DEFINE(in_type, bool);                \
  DEFINE(in_type, uint8);               \
  DEFINE(in_type, uint16);              \
  DEFINE(in_type, uint32);              \
  DEFINE(in_type, uint64);              \
  DEFINE(in_type, int8);                \
  DEFINE(in_type, int16);               \
  DEFINE(in_type, int32);               \
  DEFINE(in_type, int64);               \
  DEFINE(in_type, Eigen::half);         \
  DEFINE(in_type, float);               \
  DEFINE(in_type, double);              \
  DEFINE(in_type, std::complex<float>); \
  DEFINE(in_type, std::complex<double>)

DEFINE_ALL_FROM(bool);
DEFINE_ALL_FROM(uint8);
DEFINE_ALL_FROM(uint16);
DEFINE_ALL_FROM(uint32);
DEFINE_ALL_FROM(uint64);
DEFINE_ALL_FROM(int8);
DEFINE_ALL_FROM(int16);
DEFINE_ALL_FROM(int32);
DEFINE_ALL_FROM(int64);
DEFINE_ALL_FROM(double);
DEFINE_ALL_FROM(std::complex<double>);
DEFINE(float, bfloat16);

#define DEFINE_ALL_TO_FLOAT(out_type) \
  DEFINE(out_type, bool);             \
  DEFINE(out_type, uint8);            \
  DEFINE(out_type, uint16);           \
  DEFINE(out_type, uint32);           \
  DEFINE(out_type, uint64);           \
  DEFINE(out_type, int8);             \
  DEFINE(out_type, int16);            \
  DEFINE(out_type, int32);            \
  DEFINE(out_type, int64);            \
  DEFINE(out_type, Eigen::half);      \
  DEFINE(out_type, float);            \
  DEFINE(out_type, std::complex<float>)

#define DEFINE_ALL_TO_HALF(out_type) \
  DEFINE(out_type, bool);            \
  DEFINE(out_type, uint8);           \
  DEFINE(out_type, uint16);          \
  DEFINE(out_type, uint32);          \
  DEFINE(out_type, uint64);          \
  DEFINE(out_type, int8);            \
  DEFINE(out_type, int16);           \
  DEFINE(out_type, int32);           \
  DEFINE(out_type, int64);           \
  DEFINE(out_type, Eigen::half)
```

```cpp
{
    std::queue<int> my_queue;

    my_queue.push(100);
    my_queue.push(200);
    my_queue.push(300);

    cout << "expected front 100, front " << my_queue.front() << endl;
    cout << "expected back 300, back " << my_queue.back() << endl;

    my_queue.pop();
    cout << "expected front 200, front " << my_queue.front() << endl;

    return 0;
}
```

```cpp
#include<iostream>
#include<vector>
using namespace std;

struct UnionFind {
  vector<int> data;
  UnionFind(int size) : data(size, -1) { }
  bool unionSet(int x, int y) {
    x = root(x); y = root(y);
    if (x != y) {
      if (data[y] < data[x]) swap(x, y);
      data[x] += data[y]; data[y] = x;
    }
    return x != y;
  }
  bool findSet(int x, int y) {
    return root(x) == root(y);
  }
  int root(int x) {
    return data[x] < 0 ? x : data[x] = root(data[x]);
  }
  int size(int x) {
    return -data[root(x)];
  }
};

int main(){
    int n,m;
    cin >> n >> m;
    vector<int> x(m),y(m);
    vector<long long>ans(m);
    UnionFind tree(n);
    for(int i=0;i<m;i++){
        cin >> x[i] >> y[i];
        x[i]--;
        y[i]--;
    }
    ans[m-1] = (long long)n*(n-1)/2;
    for(int i=m-1;i>=1;i--){
      ans[i-1] = ans[i];
      if(tree.root(x[i]) != tree.root(y[i])){
        ans[i-1] -= (long long)tree.size(x[i])*tree.size(y[i]);
        tree.unionSet(x[i], y[i])
      }
    }
    for(int i=0;i<m;i++){
      cout << ans[i];
    }
}
```

```cpp
#include "fpstimer.h"
#include <QTimer>
#include <QElapsedTimer>
#include <QDebug>

FPSTimer::FPSTimer(QObject *parent) : QObject(parent)
{
    m_timer = new QTimer(this);
    m_elapsed_timer = new QElapsedTimer();
    m_timer->setInterval(m_interval);
    connect(m_timer, &QTimer::timeout,
            this, &FPSTimer::onTimerTimeout);
}

void FPSTimer::onTimerTimeout()
{
    double seconds_elapsed = static_cast<double>(m_elapsed_timer->nsecsElapsed()) / 1000000000.0;
    m_elapsed_timer->start();
    double fps = static_cast<double>(m_frame_count) /seconds_elapsed;
    emit fpsUpdated(fps);
    m_frame_count = 0;
}

void FPSTimer::setInterval(int interval)
{
    m_interval = interval;
    m_timer->setInterval(interval);
}

void FPSTimer::setRunning(bool running)
{
    if(running) {
        m_timer->start(m_interval);
        m_elapsed_timer->start();
    }
    else {
        m_timer->stop();
        m_elapsed_timer->invalidate();
        emit fpsUpdated(0.0);
    }
}

bool FPSTimer::isRunning()
{
    return m_timer->isActive();
}
```

```cpp
#include <iostream>

using namespace std;

int main() {
  int cnt;
  cin >> cnt;
  int max_n=0, max_ns_score=-1;
  for (int i=0; i<cnt; i++) {
    int n, score;
    cin >> n >> score;
    if (max_ns_score < 0) {
      max_n = n; max_ns_score = score;
    }
    if (max_n < n) {
      max_n = n; max_ns_score = score;
    }
    cout << (max_n+max_ns_core) << std::endl;
  }
  return 0;
}
```

```cpp
#include <bits/stdc++.h>
using namespace std;

#define all(x) (x).begin(),(x).end()
#define rep(i,l,r) for(int i=(int)(l);i<(int)(r);i++)

typedef long long ll;
const ll MOD = 1e9 + 7;
const ll inf = 1LL<<60;
const double eps = 1e-9;



int main()
{
    int N, c = 0;
    string S;
    cin >> N >> S;
    for (int i = 0; i < N-3; i++) {
        if (S[i] == 'A' && S[i+1] == 'B' && S[i+2] == 'C') c++;
    }
    cout << c << endl;
    return 0;
}
```

```cpp
/*
 * Copyright 2009-2017 Alibaba Cloud All rights reserved.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include <alibabacloud/vpc/model/ModifyNqaResult.h>
#include <json/json.h>

using namespace AlibabaCloud::Vpc;
using namespace AlibabaCloud::Vpc::Model;

ModifyNqaResult::ModifyNqaResult() :
	ServiceResult()
{}

ModifyNqaResult::ModifyNqaResult(const std::string &payload) :
	ServiceResult()
{
	parse(payload);
}

ModifyNqaResult::~ModifyNqaResult()
{}

void ModifyNqaResult::parse(const std::string &payload)
{
	Json::Reader reader;
	Json::Value value;
	reader.parse(payload, value);

	setRequestId(value["RequestId"].asString());

}
```

```cpp
#include<bits/stdc++.h>
using namespace std;
int main(void){
int n,m,a;
cin>>n>>m;
m=min(m,3*n-m);
if (m<n){
a=(m+1)*(m+2)/2;
}else{
int p=m-n,q=n-p,r=p+q+q;
a=(r+1)*(r+2)/2-3*q*(q+1)/2;
;
;
}
;
;
;
cout<<a<<endl;
return 0;
}
```

```cpp
#include "example.h"
#include <opentelemetry/trace/provider.h>
#include <opentelemetry/trace/tracer_provider.h>

namespace {
opentelemetry::nostd::shared_ptr<opentelemetry::trace::Tracer> get_tracer()
{
    return opentelemetry::trace::Provider::GetTracerProvider()->GetTracer("example");
}
}

int example()
{
    auto tracer = get_tracer();
    tracer->StartSpan("example", { { "answer", 42 } }, { { tracer->GetCurrentSpan()->GetContext(), { { "trueParent", true } } } });
    return 42;
}
```

```cpp
/*
 * socket.h
 *
 *  Created on: Sep 19, 2019
 *      Author: dnszaikin
 */

#include <iostream>
#include <functional>
#include <future>

#include "WebSession.h"
#include "WebSessionHandlerFactory.h"

#ifndef _WIN32
#include "AsyncUnixServer.h"
#else
#include "AsyncWindowsServer.h"
#endif

using namespace std;

int main(int argc, char **argv) {

	try {
#ifndef _WIN32
		using web = dnszaikin::pollhttpd::network::web::WebSession<network::UnixClientSocket>;

		dnszaikin::pollhttpd::network::AsyncUnixServer<web> server;
```

```cpp
#ifndef INCLUDE_ITER_COMPARISON_HPP
#define INCLUDE_ITER_COMPARISON_HPP

#include "iter/core.hpp"

template<iter::iter I1, iter::iter I2>
constexpr bool operator==(I1 i1, I2 i2) {
    auto item1 = iter::no_next<I1>();
    auto item2 = iter::no_next<I2>();

    while (!!iter::detail::emplace_next(item1, i1) & !!iter::detail::emplace_next(item2, i2)) {
        if (*item1 != *item2) return false;
    }

    return !!item1 == !!item2;
}

template<iter::concepts::random_access_iter I1, iter::concepts::random_access_iter I2>
constexpr bool operator==(I1 i1, I2 i2) {
    auto size = iter::detail::impl::size(i1);
    if (size != iter::detail::impl::size(i2)) return false;

    for (std::size_t i = 0; i < size; ++i) {
        decltype(auto) item1 = iter::detail::impl::get(i1, i);
        decltype(auto) item2 = iter::detail::impl::get(i2, i);
        if (item1 != item2) return false;
    }

    return true;
}

template<iter::iter I1, iter::iter I2>
constexpr auto operator<=>(I1 i1, I2 i2) {
    auto item1 = iter::no_next<I1>();
    auto item2 = iter::no_next<I2>();

    while (!!iter::detail::emplace_next(item1, i1)
         & !!iter::detail::emplace_next(item2, i2)) {
        if (auto rel = *item1 <=> *item2; rel != 0) return rel;
    }

    return !!item1 <=> !!item2;
}

#endif /* INCLUDE_ITER_COMPARISON_HPP */
```

```cpp
// Copyright (c) 2009-2010 Satoshi Nakamoto
// Copyright (c) 2009-2014 The Bitcoin developers
// Copyright (c) 2017-2020 The PIVX developers
// Copyright (C) 2019-2020 The ucacoin developers
// Distributed under the MIT software license, see the accompanying
// file COPYING or http://www.opensource.org/licenses/mit-license.php.

#include "script/standard.h"

#include "pubkey.h"
#include "script/script.h"
#include "util.h"
#include "utilstrencodings.h"

typedef std::vector<unsigned char> valtype;

unsigned nMaxDatacarrierBytes = MAX_OP_RETURN_RELAY;

CScriptID::CScriptID(const CScript& in) : uint160(Hash160(in.begin(), in.end())) {}

const char* GetTxnOutputType(txnouttype t)
{
    switch (t)
    {
    case TX_NONSTANDARD: return "nonstandard";
    case TX_PUBKEY: return "pubkey";
    case TX_PUBKEYHASH: return "pubkeyhash";
    case TX_SCRIPTHASH: return "scripthash";
    case TX_MULTISIG: return "multisig";
    case TX_COLDSTAKE: return "coldstake";
    case TX_NULL_DATA: return "nulldata";
    }
    return NULL;
}

static bool MatchPayToPubkey(const CScript& script, valtype& pubkey)
{
    if (script.size() == CPubKey::PUBLIC_KEY_SIZE + 2 && script[0] == CPubKey::PUBLIC_KEY_SIZE && script.back() == OP_CHECKSIG) {
        pubkey = valtype(script.begin() + 1, script.begin() + CPubKey::PUBLIC_KEY_SIZE + 1);
        return CPubKey::ValidSize(pubkey);
    }
    if (script.size() == CPubKey::COMPRESSED_PUBLIC_KEY_SIZE + 2 && script[0] == CPubKey::COMPRESSED_PUBLIC_KEY_SIZE && script.back() == OP_CHECKSIG) {
        pubkey = valtype(script.begin() + 1, script.begin() + CPubKey::COMPRESSED_PUBLIC_KEY_SIZE + 1);
        return CPubKey::ValidSize(pubkey);
    }
    return false;
}

static bool MatchPayToPubkeyHash(const CScript& script, valtype& pubkeyhash)
{
```

```cpp
#include<iostream>
#include<string>
 
using namespace std;
 
int main()
{
  int a, b;
  string op;
   
  while(true)
    {
      cin >> a >> op >> b;
       
      if (op == "+")
        cout << a + b << endl;
      else if (op == "-")
        cout << a - b << endl;
      else if (op == "*")
        cout << a * b << endl;
      else if (op == "/")
        cout << a / b << endl;
      else if (op == "?")
        break;
    }
  return 0;
}
```

```cpp
#include<iostream>
#include<vector>

using namespace std;
const long long m = 1e9 + 7;
int main(){
  long long N,M; cin >> N >> M;
  if( abs( N - M ) >= 2){ cout << 0 << endl; return 0;}
  else{
    if( abs(N - M ) == 1){
      long long sum = 1;
      for(long long i = 1; i <= N; i++){ sum *= i; sum  = sum % m;}
      for(long long j = 1; j <= M; j++){ sum *= j; sum = sum % m;}
      cout << sum << endl; return 0;}
    if(  N == M){
      long long sum = 1;
      for(long long i = 1; i <= N; i++){ sum *= i; sum  = sum % m;}
      for(long long j = 1; j <= M; j++){ sum *= j; sum = sum % m;}
      cout << 2* sum << endl; return 0;}
  }}
```

```cpp
{
        int input;
        std::cout << "\nCurrent sum: " << var << " enter a number: " << std::endl;
        std::cin >> input;
        var += input;
    } while (- < 10);


    return 0;
}
```

```cpp
extern "C" {
    #include "/LLVM/llvm-install/include/clang-c/Index.h"
}

#include "/LLVM/llvm-install/include/llvm/Support/CommandLine.h"
#include <iostream>


using namespace llvm;

static cl::opt<std::string>
    FileName(cl::Positional, cl::desc("Input file"), cl::Required);



enum    CXChildVisitResult visitNode(CXCursor cursor, CXCursor parent, CXClientData client_data) {



    


    return CXChildVisit_Recurse;
}


int main(int argc, char** argv)
{
    
    return 0;
}
```

```cpp
#include <iostream>
using namespace std;

int main(void) {
	int a, b, c;
	int tmp;
	cin >> a >> b >> c;
	if (a > b) {
		tmp = b;
		b = a;
		a = tmp;
	}
	if (b < c) {
		tmp = c;
		c = b;
		b = tmp;
	}
	if (a > b) {
		tmp = b;
		b = a;
		a = tmp;
	}
	cout << a << " " << b << " " << c << endl;
	return 0;
}
```

```cpp
#include<algorithm>
#include<bitset>
#include<cmath>
#include<complex>
#include<cstdlib>
#include<iomanip>
#include<iostream>
#include<map>
#include<queue>
#include<set>
#include<string>
#include<utility>
#include<vector>

using namespace std;

#define ll long long
#define pal pair<ll,ll>
#define pad pair<double,double>
#define PB push_back
#define MP make_pair
#define F first
#define S second

const ll MOD = 1e9+7;
const ll INF = 1e18;
const double EPS = 1e-8;

long long MODPOW(long long x, long long n) {
    long long ret = 1;
    while (n > 0) {
        if (n & 1) ret = ret * x % MOD;
        x = x * x % MOD;
        n >>= 1;
    }
    return ret;
}

template<typename T,typename U>
bool chmax(T& max, const U& x){
	if(max<x){
		max = x;
		return true;
	}
	return false;
}

template<typename T,typename U>
bool chmin(T& min, const U& x){
	if(min>x){
		min = x;
		return true;
	}
	return false;
}


int main(){
	ll h,w,n,r,c;
    string ans="YES";
    cin >> h >> w >> n >> r >> c;
    string s,t;
    cin >> s >> t;
    map<char,ll> mp;
    mp['L']=0;mp['R']=2;mp['U']=1;mp['D']=3;
    vector<ll> a={c,r,w-c+1,h-r+1};
    vector<ll> lurd(4,0);
    for(ll i=0;i<n;i++){
        lurd[mp[s[i]]]++;
        if(lurd[mp[s[i]]]==a[mp[s[i]]]){
            ans="NO";
            break;
        }
        lurd[(mp[t[i]]+2)%4]--;
        chmax(lurd[(mp[t[i]]+2)%4],1-a[(mp[t[i]]+2)%4]);
        
    }
    cout << ans << endl;
}
```

```cpp
//======================================================================================================================
/** @file polyphase_hb_upsampler.cpp
 *  @author Open Speech Platform (OSP) Team, UCSD
 *  @copyright Copyright (C) 2021 Regents of the University of California Redistribution and use in source and binary
 *  forms, with or without modification, are permitted provided that the following conditions are met:
 *
 *      1. Redistributions of source code must retain the above copyright notice, this list of conditions and the
 *      following disclaimer.
 *
 *      2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
 *      following disclaimer in the documentation and/or other materials provided with the distribution.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
 *  INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 *  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 *  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 *  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
 *  USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
//======================================================================================================================

#include "polyphase_hb_upsampler.h"
#include <OSP/array_utilities/array_utilities.hpp>
#include <cassert>
#include <iostream>

polyphase_hb_upsampler::polyphase_hb_upsampler(float *filter_taps, uint num_taps, uint max_frame_size) {
    assert((max_frame_size & 0x1) == 0);
    assert((num_taps & 0x1) == 1);
    even_filter_taps = new float[(num_taps + 1) >> 1];
    odd_data = new float[max_frame_size]();
    even_data = new float[max_frame_size]();
    middle_tap = filter_taps[(num_taps - 1) >> 1];
    delay = ((num_taps + 1) >> 2) - 1;
    double_frame_size = max_frame_size << 1;
    for (uint i = 0; i < num_taps; i += 2) {
        even_filter_taps[i >> 1] = filter_taps[i];
        // std::cout << "Up Even Filter i = " << i << " = " << even_filter_taps[i >> 1] << std::endl;
    }
    // std::cout << "Up Middle Tap " << middle_tap << std::endl;
    even_filter = new fir_formii(even_filter_taps, (num_taps + 1) >> 1, max_frame_size);
    odd_filter = new circular_buffer(delay + max_frame_size, 0);
}
polyphase_hb_upsampler::~polyphase_hb_upsampler() {
    delete[] even_filter_taps;
    delete[] odd_data;
    delete[] even_data;
    delete even_filter;
    delete odd_filter;
}
void polyphase_hb_upsampler::process(float *in, float *out, uint frame_size) {
    /* Commutator */
    uint double_frame = frame_size << 1;

    even_filter->process(in, even_data, frame_size);
    odd_filter->set(in, frame_size);
    odd_filter->delay_block(odd_data, frame_size, delay);

    array_multiply_const(odd_data, middle_tap, frame_size);

    for (uint i = 0; i < double_frame; i += 2) {
        out[i] = even_data[i >> 1];
        out[i + 1] = odd_data[i >> 1];
    }
}
```

```cpp
#include<bits/stdc++.h>
using namespace std;
int main(){
  int s,g;
  cin >> s >> g;
  bool flag = false;
  if(s >= 6 && s <= 9){
    if(g >= s){
      for(int i=s;i<=g;i++){
	if(flag) cout << " ";
	cout << i;
	flag = true;
      }
      cout << endl;
      return 0;
    }
    else {
      for(int i=s;i<=9;i++){
	if(flag) cout << " ";
	cout << i;
	flag = true;
      }
      if(g >= 6 && s > g){
	for(int i=5;i> 0;i--){
	  if(flag) cout << " ";
	  cout << i;
	  flag  = true;
	}
	for(int i=0;i<=g;i++){
	  if(flag) cout << " ";
	  cout << i;
	  flag  = true;
	}
	cout << endl;
	return 0;
      }
      s = 5;
    }
  }
  if(g - s > 0){
    for(int i=s;i<=g;i++){
      if(flag) cout << " ";
      cout << i;
      flag  = true;
    }
    cout << endl;
  }
  else {
    for(int i=s;i>=g;i--){
      if(flag) cout << " ";
      cout << i;
      flag = true;
    }
    cout << endl;
  }
}
```

```cpp
// Copyright (c) 2009-2010 Satoshi Nakamoto
// Copyright (c) 2009-2014 The Bitcoin developers
// Copyright (c) 2015-2019 The PIVX developers
// Distributed under the MIT software license, see the accompanying
// file COPYING or http://www.opensource.org/licenses/mit-license.php.

#include "primitives/block.h"
#include "primitives/transaction.h"

#include "chain.h"
#include "hash.h"
#include "main.h"
#include "tinyformat.h"
#include "utilstrencodings.h"
#include "transaction.h"


extern bool GetTransaction(const uint256 &hash, CTransaction &txOut, uint256 &hashBlock, bool fAllowSlow);

std::string COutPoint::ToString() const
{
    return strprintf("COutPoint(%s, %u)", hash.ToString()/*.substr(0,10)*/, n);
}

std::string COutPoint::ToStringShort() const
{
    return strprintf("%s-%u", hash.ToString().substr(0,64), n);
}

uint256 COutPoint::GetHash()
{
    return Hash(BEGIN(hash), END(hash), BEGIN(n), END(n));
}

CTxIn::CTxIn(COutPoint prevoutIn, CScript scriptSigIn, uint32_t nSequenceIn)
{
    prevout = prevoutIn;
    scriptSig = scriptSigIn;
    nSequence = nSequenceIn;
}

CTxIn::CTxIn(uint256 hashPrevTx, uint32_t nOut, CScript scriptSigIn, uint32_t nSequenceIn)
{
    prevout = COutPoint(hashPrevTx, nOut);
    scriptSig = scriptSigIn;
    nSequence = nSequenceIn;
}

CTxIn::CTxIn(const libzerocoin::CoinSpend& spend, libzerocoin::CoinDenomination denom)
{
    //Serialize the coinspend object and append it to a CScript
    CDataStream serializedCoinSpend(SER_NETWORK, PROTOCOL_VERSION);
    serializedCoinSpend << spend;
    std::vector<unsigned char> data(serializedCoinSpend.begin(), serializedCoinSpend.end());

    scriptSig = CScript() << OP_ZEROCOINSPEND << data.size();
```

```cpp
/*****************************************************************************/
/**
 *  @file   main.cpp
 *  @brief  Example program for kvs::LineRenderer class.
 *  @author Naohisa Sakamoto
 */
/*****************************************************************************/
#include <kvs/Application>
#include <kvs/Screen>
#include <kvs/Message>
#include <kvs/KVSMLLineObject>
#include <kvs/LineImporter>
#include <kvs/LineObject>
#include <kvs/LineRenderer>


/*===========================================================================*/
/**
 *  @brief  Main function.
 *  @param  argc [i] argument count
 *  @param  argv [i] argument values
 *  @return true, if the main process is done succesfully
 */
/*===========================================================================*/
int main( int argc, char** argv )
{
    kvs::Application app( argc, argv );

    const std::string filename( argc > 1 ? argv[1] : "" );
    kvs::LineObject* object = new kvs::LineImporter( filename );
    if ( !object )
    {
        kvsMessageError( "Cannot creat a line object.");
        return ( false );
    }

    kvs::LineRenderer* renderer = new kvs::LineRenderer();
    if ( !renderer )
    {
        kvsMessageError( "Cannot creat a line renderer.");
    }

    kvs::Screen screen( &app );
    screen.registerObject( object, renderer );
    screen.setGeometry( 0, 0, 512, 512 );
    screen.setTitle( "kvs::LineRenderer" );
    screen.create();

    return app.run();
}
```

```cpp
// clang-format off
#include <bits/stdc++.h>

#define mp make_pair
#define fst first
#define snd second
#define forn(i,n) for (size_t i = 0; i < size_t(n); i++)
#define forn1(i,n) for (size_t i = 1; i <= size_t(n); i++)
#define popcnt __builtin_popcount
#define ffs __builtin_ffs
#define ctz __builtin_ctz
#define clz __builtin_clz
#define all(a) (a).begin(), (a).end()
 
using namespace std;

using uint = unsigned int;
using ll = long long;
using ull = unsigned long long;
using pii = pair<int,int>;
using pli = pair<ll,int>;
using pil = pair<int,ll>;
using pll = pair<ll,ll>;
template <typename T> using vec = vector<T>;
using vi = vec<int>;
using vl = vec<ll>;
template <typename T> using que = queue<T>;
template <typename T> using deq = deque<T>;

template <typename T> T id(T b) {return b;};
template <typename T> void chmax(T &x, T y) {if (x < y) x = y;}
template <typename T> void chmin(T &x, T y) {if (x > y) x = y;}
template <typename S, typename K> bool contains(S &s, K k) { return s.find(k) != s.end(); }
void fastio() { ios_base::sync_with_stdio(false); cin.tie(nullptr); }
constexpr ll TEN(int n) { if (n == 0) return 1LL; else return 10LL*TEN(n-1); }
// clang-format on

const ll MOD = TEN(9) + 7;
const ll MAX_N = 100000;
ll n, m;
ll x[MAX_N];
ll y[MAX_N];

int main() {
    fastio();

    cin >> n >> m;
    forn(i, n) cin >> x[i];
    forn(i, m) cin >> y[i];

    ll a = 0, b = 0;
    forn(i, n - 1) {
        a = (a + 1LL * (i + 1) % MOD * (n - i - 1) % MOD * (x[i + 1] - x[i]) % MOD) % MOD;
    }

    forn(i, m - 1) {
        b = (b + 1LL * (i + 1) % MOD * (m - i - 1) % MOD * (y[i + 1] - y[i]) % MOD) % MOD;
    }

    cout << a * b % MOD << endl;

    return 0;
}
```

```
cudf::test::fixed_width_column_wrapper<int64_t> expected({0, 0, 0});
  CUDF_TEST_EXPECT_COLUMNS_EQUAL(results->view(), expected);
}

template <typename T>
class StringsIntegerConvertTest : public StringsConvertTest {
};

TYPED_TEST_CASE(StringsIntegerConvertTest, cudf::test::IntegralTypesNotBool);

TYPED_TEST(StringsIntegerConvertTest, FromToInteger)
{
  thrust::device_vector<TypeParam> d_integers(255);
  thrust::sequence(
    thrust::device, d_integers.begin(), d_integers.end(), -(TypeParam)(d_integers.size() / 2));
  d_integers.push_back(std::numeric_limits<TypeParam>::min());
  d_integers.push_back(std::numeric_limits<TypeParam>::max());
  auto integers      = cudf::make_numeric_column(cudf::data_type{cudf::type_to_id<TypeParam>()},
                                            (cudf::size_type)d_integers.size());
  auto integers_view = integers->mutable_view();
  CUDA_TRY(cudaMemcpy(integers_view.data<TypeParam>(),
                      d_integers.data().get(),
                      d_integers.size() * sizeof(TypeParam),
                      cudaMemcpyDeviceToDevice));
  integers_view.set_null_count(0);

  // convert to strings
  auto results_strings = cudf::strings::from_integers(integers->view());

  thrust::host_vector<TypeParam> h_integers(d_integers);
  std::vector<std::string> h_strings;
  for (auto itr = h_integers.begin(); itr != h_integers.end(); ++itr)
    h_strings.push_back(std::to_string(*itr));

  cudf::test::strings_column_wrapper expected(h_strings.begin(), h_strings.end());
  CUDF_TEST_EXPECT_COLUMNS_EQUAL(*results_strings, expected);

  // convert back to integers
  auto strings_view = cudf::strings_column_view(results_strings->view());
  auto results_integers =
    cudf::strings::to_integers(strings_view, cudf::data_type(cudf::type_to_id<TypeParam>()));
```

```
// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#import "chrome/browser/ui/cocoa/location_bar/translate_decoration.h"

#include "chrome/app/chrome_command_ids.h"
#include "chrome/browser/command_updater.h"
#import "chrome/browser/ui/cocoa/omnibox/omnibox_view_mac.h"
#include "grit/generated_resources.h"
#include "grit/theme_resources.h"
#include "ui/base/l10n/l10n_util_mac.h"

TranslateDecoration::TranslateDecoration(CommandUpdater* command_updater)
    : command_updater_(command_updater) {
  SetLit(false);
}

TranslateDecoration::~TranslateDecoration() {}

void TranslateDecoration::SetLit(bool on) {
  const int image_id = on ? IDR_TRANSLATE_ACTIVE : IDR_TRANSLATE;
  SetImage(OmniboxViewMac::ImageForResource(image_id));
}

NSPoint TranslateDecoration::GetBubblePointInFrame(NSRect frame) {
  const NSRect draw_frame = GetDrawRectInFrame(frame);
  return NSMakePoint(NSMidX(draw_frame), NSMaxY(draw_frame));
}

bool TranslateDecoration::AcceptsMousePress() {
  return true;
}

bool TranslateDecoration::OnMousePressed(NSRect frame, NSPoint location) {
  command_updater_->ExecuteCommand(IDC_TRANSLATE_PAGE);
  return true;
}

NSString* TranslateDecoration::GetToolTip() {
  return l10n_util::GetNSStringWithFixup(IDS_TOOLTIP_TRANSLATE);
}
```

```
#lang scribble/manual
@title[#:style '(toc unnumbered)]{Notes}

These are the course notes for CMSC 430. They can be a bit
rough around the edges in places, but please keep in mind
this is a @emph{living} document. If you spot errors,
confusing prose, missing parts, or generally have
suggestions for improving the material, @bold{please},
@bold{please}, @bold{please} submit an
@link["https://github.com/cmsc430/www"]{issue on Github}.

@local-table-of-contents[#:style 'immediate-only]

@include-section{notes/1/what-is-a-compiler.scrbl}
@include-section{notes/1/ocaml-to-racket.scrbl}
@include-section{notes/a86.scrbl}
@include-section{notes/abscond.scrbl}
@include-section{notes/blackmail.scrbl}
@include-section{notes/con.scrbl}
@include-section{notes/dupe.scrbl}
@include-section{notes/dodger.scrbl}
@include-section{notes/evildoer.scrbl}
@include-section{notes/extort.scrbl}
@include-section{notes/fraud.scrbl}
@;include-section{notes/grift.scrbl}
@include-section{notes/hustle.scrbl}
@include-section{notes/iniquity.scrbl}
@include-section{notes/juvie.scrbl}
@include-section{notes/jig.scrbl}
@include-section{notes/knock.scrbl}
@include-section{notes/loot.scrbl}
@include-section{notes/shakedown.scrbl}
```

```
.page-grid {
  display: grid;
  grid-template-columns: 250px;
  grid-template-areas: "sidebar main";
  height: 100%;
  width: 100%;
}

.sidebar-position {
  grid-area: sidebar;
}

.sidebar {
  background-color: rgb(15, 15, 15);
  border-right-style: solid;
  border-right-width: 1px;
  border-right-color: rgb(35, 35, 35);
  border-collapse: collapse;
  width: 250px;
  height: 100%;
  position: fixed;
  left: 0;
  z-index: 10;
}

/* "a" tag is also associated to the "router-link" */

.sidebar a {
  display: block;
  height: 60px;
  border-collapse: collapse;
  padding: 15px 8px 15px 16px;
  text-decoration: none;
  font-size: 22px;
  color: rgb(200, 200, 200);
}

.sidebar .currentLink {
  background-color: rgb(60, 60, 60);
  border-left: solid rgb(0, 100, 255) 5px;
  color: white;
}

.sidebar a:hover:not(.currentLink) {
  background-color: rgb(30, 30, 30);
  border-left: solid rgb(0, 100, 255) 5px;
  color: white;
}

.main-position {
  grid-area: main;
}

.main-display {
  display: block;
  min-width: 700px;
}
```

```
/**
 * \file dnn/src/cuda/cumsum/kern_impl.cu
 * MegEngine is Licensed under the Apache License, Version 2.0 (the "License")
 *
 * Copyright (c) 2014-2021 Megvii Inc. All rights reserved.
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT ARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 */

#include "./kern.cuh"
#include "./kern_helper.cuh"
#include "./kern_impl.cuinl"

using namespace megdnn::cuda;
using namespace cumsum::detail::cubwrap;

namespace {

template <typename T>
struct FakeOp {
    __device__ T visit(int) { return 0; }
    __device__ static T apply(T, T) { return 0; }
};

template <bool reverse, typename T>
uint32_t get_workspace_elems_for_cub_1d_with_dtype_reverse(uint32_t nr_item) {
    typedef FakeOp<T> Op;
    Op op;
    InputIterator<T, Op, reverse> inp_iter(op, nr_item);
    OutputIterator<T, reverse> out_iter(NULL, nr_item);
    ScanOp<T, Op> scan_op;

    size_t wk_size0 = 0, wk_size1 = 0;
```

```
}
#loading-center-absolute {
  position: absolute;
  left: 50%;
  top: 50%;
  height: 50px;
  width: 150px;
  margin-top: -25px;
  margin-left: -75px;

}
.object{
  width: 8px;
  height: 50px;
  margin-right:5px;
  background-color: #ff7f00;
  -webkit-animation: animate 1s infinite;
  animation: animate 1s infinite;
  float: left;
}

.object:last-child {
  margin-right: 0px;
}

.object:nth-child(10){
  -webkit-animation-delay: 0.9s;
  animation-delay: 0.9s;	
}
.object:nth-child(9){
  -webkit-animation-delay: 0.8s;
  animation-delay: 0.8s;	
}	
.object:nth-child(8){
  -webkit-animation-delay: 0.7s;
  animation-delay: 0.7s;	
}
.object:nth-child(7){
  -webkit-animation-delay: 0.6s;
```

```
(**
 * Test case of CharVector structure.
 *
 * @author YAMATODANI Kiyoshi
 * @copyright (C) 2021 SML# Development Team.
 *)
structure CharVector101 = 
Sequence101(struct
              open CharVector
              type elem = Char.char
              type sequence = vector
              fun intToElem n = Char.chr (Char.ord #"A" + n)
              fun nextElem c = Char.chr (Char.ord c + 1)
              val elemToString = Char.toString
              val compareElem = Char.compare
            end)
```

```
/*
 * GridTools
 *
 * Copyright (c) 2014-2019, ETH Zurich
 * All rights reserved.
 *
 * Please, refer to the LICENSE file in the root directory.
 * SPDX-License-Identifier: BSD-3-Clause
 */

#include "./test_hypercube_iterator.cpp"
#include <gridtools/common/cuda_util.hpp>

static const size_t Size = 2;

GT_FUNCTION int linear_index(gridtools::array<size_t, 2> &index) { return index[0] * Size + index[1]; }

__global__ void test_kernel(int *out_ptr) {
    for (size_t i = 0; i < Size * Size; ++i)
        out_ptr[i] = -1;

    using hypercube_t = gridtools::array<gridtools::array<size_t, 2>, 2>;
    for (auto pos : make_hypercube_view(hypercube_t{{{0ul, Size}, {0ul, Size}}})) {
        out_ptr[linear_index(pos)] = linear_index(pos);
    }
};

TEST(multi_iterator, iterate_on_device) {
    int *out;
    GT_CUDA_CHECK(cudaMalloc(&out, sizeof(int) * Size * Size));

    test_kernel<<<1, 1>>>(out);

    int host_out[Size * Size];
    GT_CUDA_CHECK(cudaMemcpy(&host_out, out, sizeof(int) * Size * Size, cudaMemcpyDeviceToHost));

    for (size_t i = 0; i < Size * Size; ++i)
        ASSERT_EQ(i, host_out[i]) << "at i = " << i;
}
```

```
(make-rational (* (numerator a) (numerator b))
                 (* (denominator a) (denominator b))))
(define (print-rat rat)
  (word (numerator rat) '/ (denominator rat)))
```

```
MOD = 998244353i64
n, m = read_line.split.map(&.to_i64)

def inv(v)
  return pow(v, MOD.to_i32 - 2)
end

def pow(v, p)
  return 1i64 if p == 0
  return v if p == 1
  ret = pow(v, p / 2)
  ret = ret * ret % MOD
  if p % 2 == 1
    ret = ret * v
    ret %= MOD
  end
  return ret
end

iv = Array.new({n + 1, 3 * m / 2 + 2}.max.to_i32) { |i| inv(i.to_i64) }
comb = Array.new(n + 1, 0i64)
comb[0] = 1i64
1.upto(n) do |i|
  comb[i] = comb[i - 1] * (n - i + 1) % MOD * iv[i] % MOD
end
ans = 0i64
even = 1i64
overuse1 = 0i64 # more than 2 * m
overuse2 = 0i64 # more than or equals to 2 * m
0.upto(m * 3 / 2) do |i|
  odd = m * 3 - 2i64 * i
  if i == m
    overuse2 = n
  elsif i == m + 1
    overuse1 = n
    overuse2 = overuse2 * (n + (i - m) - 1) % MOD * iv[(i - m)] % MOD
  elsif i > m + 1
    overuse1 = overuse1 * (n + (i - m - 1) - 1) % MOD * iv[(i - m - 1)] % MOD
    overuse2 = overuse2 * (n + (i - m) - 1) % MOD * iv[(i - m)] % MOD
  end
  # puts [i, even, odd, overuse1, overuse2]
  if odd <= m
    ans += (even + (MOD - overuse2)) * comb[odd]
    if odd < n
      maxuse = overuse2 + (MOD - overuse1)
      ans += maxuse * comb[odd] % MOD * (n - odd) % MOD * iv[n]
    end
    ans %= MOD
    # puts ans
  end
  even = even * (n + i) % MOD * iv[i + 1] % MOD
end
puts ans
```

```
.form {
	width: 30%;
	margin: 10% auto;
	display:flex;
	flex-direction: column;
	flex-wrap: wrap;
	padding: 5%;
	border-radius: 25px;
	border: 3px solid cornflowerblue;
}

.form vaadin-password-field, vaadin-password-field {
	margin:5% 0;
}

.form .responseLogin {
	margin-top: 2%;
	color: red;
	text-align: center;
}
```

```
.navBar__wrapper {
    display: flex;
    align-items: center;
    justify-content: space-between;
    height: 64px;
    color: white;
}

.navBar__logo {
    margin-left: 48px;
}

.navBar__search {
    display: flex;
    height: 40px;
    padding: 10px;
    align-items: center;
    margin-right: 48px;
}

.navBar__searchContainer {
    height: 20px;
    border: 1px solid #31363A;
    border-radius: 4px;
    width: 275px;
}

.navBar__searchContainer > input {
    background-color: transparent;
    border: none;
    width: 100%;
    margin-left: 5px;
    margin-right: 5px;
    color: white;
}

.navBar__searchContainer > input:focus {
    outline: none;
}

.navBar__menuItems {
    margin-left: 48px;
    margin-right: 48px;
}

.navBar__menuItems a {
    color: black;
    font-weight: bold;
    text-decoration: none;
    padding: 0 10px;
}

.navBar__menuItems a:hover {
    color: #5AC53B;
}
```

```
/*** Spectra Vista SIG Data ***/
name= gr052418_0116.sig
instrument= HI: 1182092 (HR-1024i)
integration= 500.0, 40.0, 10.0, 500.0, 40.0, 10.0
scan method= Time-based, Time-based
scan coadds= 10, 116, 392, 10, 116, 392
scan time= 5, 5
scan settings= AI, AI
external data set1= 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
external data set2= 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
external data dark= 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
external data mask= 0
optic= LENS 4(1), LENS 4(1)
```

```
@import url('https://fonts.googleapis.com/css2?family=Major+Mono+Display&display=swap');

.share-features {
  display: flex;
  justify-content: left;
  margin-bottom: 10px;
}

h1 {
  display: flex;
  justify-content: center;
  color:rgb(8, 115, 187);
  font-family: 'Major Mono Display', monospace;
  font-size: 50px;
}

p {
  display: flex;
  justify-content: center;
  /* color: #39ff14; */
  font-size: 25px;
} 

.bold-challenge {
  font-weight: 600;
}
```

```
/*
 * Copyright (c) 2019, NVIDIA CORPORATION.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include <stdio.h>
#include <string.h>
#include <math.h>
#include <cuda_runtime.h>
#include <cudf/types.h>
#include <cudf/legacy/column.hpp>
#include <utilities/legacy/error_utils.hpp>
#include <rmm/rmm.h>
#include <cuspatial/soa_readers.hpp>
#include <utility/utility.hpp>

namespace cuspatial
{
    /**
    * @brief read lon/lat from file into two columns; data type is fixed to double (GDF_FLOAT64)
    *
    * see soa_readers.hpp
    */
```

```
/// reference-counting.
bool swift::usesNativeSwiftReferenceCounting(const ClassMetadata *theClass) {
#if SWIFT_OBJC_INTEROP
  if (!theClass->isTypeMetadata()) return false;
  return (theClass->getFlags() & ClassFlags::UsesSwift1Refcounting);
#else
  return true;
#endif
}

/// Decide dynamically whether the given type metadata uses native Swift
/// reference-counting.  The metadata is known to correspond to a class
/// type, but note that does not imply being known to be a ClassMetadata
/// due to the existence of ObjCClassWrapper.
SWIFT_CC(swift) SWIFT_RUNTIME_STDLIB_INTERNAL
bool
_objcClassUsesNativeSwiftReferenceCounting(const Metadata *theClass) {
#if SWIFT_OBJC_INTEROP
  // If this is ObjC wrapper metadata, the class is definitely not using
  // Swift ref-counting.
  if (isa<ObjCClassWrapperMetadata>(theClass)) return false;

  // Otherwise, it's class metadata.
  return usesNativeSwiftReferenceCounting(cast<ClassMetadata>(theClass));
#else
  return true;
#endif
}

// The non-pointer bits, excluding the ObjC tag bits.
static auto const unTaggedNonNativeBridgeObjectBits
  = heap_object_abi::SwiftSpareBitsMask
  & ~heap_object_abi::ObjCReservedBitsMask;

#if SWIFT_OBJC_INTEROP

#if defined(__x86_64__)
static uintptr_t const objectPointerIsObjCBit = 0x4000000000000000ULL;
#elif defined(__arm64__)
static uintptr_t const objectPointerIsObjCBit = 0x4000000000000000ULL;
#else
static uintptr_t const objectPointerIsObjCBit = 0x00000002U;
#endif

void *swift::swift_unknownRetain_n(void *object, int n)
    SWIFT_CC(DefaultCC_IMPL) {
  if (isObjCTaggedPointerOrNull(object)) return object;
  if (objectUsesNativeSwiftReferenceCounting(object)) {
    return swift_retain_n(static_cast<HeapObject *>(object), n);
  }
  for (int i = 0; i < n; ++i)
    objc_retain(static_cast<id>(object));

  return object;
}

void swift::swift_unknownRelease_n(void *object, int n)
    SWIFT_CC(DefaultCC_IMPL) {
  if (isObjCTaggedPointerOrNull(object)) return;
  if (objectUsesNativeSwiftReferenceCounting(object))
    return swift_release_n(static_cast<HeapObject *>(object), n);
  for (int i = 0; i < n; ++i)
    objc_release(static_cast<id>(object));
}

void *swift::swift_unknownRetain(void *object)
    SWIFT_CC(DefaultCC_IMPL) {
  if (isObjCTaggedPointerOrNull(object)) return object;
```

```
# distutils:language=c++
# cython:language_level=3

# mapping, filter_, mask, reduce_

from libcpp cimport bool

from .tree cimport TreeValue
from ..common.storage cimport TreeStorage

cdef object _c_no_arg(object func, object v, object p)
cdef object _c_one_arg(object func, object v, object p)
cdef object _c_two_args(object func, object v, object p)
cdef object _c_wrap_mapping_func(object func)
cdef object _c_delayed_mapping(object so, object func, tuple path, bool delayed)
cdef TreeStorage _c_mapping(TreeStorage st, object func, tuple path, bool delayed)
cpdef TreeValue mapping(TreeValue tree, object func, bool delayed= *)
cdef TreeStorage _c_filter_(TreeStorage st, object func, tuple path, bool remove_empty)
cpdef TreeValue filter_(TreeValue tree, object func, bool remove_empty= *)
cdef object _c_mask(TreeStorage st, object sm, tuple path, bool remove_empty)
cpdef TreeValue mask(TreeValue tree, object mask_, bool remove_empty= *)
cdef object _c_reduce(TreeStorage st, object func, tuple path, object return_type)
cpdef object reduce_(TreeValue tree, object func)
```

```
/*
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

#import "ABI44_0_0NSDataBigString.h"

namespace ABI44_0_0facebook {
namespace ABI44_0_0React {

static NSData *ensureNullTerminated(NSData *source)
{
  if (!source || source.length == 0) {
    return nil;
  }

  NSUInteger sourceLength = source.length;
  unsigned char lastByte;
  [source getBytes:&lastByte range:NSMakeRange(sourceLength - 1, 1)];

  // TODO: bundles from the packager should always include a NULL byte
  // or we should we relax this requirement and only read as much from the
  // buffer as length indicates
  if (lastByte == '\0') {
    return source;
  } else {
    NSMutableData *data = [source mutableCopy];
    unsigned char nullByte = '\0';
    [data appendBytes:&nullByte length:1];
    return data;
  }
}

NSDataBigString::NSDataBigString(NSData *data)
{
  m_length = [data length];
  m_data = ensureNullTerminated(data);
}

}
}
```

```
#include "rbbox_overlaps.hpp"
#include <vector>
#include <iostream>
#include <cmath>

#define CUDA_CHECK(condition) \
  /* Code block avoids redefinition of cudaError_t error */ \
  do { \
    cudaError_t error = condition; \
    if (error != cudaSuccess) { \
      std::cout << cudaGetErrorString(error) << std::endl; \
    } \
  } while (0)

#define DIVUP(m,n) ((m) / (n) + ((m) % (n) > 0))
int const threadsPerBlock = sizeof(unsigned long long) * 8;


__device__ inline float trangle_area(float * a, float * b, float * c) {
  return ((a[0] - c[0]) * (b[1] - c[1]) - (a[1] - c[1]) * (b[0] - c[0]))/2.0;
}

__device__ inline float area(float * int_pts, int num_of_inter) {

  float area = 0.0;
  for(int i = 0;i < num_of_inter - 2;i++) {
    area += fabs(trangle_area(int_pts, int_pts + 2 * i + 2, int_pts + 2 * i + 4));
  }
  return area;
}

__device__ inline void reorder_pts(float * int_pts, int num_of_inter) {



  if(num_of_inter > 0) {
    
    float center[2];
    
    center[0] = 0.0;
    center[1] = 0.0;

    for(int i = 0;i < num_of_inter;i++) {
      center[0] += int_pts[2 * i];
      center[1] += int_pts[2 * i + 1];
    }
    center[0] /= num_of_inter;
    center[1] /= num_of_inter;

    float vs[16];
    float v[2];
    float d;
    for(int i = 0;i < num_of_inter;i++) {
      v[0] = int_pts[2 * i]-center[0];
      v[1] = int_pts[2 * i + 1]-center[1];
      d = sqrt(v[0] * v[0] + v[1] * v[1]);
      v[0] = v[0] / d;
      v[1] = v[1] / d;
      if(v[1] < 0) {
        v[0]= - 2 - v[0];
      }
      vs[i] = v[0];
    }
    
    float temp,tx,ty;
    int j;
    for(int i=1;i<num_of_inter;++i){
      if(vs[i-1]>vs[i]){
        temp = vs[i];
        tx = int_pts[2*i];
        ty = int_pts[2*i+1];
        j=i;
        while(j>0&&vs[j-1]>temp){
          vs[j] = vs[j-1];
          int_pts[j*2] = int_pts[j*2-2];
          int_pts[j*2+1] = int_pts[j*2-1];
          j--;
        }
        vs[j] = temp;
        int_pts[j*2] = tx;
        int_pts[j*2+1] = ty;
      }
    }
  }

}
__device__ inline bool inter2line(float * pts1, float *pts2, int i, int j, float * temp_pts) {

  float a[2];
  float b[2];
  float c[2];
  float d[2];

  float area_abc, area_abd, area_cda, area_cdb;
```

```
--    contributors may be used to endorse or promote products derived from  --
--    this software without specific prior written permission.              --
--                                                                          --
-- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS      --
-- "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT        --
-- LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR    --
-- A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT     --
-- HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,   --
-- SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED --
-- TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR   --
-- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF   --
-- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING     --
-- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS       --
```

```
// Copyright 2013 The Flutter Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#include "ios_gl_context_switch_manager.h"

namespace flutter {

IOSGLContextSwitchManager::IOSGLContextSwitchManager() {
  resource_context_.reset([[EAGLContext alloc] initWithAPI:kEAGLRenderingAPIOpenGLES3]);
  stored_ = fml::scoped_nsobject<NSMutableArray>([[NSMutableArray new] retain]);
  resource_context_.reset([[EAGLContext alloc] initWithAPI:kEAGLRenderingAPIOpenGLES3]);
  if (resource_context_ != nullptr) {
    context_.reset([[EAGLContext alloc] initWithAPI:kEAGLRenderingAPIOpenGLES3
                                         sharegroup:resource_context_.get().sharegroup]);
  } else {
    resource_context_.reset([[EAGLContext alloc] initWithAPI:kEAGLRenderingAPIOpenGLES2]);
    context_.reset([[EAGLContext alloc] initWithAPI:kEAGLRenderingAPIOpenGLES2
                                         sharegroup:resource_context_.get().sharegroup]);
  }
};

IOSGLContextSwitchManager::~IOSGLContextSwitchManager() = default;

std::unique_ptr<RendererContextSwitchManager::RendererContextSwitch>
IOSGLContextSwitchManager::MakeCurrent() {
  return std::make_unique<IOSGLContextSwitchManager::IOSGLContextSwitch>(*this, context_);
}

std::unique_ptr<RendererContextSwitchManager::RendererContextSwitch>
IOSGLContextSwitchManager::ResourceMakeCurrent() {
  return std::make_unique<IOSGLContextSwitchManager::IOSGLContextSwitch>(*this, resource_context_);
}

fml::scoped_nsobject<EAGLContext> IOSGLContextSwitchManager::GetContext() {
  return context_;
}

bool IOSGLContextSwitchManager::PushContext(fml::scoped_nsobject<EAGLContext> context) {
  EAGLContext* current = [EAGLContext currentContext];
  if (current == nil) {
    [stored_.get() addObject:[NSNull null]];
  } else {
    [stored_.get() addObject:current];
  }
  bool result = [EAGLContext setCurrentContext:context.get()];
  return result;
}

void IOSGLContextSwitchManager::PopContext() {
  EAGLContext* last = [stored_.get() lastObject];
  [stored_.get() removeLastObject];
  if ([last isEqual:[NSNull null]]) {
    [EAGLContext setCurrentContext:nil];
    return;
  }
  [EAGLContext setCurrentContext:last];
}

IOSGLContextSwitchManager::IOSGLContextSwitch::IOSGLContextSwitch(
    IOSGLContextSwitchManager& manager,
    fml::scoped_nsobject<EAGLContext> context)
    : manager_(manager) {
  bool result = manager_.PushContext(context);
  has_pushed_context_ = true;
  switch_result_ = result;
}

IOSGLContextSwitchManager::IOSGLContextSwitch::~IOSGLContextSwitch() {
  if (!has_pushed_context_) {
    return;
  }
  manager_.PopContext();
}

bool IOSGLContextSwitchManager::IOSGLContextSwitch::GetSwitchResult() {
  return switch_result_;
}
}
```

```
a.team {
  color: #000;
}

table {
  box-shadow: 1.5px 1.5px 5px 1px rgba(0, 0, 0, .2);
}

thead th {
  font-weight: lighter;
  font-size: 0.7em;
  padding: 1px !important;
  height: 15px;
}

.compact {
  width: 10%;
}

.compacter {
  width: 5%;
}

tr.win {
  font-weight: bolder;
}

tr.lose {
  font-weight: lighter;
}

tr.lost {
  opacity: 0.2;
}

tr.highlight {
  background-color: lightyellow;
}

tr.atl-division {
}

tr.pac-division {
  background-color: #F8F8F8;
}

.low-chance {
  color: #ccc;
}

.tooltip {
  margin-left: 5px;
}
```

```
#include <cstdint>
#include <cstdlib>
#include <memory>

#include "../qikkDB/QueryEngine/Context.h"
#include "../qikkDB/QueryEngine/GPUCore/GPUMemory.cuh"
#include "../qikkDB/QueryEngine/GPUCore/GPUReconstruct.cuh"
#include "../qikkDB/QueryEngine/GPUCore/cuda_ptr.h"
#include "../qikkDB/ComplexPolygonFactory.h"
#include "gtest/gtest.h"

template <typename M, typename T>
void TestGenerateIndexes(std::vector<M> mask, std::vector<T> correctOutput)
{
    // Initialize CUDA context
    Context::getInstance();

    const int32_t ELEMENT_COUNT = mask.size();
    cuda_ptr<M> maskDevice(ELEMENT_COUNT);
    std::unique_ptr<T[]> resultHost = std::make_unique<T[]>(ELEMENT_COUNT);
    int32_t outCount;

    GPUMemory::copyHostToDevice(maskDevice.get(), mask.data(), ELEMENT_COUNT);

    GPUReconstruct::GenerateIndexes(resultHost.get(), &outCount, maskDevice.get(), ELEMENT_COUNT);

    ASSERT_EQ(outCount, correctOutput.size()) << "incorrect output count";
    for (int i = 0; i < outCount; i++)
    {
        ASSERT_EQ(resultHost.get()[i], correctOutput[i]) << "at [" << i << "], mask: " << mask[i];
    }
}

template <typename M, typename T>
void TestGenerateIndexesKeep(std::vector<M> mask, std::vector<T> correctOutput)
{
    // Initialize CUDA context
    Context::getInstance();

    const int32_t ELEMENT_COUNT = mask.size();
    cuda_ptr<M> maskDevice(ELEMENT_COUNT);
    T* resultDevice;
    int32_t outCount;

    GPUMemory::copyHostToDevice(maskDevice.get(), mask.data(), ELEMENT_COUNT);

    GPUReconstruct::GenerateIndexesKeep(&resultDevice, &outCount, maskDevice.get(), ELEMENT_COUNT);

    std::unique_ptr<T[]> resultHost = std::make_unique<T[]>(outCount);
    GPUMemory::copyDeviceToHost(resultHost.get(), resultDevice, outCount);
    GPUMemory::free(resultDevice);

    ASSERT_EQ(outCount, correctOutput.size()) << "incorrect output count";
```

```
print A, B, C, D, E

''
'' It's common to use them to represent options:
''
	enum
		SAY_HELLO
		SAY_HI
		SAY_BYE
		SAY_SEEYOU
	end enum

	sub saySomething( byval what as integer )
		select case what
		case SAY_HELLO, SAY_HI
			print "hello"
		case SAY_BYE, SAY_SEEYOU
			print "bye"
		end select
	end sub

	saySomething( SAY_HELLO )
	saySomething( SAY_BYE )
```

```
------------------------------------------------------------------------------
--                                                                          --
--                            Matreshka Project                             --
--                                                                          --
--                          Ada Modeling Framework                          --
--                                                                          --
--                        Runtime Library Component                         --
--                                                                          --
------------------------------------------------------------------------------
--                                                                          --
-- Copyright © 2012, Vadim Godunko <vgodunko@gmail.com>                     --
-- All rights reserved.                                                     --
--                                                                          --
-- Redistribution and use in source and binary forms, with or without       --
-- modification, are permitted provided that the following conditions       --
-- are met:                                                                 --
--                                                                          --
--  * Redistributions of source code must retain the above copyright        --
--    notice, this list of conditions and the following disclaimer.         --
--                                                                          --
--  * Redistributions in binary form must reproduce the above copyright     --
--    notice, this list of conditions and the following disclaimer in the   --
--    documentation and/or other materials provided with the distribution.  --
--                                                                          --
--  * Neither the name of the Vadim Godunko, IE nor the names of its        --
--    contributors may be used to endorse or promote products derived from  --
--    this software without specific prior written permission.              --
--                                                                          --
-- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS      --
-- "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT        --
-- LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR    --
-- A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT     --
-- HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,   --
```

```
# For use with Haskell IDE Engine or Haskell Language Server using cabal.
# Copy this file over to 'hie.yaml' to use.

cradle:
    cabal:
        - path: "./src"
          component: "lib:myriad"
        - path: "./app"
          component: "myriad:exe:myriad"
```

```
# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated. See the contributing guide for more information:
# https://github.com/aws/aws-sdk-ruby/blob/master/CONTRIBUTING.md
#
# WARNING ABOUT GENERATED CODE

$:.unshift(File.expand_path("../../lib", __FILE__))
$:.unshift(File.expand_path("../../../aws-sdk-core/features", __FILE__))
$:.unshift(File.expand_path("../../../aws-sdk-core/lib", __FILE__))
$:.unshift(File.expand_path("../../../aws-sigv4/lib", __FILE__))

require "features_helper"
require "aws-sdk-codestarnotifications"

Aws::CodeStarNotifications::Client.add_plugin(ApiCallTracker)
```

```
// Copyright (c) 2012 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#import <Cocoa/Cocoa.h>
#include <stddef.h>
#include <stdint.h>

#include "base/mac/mac_util.h"

#include "base/cxx17_backports.h"
#include "base/files/file_path.h"
#include "base/files/file_util.h"
#include "base/files/scoped_temp_dir.h"
#include "base/mac/foundation_util.h"
#include "base/mac/scoped_cftyperef.h"
#include "base/mac/scoped_nsobject.h"
#include "base/system/sys_info.h"
#include "testing/gtest/include/gtest/gtest.h"
#include "testing/platform_test.h"

#include <errno.h>
#include <sys/xattr.h>

namespace base {
namespace mac {

namespace {

using MacUtilTest = PlatformTest;

TEST_F(MacUtilTest, GetUserDirectoryTest) {
  // Try a few keys, make sure they come back with non-empty paths.
  FilePath caches_dir;
  EXPECT_TRUE(GetUserDirectory(NSCachesDirectory, &caches_dir));
  EXPECT_FALSE(caches_dir.empty());

  FilePath application_support_dir;
  EXPECT_TRUE(GetUserDirectory(NSApplicationSupportDirectory,
                               &application_support_dir));
  EXPECT_FALSE(application_support_dir.empty());

  FilePath library_dir;
  EXPECT_TRUE(GetUserDirectory(NSLibraryDirectory, &library_dir));
  EXPECT_FALSE(library_dir.empty());
}

TEST_F(MacUtilTest, TestLibraryPath) {
  FilePath library_dir = GetUserLibraryPath();
  // Make sure the string isn't empty.
  EXPECT_FALSE(library_dir.value().empty());
}

TEST_F(MacUtilTest, TestGetAppBundlePath) {
  FilePath out;

  // Make sure it doesn't crash.
  out = GetAppBundlePath(FilePath());
  EXPECT_TRUE(out.empty());

  // Some more invalid inputs.
  const char* const invalid_inputs[] = {
    "/", "/foo", "foo", "/foo/bar.", "foo/bar.", "/foo/bar./bazquux",
    "foo/bar./bazquux", "foo/.app", "//foo",
  };
  for (size_t i = 0; i < base::size(invalid_inputs); i++) {
    out = GetAppBundlePath(FilePath(invalid_inputs[i]));
    EXPECT_TRUE(out.empty()) << "loop: " << i;
  }

  // Some valid inputs; this and |expected_outputs| should be in sync.
  struct {
    const char *in;
    const char *expected_out;
  } valid_inputs[] = {
    { "FooBar.app/", "FooBar.app" },
    { "/FooBar.app", "/FooBar.app" },
    { "/FooBar.app/", "/FooBar.app" },
    { "//FooBar.app", "//FooBar.app" },
    { "/Foo/Bar.app", "/Foo/Bar.app" },
    { "/Foo/Bar.app/", "/Foo/Bar.app" },
```

```
/* This file provided by Facebook is for non-commercial testing and evaluation
 * purposes only.  Facebook reserves all rights not expressly granted.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
 * FACEBOOK BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
 * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

#import "WarmQuoteComponent.h"
#import "QuoteWithBackgroundComponent.h"
#import "QuoteContext.h"

#import <ComponentTextKit/CKLabelComponent.h>
#import <ComponentKit/CKInsetComponent.h>
#import <ComponentKit/CKRatioLayoutComponent.h>

@implementation WarmQuoteComponent

+ (instancetype)newWithText:(NSString *)text context:(QuoteContext *)context
{
  return [super newWithComponent:
          [QuoteWithBackgroundComponent
           newWithBackgroundImage:[context imageNamed:@"Powell"]
           quoteComponent:
           CK::RatioLayoutComponentBuilder()
            .ratio(1.3)
            .component(
                CK::InsetComponentBuilder()
                    .insetsLeft(30)
                    .insetsRight(30)
                    .insetsTop(INFINITY)
                    .insetsBottom(INFINITY)
                    .component([CKLabelComponent
                  newWithLabelAttributes:{
                    .string = text,
                    .font = [UIFont fontWithName:@"AmericanTypewriter" size:26],
                  }
                  viewAttributes:{
                    {@selector(setBackgroundColor:), [UIColor clearColor]},
                    {@selector(setUserInteractionEnabled:), @NO},
                  }
                  size:{ }])
                 .build()
            )
            .build()]];
}

@end
```

```
PROCEDURE DIVISION.
*          *> Method 1.
           ACCEPT home FROM ENVIRONMENT "HOME"
           DISPLAY home

*          *> Method 2.
           DISPLAY "HOME" UPON ENVIRONMENT-NAME
           ACCEPT home FROM ENVIRONMENT-VALUE

           GOBACK
           .
```

```
PROCESS CICS,NODYNAM,NSYMBOL(NATIONAL),TRUNC(STD)
      * Licensed Materials - Property of IBM
      *
      * SAMPLE
      *
      * (c) Copyright IBM Corp. 2016 All Rights Reserved
      *
      * US Government Users Restricted Rights - Use, duplication or
      * disclosure restricted by GSA ADP Schedule Contract with IBM Corp
      *
      ******************************************************************
      *  CRDTCHK

      * This program is part of the CICS Credit Card Application example

      * CRDTCHK - Credit check for an account. An account number
      * is used to call an external credit check service which returns
      * a three digit crdit score.

      * This example executes a 5 second delay to simulate
      * a credit check being made via a web service to
      * an external service provider.
      *
      ******************************************************************

       IDENTIFICATION DIVISION.
        PROGRAM-ID. CRDTCHK.
        AUTHOR. GOHILPR.

       ENVIRONMENT DIVISION.

       DATA DIVISION.
        WORKING-STORAGE SECTION.

      * Input record
       1 ACCOUNT-NUMBER-IN.
         2 CUST-NO-IN PIC X(4).

       1 RETURN-DATA.
         2 CREDIT-CHECK-RESULT    PIC X(3)  VALUE '   '.

        LOCAL-STORAGE SECTION.

       1 CONTAINER-NAMES.
         2 INPUT-CONTAINER    PIC X(16) VALUE 'INPUTCONTAINER  '.
         2 CRDTCHK-CONTAINER  PIC X(16) VALUE 'CREDITCHECKCONT '.

       1 PROG-NAMES.
         2 CREDIT-CHECK       PIC X(8) VALUE 'CRDTCHK '.

       1 COMMAND-RESP  PIC S9(8) COMP.
       1 COMMAND-RESP2 PIC S9(8) COMP.

        LINKAGE SECTION.


       PROCEDURE DIVISION .

       MAINLINE SECTION.

      * Get the input account number

           EXEC CICS GET CONTAINER ( INPUT-CONTAINER )
                           INTO    ( ACCOUNT-NUMBER-IN )
                           RESP    ( COMMAND-RESP )
                           RESP2   ( COMMAND-RESP2 )
           END-EXEC

      * "Call" the credit check service
           IF ACCOUNT-NUMBER-IN = '0001'
           THEN
             MOVE '998' TO CREDIT-CHECK-RESULT
           ELSE
             MOVE '537' TO CREDIT-CHECK-RESULT
           END-IF

           EXEC CICS DELAY FOR SECONDS(5)
           END-EXEC

      * Pass the result back to parent
           EXEC CICS PUT CONTAINER ( CRDTCHK-CONTAINER )
                           FROM    ( CREDIT-CHECK-RESULT )
                           RESP    ( COMMAND-RESP )
                           RESP2   ( COMMAND-RESP2 )
           END-EXEC

      * --------------------------------------------------------------
      * Finished
      * --------------------------------------------------------------
           EXEC CICS RETURN
           END-EXEC.

       END PROGRAM 'CRDTCHK'.
```

```
@import url("//fonts.googleapis.com/css?family=Raleway:700");

/*! normalize.css v2.1.3 | MIT License | git.io/normalize */

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block;
}

audio,
canvas,
video {
  display: inline-block;
}

audio:not([controls]) {
  display: none;
  height: 0;
}

[hidden],
template {
  display: none;
}

html {
  font-family: sans-serif;
  -webkit-text-size-adjust: 100%;
      -ms-text-size-adjust: 100%;
}

body {
  margin: 0;
```

```
#notify {font-size:35px;display:inline;position:relative;font-family:Helvetica;}
#ilist{height: 138px; text-align: center;}
#craving{height:150px; text-align: center;color:#606060;}
#craving_s{height:150px;text-align: center;color:#606060;}
#but{display:inline-block; width:42%;}
#crav{text-align: center;}
#bbmb{border-radius: 10px;}
```

```
SUM = ZERO
               DO 50 I = 1, J - 1
                  ABSA = ABS( A( I, J ) )
                  SUM = SUM + ABSA
                  WORK( I ) = WORK( I ) + ABSA
   50          CONTINUE
               WORK( J ) = SUM + ABS( A( J, J ) )
   60       CONTINUE
            DO 70 I = 1, N
               SUM = WORK( I )
               IF( VALUE .LT. SUM .OR. SISNAN( SUM ) ) VALUE = SUM
   70       CONTINUE
         ELSE
            DO 80 I = 1, N
               WORK( I ) = ZERO
   80       CONTINUE
            DO 100 J = 1, N
               SUM = WORK( J ) + ABS( A( J, J ) )
               DO 90 I = J + 1, N
                  ABSA = ABS( A( I, J ) )
                  SUM = SUM + ABSA
                  WORK( I ) = WORK( I ) + ABSA
   90          CONTINUE
               IF( VALUE .LT. SUM .OR. SISNAN( SUM ) ) VALUE = SUM
  100       CONTINUE
         END IF
      ELSE IF( ( LSAME( NORM, 'F' ) ) .OR. ( LSAME( NORM, 'E' ) ) ) THEN
*
*        Find normF(A).
*
         SCALE = ZERO
         SUM = ONE
         IF( LSAME( UPLO, 'U' ) ) THEN
            DO 110 J = 2, N
               CALL SLASSQ( J-1, A( 1, J ), 1, SCALE, SUM )
  110       CONTINUE
         ELSE
            DO 120 J = 1, N - 1
               CALL SLASSQ( N-J, A( J+1, J ), 1, SCALE, SUM )
  120       CONTINUE
         END IF
         SUM = 2*SUM
         CALL SLASSQ( N, A, LDA+1, SCALE, SUM )
         VALUE = SCALE*SQRT( SUM )
      END IF
*
      SLANSY = VALUE
      RETURN
*
*     End of SLANSY
*
      END
```

```
/*
 * Copyright (c) 2021, NVIDIA CORPORATION.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#pragma once

#include "../haversine_distance.cuh"
#include <cstdint>
#include <thrust/functional.h>

namespace raft {
namespace spatial {
namespace knn {
namespace detail {

struct NNComp {
  template <typename one, typename two>
  __host__ __device__ bool operator()(const one& t1, const two& t2)
  {
    // sort first by each sample's reference landmark,
    if (thrust::get<0>(t1) < thrust::get<0>(t2)) return true;
    if (thrust::get<0>(t1) > thrust::get<0>(t2)) return false;

    // then by closest neighbor,
    return thrust::get<1>(t1) < thrust::get<1>(t2);
  }
};

template <typename value_t, typename value_int = std::uint32_t>
struct DistFunc {
  virtual __device__ __host__ __forceinline__ value_t operator()(const value_t* a,
                                                                 const value_t* b,
                                                                 const value_int n_dims)
  {
    return -1;
  };
};

template <typename value_t, typename value_int = std::uint32_t>
struct HaversineFunc : public DistFunc<value_t, value_int> {
  __device__ __host__ __forceinline__ value_t operator()(const value_t* a,
                                                         const value_t* b,
                                                         const value_int n_dims) override
  {
    return raft::spatial::knn::detail::compute_haversine(a[0], b[0], a[1], b[1]);
  }
};

template <typename value_t, typename value_int = std::uint32_t>
struct EuclideanFunc : public DistFunc<value_t, value_int> {
```

```
.avatar {
    flex-shrink: 0;
    cursor: pointer;
}
.avatar img {
    display: block;
    width: 100%;
    border-radius: 990px;
}
.avatar--small {
    width: 39px;
    height: 39px;
}
.avatar--medium {
    width: 49px;
    height: 49px;
}
.avatar--large {
    width: 59px;
    height: 59px;
}
.avatar--large {
    width: 59px;
    height: 59px;
}
.avatar--xlarge {
    width: 129px;
    height: 129px;
    margin-bottom: 20px;
}

.avatar-border img {
    border: 5px solid #fff;
}
```

```
#import "base/RTCLogging.h"
#import "helpers/NSString+StdString.h"

@implementation RTC_OBJC_TYPE (RTCIceCandidate)

@synthesize sdpMid = _sdpMid;
@synthesize sdpMLineIndex = _sdpMLineIndex;
@synthesize sdp = _sdp;
@synthesize serverUrl = _serverUrl;

- (instancetype)initWithSdp:(NSString *)sdp
              sdpMLineIndex:(int)sdpMLineIndex
                     sdpMid:(NSString *)sdpMid {
  NSParameterAssert(sdp.length);
  if (self = [super init]) {
    _sdpMid = [sdpMid copy];
    _sdpMLineIndex = sdpMLineIndex;
    _sdp = [sdp copy];
  }
  return self;
}

- (NSString *)description {
  return [NSString stringWithFormat:@"RTC_OBJC_TYPE(RTCIceCandidate):\n%@\n%d\n%@\n%@",
                                    _sdpMid,
                                    _sdpMLineIndex,
                                    _sdp,
                                    _serverUrl];
}

#pragma mark - Private

- (instancetype)initWithNativeCandidate:
    (const webrtc::IceCandidateInterface *)candidate {
  NSParameterAssert(candidate);
  std::string sdp;
  candidate->ToString(&sdp);

  RTC_OBJC_TYPE(RTCIceCandidate) *rtcCandidate =
      [self initWithSdp:[NSString stringForStdString:sdp]
          sdpMLineIndex:candidate->sdp_mline_index()
                 sdpMid:[NSString stringForStdString:candidate->sdp_mid()]];
  rtcCandidate->_serverUrl = [NSString stringForStdString:candidate->server_url()];
  return rtcCandidate;
}

- (std::unique_ptr<webrtc::IceCandidateInterface>)nativeCandidate {
  webrtc::SdpParseError error;

  webrtc::IceCandidateInterface *candidate = webrtc::CreateIceCandidate(
      _sdpMid.stdString, _sdpMLineIndex, _sdp.stdString, &error);

  if (!candidate) {
    RTCLog(@"Failed to create ICE candidate: %s\nline: %s",
           error.description.c_str(),
           error.line.c_str());
  }

  return std::unique_ptr<webrtc::IceCandidateInterface>(candidate);
}

@end
```

```
/*----------------------------------------Snackbar-------------------------------------------*/
/* The snackbar - position it at the bottom and in the middle of the screen */
.snackbar {
    visibility: hidden; /* Hidden by default. Visible on click */
    min-width: 250px; /* Set a default minimum width */
    margin-left: -125px; /* Divide value of min-width by 2 */
    background-color: #333; /* Black background color */
    color: #fff; /* White text color */
    text-align: center; /* Centered text */
    border-radius: 5px; /* Rounded borders */
```

```
@import url("https://fonts.googleapis.com/css2?family=Spartan:wght@400;500;600;700&display=swap");

body {
	font-family: "Spartan", sans-serif;
	width: 500px;
	margin: 0;
	border: 1px solid #8c00f8;
	box-sizing: border-box;
}

.title {
	padding: 30px 0px;
	font-size: 24px;
	font-weight: 700;
	text-align: center;
	background-color: #8c00f8;
	color: #fff;
	box-shadow: 0px 0px 100px 0.1px rgba(93, 84, 164, 0.25);
}

.noOfPart {
	margin: 40px 0px;
	font-size: 20px;
	font-weight: 600;
	text-align: center;
}

.subtitle {
	margin: 40px 0px;
	padding: 0px 40px;
	font-size: 16px;
	font-weight: 500;
	text-align: center;
}

.data {
	margin: 40px 0px;
	padding: 0px 50px;
}

.data input {
	padding: 2.5%;
}

.data input[type="number"] {
	outline: none;
	width: 45%;
	font-size: 20px;
}

.data input[type="button"] {
	font-size: 20px;
	width: 45%;
	color: #fff;
	outline: none;
	background-color: #8c00f8;
	border: 2px solid #8c00f8;
	transition: all 0.1s ease;
	cursor: pointer;
}

.data input[type="button"]:hover {
	background-color: #6e00c2;
}

.hide {
	display: none;
}

.running {
	text-align: center;
	margin-bottom: 50px;
}

.cancelButton {
	margin: 40px 0px;
	display: inline;
	padding: 10px 40px;
	font-size: 20px;
	text-align: center;
	color: #fff;
	outline: none;
	background-color: #8c00f8;
	border: 1px solid #8c00f8;
	transition: all 0.1s ease;
	cursor: pointer;
}

.cancelButton:hover {
	background-color: #6e00c2;
}

.social {
	text-align: center;
	margin: 40px 0px;
}

.social a {
	text-decoration: none;
	font-size: 24px;
	padding: 0px 30px;
}
```

```
.App {
  /* text-align: center; */
}

.App-logo {
  animation: App-logo-spin infinite 20s linear;
  height: 40vmin;
  pointer-events: none;
}

.App-header {
  background-color: #282c34;
  min-height: 10vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: white;
}

.App-link {
  color: #61dafb;
}

@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

#App-body, #App-body .row, #App-body .row .col {
  width: 100%;
  height: 100%;
}

#App-body {
  /* padding: 0; */
}

#the-map-box {
  position: relative;
  height: 100%;
}
```

```
//
//  ASTextKitContext.mm
//  Texture
//
//  Copyright (c) Facebook, Inc. and its affiliates.  All rights reserved.
//  Changes after 4/13/2017 are: Copyright (c) Pinterest, Inc.  All rights reserved.
//  Licensed under Apache 2.0: http://www.apache.org/licenses/LICENSE-2.0
//

#import "ASTextKitContext.h"

#if AS_ENABLE_TEXTNODE

#import "ASLayoutManager.h"
#import <AsyncDisplayKit/ASThread.h>

#include <memory>

@implementation ASTextKitContext
{
  // All TextKit operations (even non-mutative ones) must be executed serially.
  std::shared_ptr<AS::Mutex> __instanceLock__;

  NSLayoutManager *_layoutManager;
  NSTextStorage *_textStorage;
  NSTextContainer *_textContainer;
}

- (instancetype)initWithAttributedString:(NSAttributedString *)attributedString
                           lineBreakMode:(NSLineBreakMode)lineBreakMode
                    maximumNumberOfLines:(NSUInteger)maximumNumberOfLines
                          exclusionPaths:(NSArray *)exclusionPaths
                         constrainedSize:(CGSize)constrainedSize

{
  if (self = [super init]) {
    static dispatch_once_t onceToken;
    static AS::Mutex *mutex;
    dispatch_once(&onceToken, ^{
      mutex = new AS::Mutex();
    });
    
    // Concurrently initialising TextKit components crashes (rdar://18448377) so we use a global lock.
    AS::MutexLocker l(*mutex);
    
    __instanceLock__ = std::make_shared<AS::Mutex>();
    
    // Create the TextKit component stack with our default configuration.
    
    _textStorage = [[NSTextStorage alloc] init];
    _layoutManager = [[ASLayoutManager alloc] init];
    _layoutManager.usesFontLeading = NO;
    [_textStorage addLayoutManager:_layoutManager];
    
    // Instead of calling [NSTextStorage initWithAttributedString:], setting attributedString just after calling addlayoutManager can fix CJK language layout issues.
    // See https://github.com/facebook/AsyncDisplayKit/issues/2894
    if (attributedString) {
      [_textStorage setAttributedString:attributedString];
    }
    
    _textContainer = [[NSTextContainer alloc] initWithSize:constrainedSize];
    // We want the text laid out up to the very edges of the container.
    _textContainer.lineFragmentPadding = 0;
    _textContainer.lineBreakMode = lineBreakMode;
    _textContainer.maximumNumberOfLines = maximumNumberOfLines;
    _textContainer.exclusionPaths = exclusionPaths;
    [_layoutManager addTextContainer:_textContainer];
  }
  return self;
}

- (void)performBlockWithLockedTextKitComponents:(NS_NOESCAPE void (^)(NSLayoutManager *,
                                                                      NSTextStorage *,
                                                                      NSTextContainer *))block
{
  AS::MutexLocker l(*__instanceLock__);
  if (block) {
    block(_layoutManager, _textStorage, _textContainer);
  }
}

@end

#endif
```

```
/**
 * @license
 * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
 */

.link-typed {
  background-color: navy;
}
```

```
import std.stdio;
import std.algorithm;
void main(){
	int n, a, b;
	readf!("%d %d %d")(n, a, b);
	max(0, (n - 1) * (b - a) + 1 - b + a).writeln();
}
```

```java
import java.io.*;
import java.util.*;

public class Main{
	public static void main(String[] args){
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		int a[] = new int[n];
		int i;
		for(i=0;i<n;i++){
			a[i] = sc.nextInt();
		}
		Arrays.sort(a);
		for(i=0;i<n;i++){
			System.out.print(a[n-i-1]);
			if(i==n-1){
				System.out.println();
				break;
			}
			System.out.print(" ");
		}
		
	}
}
```

```java
/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.ambari.server.serveraction.upgrades;

import java.util.HashSet;
import java.util.Map;
import java.util.Set;
import java.util.concurrent.ConcurrentMap;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import org.apache.ambari.server.AmbariException;
import org.apache.ambari.server.actionmanager.HostRoleStatus;
import org.apache.ambari.server.agent.CommandReport;
import org.apache.ambari.server.state.Cluster;
import org.apache.ambari.server.state.Config;

/**
 * In HDP-2.6, the parent queue's cannot have a ordering-policy other than {@code utilization} or
 * {@code priority-utilization}.
 *
 * This class is used when moving from HDP-2.3/HDP-2.4/HDP-2.5 to HDP2.6
 */
public class FixCapacitySchedulerOrderingPolicy extends AbstractUpgradeServerAction {
```

```java
import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
		Scanner s = new Scanner(System.in);
		int a = s.nextInt();
		int b = s.nextInt();
		int c = s.nextInt();
		System.out.println(((a < b) && (b < c)) ? "Yes" : "No");
	}
}
```

```java
void source(BytesReference source) {
        this.source = source;
    }

    void docSource(BytesReference docSource) {
        this.docSource = docSource;
    }

    void onlyCount(boolean onlyCount) {
        this.onlyCount = onlyCount;
    }

    public int getNumberOfShards() {
        return numberOfShards;
    }

    public long getStartTime() {
        return startTime;
    }

    void startTime(long startTime) {
        this.startTime = startTime;
    }

    OriginalIndices originalIndices() {
        return originalIndices;
    }

    @Override
    public void readFrom(StreamInput in) throws IOException {
        super.readFrom(in);
        documentType = in.readString();
        source = in.readBytesReference();
        docSource = in.readBytesReference();
        onlyCount = in.readBoolean();
        numberOfShards = in.readVInt();
        startTime = in.readLong(); // no vlong, this can be negative!
        
        if (in.available() > 0 && in.readBoolean()) {
            // read tokenRanges
            Object[] tokens = (Object[]) in.readGenericValue();
            this.tokenRanges = new ArrayList<Range<Token>>(tokens.length / 2);
            for (int i = 0; i < tokens.length;) {
                Range<Token> range = new Range<Token>((Token) tokens[i++], (Token) tokens[i++]);
                this.tokenRanges.add(range);
            }
        }
    }

    @Override
    public void writeTo(StreamOutput out) throws IOException {
        super.writeTo(out);
        out.writeString(documentType);
        out.writeBytesReference(source);
        out.writeBytesReference(docSource);
        out.writeBoolean(onlyCount);
        out.writeVInt(numberOfShards);
        out.writeLong(startTime);
        
        // write tokenRanges
        if (tokenRanges != null) {
            out.writeBoolean(tokenRanges != null);
            Token[] tokens = new Token[tokenRanges.size() * 2];
            int i = 0;
            for (Range<Token> range : tokenRanges) {
                tokens[i++] = range.left;
                tokens[i++] = range.right;
            }
            out.writeGenericValue(tokens);
        }
    }

}
```

```java
/*
     * @see org.springframework.ldap.support.transaction.CompensatingTransactionOperationExecutor#performOperation()
     */
    public void performOperation() {
        log.debug("Performing rebind operation - "
                + "renaming original entry and "
                + "binding new contents to entry.");
        ldapOperations.rename(originalDn, temporaryDn);
        ldapOperations.bind(originalDn, originalObject, originalAttributes);
    }

    Attributes getOriginalAttributes() {
        return originalAttributes;
    }

    Name getOriginalDn() {
        return originalDn;
    }

    Object getOriginalObject() {
        return originalObject;
    }

    Name getTemporaryDn() {
        return temporaryDn;
    }
}
```

```java
import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		Main main = new Main();
		main.run();
	}



	public void run() {
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		int a[] = new int[n];
		for(int i=0; i<n; i++) {
			a[i]=sc.nextInt();
		}
		int cnt=0;
		for(int i=0; i<n-1; i++) {
			if(a[i]==i+1) {
				int tmp = a[i+1];
				a[i+1]=a[i];
				a[i]=tmp;
				cnt++;
			}
		}
		System.out.println(cnt);
		sc.close();
	}

}
```

```java
package se.doverfelt.thegame.world;

import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.physics.box2d.BodyDef;
import se.doverfelt.thegame.server.ServerWorld;

/**
 * Created by Edvin Bergstrom on 2016-09-30.
 * Beskrivning
 */
public class Flag extends Tile{




    public Flag(float x, float y, float width, float heigth, ServerWorld world) {
        super(x, y, width, heigth, world);
    }
}
```

```java
private Long id;

	private String name;

	private Person() {
		// Empty constructor required as of Neo4j API 2.0.5
	}

	public Person(String name) {
		this.name = name;
	}

	/**
	 * Neo4j doesn't REALLY have bi-directional relationships. It just means
	 * when querying to ignore the direction of the relationship.
	 * https://dzone.com/articles/modelling-data-neo4j
	 */
	@Relationship(type = "TEAMMATE", direction = Relationship.UNDIRECTED)
	public Set<Person> teammates;

	public void worksWith(Person person) {
		if (teammates == null) {
			teammates = new HashSet<>();
		}
		teammates.add(person);
	}

	public String toString() {

		return this.name + "'s teammates => " + Optional.ofNullable(this.teammates).orElse(Collections.emptySet())
				.stream().map(person -> person.getName()).collect(Collectors.toList());
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}
}
```

```java
package test.com.wirelust.personalapi.api;

import javax.inject.Inject;
import javax.ws.rs.core.Response;

import com.wirelust.personalapi.api.providers.GeneralExceptionMapperProvider;
import com.wirelust.personalapi.api.v1.representations.ApiErrorType;
import com.wirelust.personalapi.api.v1.representations.EnumErrorCode;
import com.wirelust.personalapi.producers.ResourceBundleProducer;
import org.jglue.cdiunit.AdditionalClasses;
import org.jglue.cdiunit.CdiRunner;
import org.junit.Assert;
import org.junit.Test;
import org.junit.runner.RunWith;

/**
 * Date: 01-Jun-2016
 *
 * @author T. Curran
 */
@RunWith(CdiRunner.class)
@AdditionalClasses(ResourceBundleProducer.class)
public class GeneralExceptionMapperProviderTest {

	@Inject
	GeneralExceptionMapperProvider generalExceptionMapperProvider;

	@Test
	public void shouldBeAbleToMapException() {
		Exception exception = new Exception("test exception");
		Response response = generalExceptionMapperProvider.toResponse(exception);

		Assert.assertEquals(EnumErrorCode.GENERIC_ERROR.responseStatus().getStatusCode(), response.getStatus());

		Assert.assertTrue(response.getEntity() instanceof ApiErrorType);
		if (response.getEntity() instanceof ApiErrorType) {
			ApiErrorType apiError = (ApiErrorType)response.getEntity();
			Assert.assertEquals("Generic error",  apiError.getText());
		}
	}

}
```

```java
/*
 * Copyright 2013 Guidewire Software, Inc.
 */

package gw.plugin.ij.completion.model;

import com.google.common.collect.ComparisonChain;
import gw.lang.IModuleAware;
import gw.lang.reflect.IFeatureInfo;
import gw.lang.reflect.IType;
import gw.lang.reflect.ITypeLoader;
import gw.lang.reflect.TypeSystem;
import gw.lang.reflect.module.IModule;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

public class BeanInfoNode implements Comparable<BeanInfoNode> {
  private IType type;
  private String displayName;

  public BeanInfoNode(IType type) {
    this.type = TypeSystem.isDeleted(type) ? TypeSystem.getErrorType() : type;
  }

  public BeanInfoNode(String displayName) {
    this.displayName = displayName;
  }

  public IType getType() {
    return type;
  }

  public IModule getModule() {
    if (type instanceof IModuleAware) {
      return ((IModuleAware) type).getModule();
    } else if (type instanceof PackageType) {
      return ((PackageType) type).getNamespaceType().getModule();
    } else {
      return TypeSystem.getModuleFromType(type);
    }
  }

  public String getName() {
    return getDisplayName();
  }

  @Nullable
  public IFeatureInfo getFeatureInfo() {
    return null;
  }

  protected int getTypePriority() {
    return 0;
  }
```

```java
import java.util.Scanner;


public class Main {

    
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int Ans1, Ans2;
        double Ans3;
        String str[];
        str = new String[2];
        int num[];
        num = new int[2];
        for(int i=0; i<=1; i++)
            {
            str[i] = in.next();
            num[i] = Integer.parseInt(str[i]);
            }
        Ans1 = num[0]/num[1];
        Ans2 = num[0]%num[1];
        
        Ans3 = (double)num[0]/(double)num[1];
        System.out.println(Ans1+" "+Ans2+" "+Ans3);
    }
    
}
```

```java
/*Frank Lin
 *
 */

package edu.cmu.lti.nlp.mt.translator;

import java.util.regex.Pattern;

import edu.cmu.lti.nlp.CLang;

public class WebMTFreeTranslation extends WebTranslator{
	static final long serialVersionUID=1;
	//http://ets.freetranslation.com%3Fsequence=core&mode=html&charset=UTF-8&template=results_en-us.htm&language=English/Japanese&srctext=dog

	public WebMTFreeTranslation(){
		super(
				"http://ets"
				,"&sequence=core&mode=html&charset=UTF-8&srctext="
				,Pattern.compile(
					"Machine Translation -+?<br>\\s+(.+?)\\s+</p>"
				));	
		mms.getC(CLang.en_US).put(CLang.zh_CN,"6.freetranslation.com?language=English/SimplifiedChinese");
		mms.getC(CLang.en_US).put(CLang.zh_TW,"6.freetranslation.com?language=English/TraditionalChinese");
		mms.getC(CLang.en_US).put(CLang.ja_JP,".freetranslation.com?language=English/Japanese");
	}	
		//if(trgLang.equals(LangUtil.zh_CN)||trgLang.equals(LangUtil.zh_TW)){
		//	b.append("http://ets6.freetranslation.com?");

}
```

```java
//
//  ========================================================================
//  Copyright (c) 1995-2013 Mort Bay Consulting Pty. Ltd.
//  ------------------------------------------------------------------------
//  All rights reserved. This program and the accompanying materials
//  are made available under the terms of the Eclipse Public License v1.0
//  and Apache License v2.0 which accompanies this distribution.
//
//      The Eclipse Public License is available at
//      http://www.eclipse.org/legal/epl-v10.html
//
//      The Apache License v2.0 is available at
//      http://www.opensource.org/licenses/apache2.0.php
//
//  You may elect to redistribute this code under either of these licenses.
//  ========================================================================
//

package com.acme;

import javax.servlet.ServletContextAttributeEvent;
import javax.servlet.ServletContextAttributeListener;
import javax.servlet.ServletContextEvent;
import javax.servlet.ServletContextListener;
import javax.servlet.ServletRequestAttributeEvent;
import javax.servlet.ServletRequestAttributeListener;
import javax.servlet.ServletRequestEvent;
import javax.servlet.ServletRequestListener;
import javax.servlet.http.HttpSessionActivationListener;
import javax.servlet.http.HttpSessionAttributeListener;
import javax.servlet.http.HttpSessionBindingEvent;
import javax.servlet.http.HttpSessionEvent;
import javax.servlet.http.HttpSessionListener;

public class TagListener implements HttpSessionListener,  HttpSessionAttributeListener, HttpSessionActivationListener, ServletContextListener, ServletContextAttributeListener, ServletRequestListener, ServletRequestAttributeListener
{
    public void attributeAdded(HttpSessionBindingEvent se)
    {
         //System.err.println("tagListener: attributedAdded "+se);
    }

    public void attributeRemoved(HttpSessionBindingEvent se)
    {
         //System.err.println("tagListener: attributeRemoved "+se);
    }

    public void attributeReplaced(HttpSessionBindingEvent se)
    {
         //System.err.println("tagListener: attributeReplaced "+se);
    }

    public void sessionWillPassivate(HttpSessionEvent se)
    {
         //System.err.println("tagListener: sessionWillPassivate "+se);
    }

    public void sessionDidActivate(HttpSessionEvent se)
    {
         //System.err.println("tagListener: sessionDidActivate "+se);
    }

    public void contextInitialized(ServletContextEvent sce)
    {
         //System.err.println("tagListener: contextInitialized "+sce);
    }

    public void contextDestroyed(ServletContextEvent sce)
    {
         //System.err.println("tagListener: contextDestroyed "+sce);
    }

    public void attributeAdded(ServletContextAttributeEvent scab)
    {
         //System.err.println("tagListener: attributeAdded "+scab);
    }

    public void attributeRemoved(ServletContextAttributeEvent scab)
    {
         //System.err.println("tagListener: attributeRemoved "+scab);
    }

    public void attributeReplaced(ServletContextAttributeEvent scab)
    {
         //System.err.println("tagListener: attributeReplaced "+scab);
    }

    public void requestDestroyed(ServletRequestEvent sre)
    {
         //System.err.println("tagListener: requestDestroyed "+sre);
    }

    public void requestInitialized(ServletRequestEvent sre)
    {
         //System.err.println("tagListener: requestInitialized "+sre);
    }

    public void attributeAdded(ServletRequestAttributeEvent srae)
    {
         //System.err.println("tagListener: attributeAdded "+srae);
    }

    public void attributeRemoved(ServletRequestAttributeEvent srae)
    {
         //System.err.println("tagListener: attributeRemoved "+srae);
    }

    public void attributeReplaced(ServletRequestAttributeEvent srae)
    {
         //System.err.println("tagListener: attributeReplaced "+srae);
    }

    public void sessionCreated(HttpSessionEvent se)
    {
         //System.err.println("tagListener: sessionCreated "+se);
    }

    public void sessionDestroyed(HttpSessionEvent se)
    {
         //System.err.println("tagListener: sessionDestroyed "+se);
    }

}
```

```java
import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int[][] C = new int[3][3];
		for(int i = 0;i < 3;i++) {
			for(int j = 0;j < 3;j++) {
				C[i][j] = Integer.parseInt(sc.next());
			}
		}
		sc.close();
		int[] a = new int[3];
		int[] b = new int[3];
		a[0] = 0;
		b[0] = C[0][0];
		b[1] = C[0][1];
		b[2] = C[0][2];
		a[1] = C[1][0] - b[0];
		a[2] = C[2][0] - b[0];
		String ans = "Yes";
		for(int i = 0;i < 3;i++) {
			for(int j = 0;j < 3;j++) {
				if(a[i] + b[j] != C[i][j]) {
					ans = "No";
				}
			}
		}
		System.out.println(ans);
	}
}
```

```java
import java.util.Arrays;
import java.util.Comparator;
import java.util.Scanner;

public class Main implements Runnable {

    private static int MOD = 1_000_000_007;

    public static void main(String[] args) {
        // Run with 32MB stack
        Thread thread = new Thread(null, new Main(), "", 32 * 1024 * 1024);
        thread.start();
    }

    @Override
    public void run() {
        final Scanner scanner = new Scanner(System.in);
        solve(scanner);
    }

    static void solve(Scanner scanner) {
        int N = Integer.parseInt(scanner.next());
        long[][] XL = new long[N][2];
        for (int i = 0; i < N; i++) {
            XL[i][0] = Integer.parseInt(scanner.next());
            XL[i][1] = Integer.parseInt(scanner.next());
        }
        Arrays.sort(XL, Comparator.comparingLong(x -> x[0]));

        int cnt1 = 0;
        int prev = 0;
        for (int i = 1; i < N; i++) {
            if (XL[prev][0] + XL[prev][1] - 1 >= XL[i][0] - XL[i][1] + 1) {
                cnt1++;
                if (XL[prev][0] + XL[prev][1] > XL[i][0] + XL[i][1]) {
                    prev = i;
                }
            } else {
                prev = i;
            }
        }

        Arrays.sort(XL, Comparator.comparingLong(x -> -x[0]));
        int cnt2 = 0;
        prev = 0;
        for (int i = 1; i < N; i++) {
            if (XL[prev][0] - XL[prev][1] + 1 <= XL[i][0] + XL[i][1] - 1) {
                cnt2++;
                if (XL[prev][0] - XL[prev][1] < XL[i][0] - XL[i][1]) {
                    prev = i;
                }
            } else {
                prev = i;
            }
        }

        System.out.println(N - Math.min(cnt1, cnt2));
    }
}
```

```java
import java.util.*;
import static java.lang.System.*;
import static java.lang.Math.*;
public class Main {
    public static void main(String[] $) {
        Scanner sc = new Scanner(in);
        int n = sc.nextInt();
        int ans = Integer.MAX_VALUE;
        int s1 = n / 6, s2 = n / 9;
        int[] TS = new int[n + 10];
        int[] TN = new int[n + 10];
        for (int i = 0; i <= n; i += 6) {
            int temp = i;
            while (temp / 6 > 0) {
                temp /= 6;
                TS[i] += temp % 6;
            }
            for (int j = 0; j < 6; j++) {
                if (i + j <= n) TS[i + j] = TS[i] + j;
            }
        }
        for (int i = 0; i <= n; i += 9) {
            int temp = i;
            while (temp / 9 > 0) {
                temp /= 9;
                TN[i] += temp % 9;
            }
            for (int j = 0; j < 9; j++) {
                if (i + j <= n) TN[i + j] = TN[i] + j;
            }
        }
        for (int i = 0; i <= s2; i++) {
            int nine=9*i;
            int six=(n-nine)-(n-nine)%6;
            if(six+nine<=n)ans=min(TS[six]+TN[nine]+(n-six-nine),ans);
        }
        out.println(ans);
    }
}
```

```java
import java.util.Scanner;

class Main{


	public static void main(String[] args) {
		Scanner scanner = new Scanner(System.in);
		int N = scanner.nextInt();
		int[] A =new int[N];
		int[] B = new int[N];

		for(int i = 0;i < N;i++){
			A[i] = scanner.nextInt();
			B[i] = scanner.nextInt();
		}

		int[] ans = new int[N];
		for(int i = 0;i < N;i++){
			for(int j = A[i];j <= B[i];j++){
				if(judge(j) && judge((j+1)/2)){
					ans[i]++;
				}
			}
			System.out.println();

		}
		for(int i = 0;i < N;i++){
			System.out.println(ans[i]);
		}

	}


	static boolean judge(int d){
		if(d == 1){
			return false;
		}
		for(int i = 2;i <= d/2;i++){
			if(d % i == 0){
				return false;
			}
		}
		return true;
	}
}
class Pair implements Comparable{
	int from;
	int end;
	@Override
	public int compareTo(Object other) {
		Pair otherpair = (Pair)other;

		return end - otherpair.end;
	}
}
```

```java
package com.example.badlog;

import io.dropwizard.Configuration;
import io.dropwizard.testing.ConfigOverride;
import io.dropwizard.testing.DropwizardTestSupport;
import io.dropwizard.testing.ResourceHelpers;
import org.junit.After;
import org.junit.Before;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.TemporaryFolder;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.io.ByteArrayOutputStream;
import java.io.PrintStream;
import java.nio.file.Files;
import java.nio.file.Path;

import static java.nio.charset.StandardCharsets.UTF_8;
import static org.assertj.core.api.Assertions.assertThat;
import static org.assertj.core.api.Assertions.assertThatThrownBy;

public class BadLogTest {
    private static final Logger LOGGER = LoggerFactory.getLogger(BadLogTest.class);
    private static ByteArrayOutputStream out;
    private static ByteArrayOutputStream err;
    private static PrintStream oldOut = System.out;
    private static PrintStream oldErr = System.err;

    @Rule
    public TemporaryFolder folder = new TemporaryFolder();

    @Before
    public void setup() throws Exception {
        out = new ByteArrayOutputStream();
        err = new ByteArrayOutputStream();
        System.setOut(new PrintStream(out));
        System.setErr(new PrintStream(err));
    }

    @After
    public void teardown() {
        System.setOut(oldOut);
        System.setErr(oldErr);
    }

    @Test
    public void thatLoggingIsntBrokenOnCleanup() throws Exception {
        BadLogApp.runMe(new String[]{"server"});
        LOGGER.info("I'm after the test");
        Thread.sleep(100);

        assertThat(new String(out.toByteArray(), UTF_8))
            .contains("Mayday we're going down")
            .contains("I'm after the test");

        assertThat(new String(err.toByteArray(), UTF_8))
            .contains("I'm a bad app");
    }

    @Test
    public void testSupportShouldResetLogging() throws Exception {
        final Path logFile = folder.newFile("example.log").toPath();

        // Clear out the log file
        Files.write(logFile, new byte[]{});

        final String configPath = ResourceHelpers.resourceFilePath("badlog/config.yaml");
        final DropwizardTestSupport<Configuration> app = new DropwizardTestSupport<>(BadLogApp.class, configPath,
            ConfigOverride.config("logging.appenders[0].currentLogFilename", logFile.toString()));
```

```java
import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		long x = sc.nextLong();
		long y = sc.nextLong();
		if(x == y) {
			System.out.println(-1);
			return;
		}
		for(long i = x ; i <= 1000000000000000000L ; i += x) {
			if(i % y != 0) {
				System.out.println(i);
				return;
			}
		}
	}
}
```

```java
if (obj instanceof KinesisFirehoseConfig == false)
            return false;
        KinesisFirehoseConfig other = (KinesisFirehoseConfig) obj;
        if (other.getFirehoseArn() == null ^ this.getFirehoseArn() == null)
            return false;
        if (other.getFirehoseArn() != null && other.getFirehoseArn().equals(this.getFirehoseArn()) == false)
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int hashCode = 1;

        hashCode = prime * hashCode + ((getFirehoseArn() == null) ? 0 : getFirehoseArn().hashCode());
        return hashCode;
    }

    @Override
    public KinesisFirehoseConfig clone() {
        try {
            return (KinesisFirehoseConfig) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new IllegalStateException("Got a CloneNotSupportedException from Object.clone() " + "even though we're Cloneable!", e);
        }
    }

    @com.amazonaws.annotation.SdkInternalApi
    @Override
    public void marshall(ProtocolMarshaller protocolMarshaller) {
        com.amazonaws.services.connect.model.transform.KinesisFirehoseConfigMarshaller.getInstance().marshall(this, protocolMarshaller);
    }
}
```

```java
*/
public class DefaultConverterImpl implements TypeConverter<Object, Object> {

    /**
     * {@inheritDoc}
     */
    @Override
    public Object toDomainValue(final Object instance) {
        return instance;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Object toProtobufValue(final Object instance) {
        return instance;
    }
}
```

```java
package com.vincent.aop.project;

import org.junit.Test;

import static org.junit.Assert.*;

/**
 * Example local unit test, which will execute on the development machine (host).
 *
 * @see <a href="http://d.android.com/tools/testing">Testing documentation</a>
 */
public class ExampleUnitTest {
    @Test
    public void addition_isCorrect() {
        assertEquals(4, 2 + 2);
    }
}
```

```java
package com.novoda.twopointzerotest;

import android.app.Application;
import android.content.Context;
import android.support.multidex.MultiDex;

public class MainApplication extends Application {

    @Override
    protected void attachBaseContext(Context base) {
        super.attachBaseContext(base);
        MultiDex.install(this);
    }

}
```

```java
/*
 * NoSolutionException.java
 * ---------------------------------
 * Copyright (c) 2021
 * RESOLVE Software Research Group
 * School of Computing
 * Clemson University
 * All rights reserved.
 * ---------------------------------
 * This file is subject to the terms and conditions defined in
 * file 'LICENSE.txt', which is part of this source code package.
 */
package edu.clemson.rsrg.typeandpopulate.exception;

import edu.clemson.rsrg.statushandling.exception.CompilerException;

/**
 * <p>
 * An {@code NoSolutionException} indicates we encountered an error in our type reasoning process where we don't know
 * how to recover from.
 * </p>
 *
 * @version 2.0
 */
public class NoSolutionException extends CompilerException {

    // ===========================================================
    // Member Fields
    // ===========================================================

    /**
     * <p>
     * Serial version for Serializable objects
     * </p>
     */
    private static final long serialVersionUID = 1L;

    // ==========================================================
    // Constructors
    // ==========================================================

    /**
     * <p>
     * This constructor takes in a message and a throwable cause that resulted in this exception.
     * </p>
     *
     * @param message
     *            Message to be displayed when the exception is thrown.
     * @param cause
     *            Cause of the exception.
     */
    public NoSolutionException(String message, Throwable cause) {
        super(message, cause);
    }

}
```

```java
package chapter1;

import static java.lang.Boolean.FALSE; // Static Import: You can only import static members of a class statically. 

public class E2 {
	
	static int n0 = 15; // Global Class Variable (static): all global variables have default values.
	
	public double d0 = 8.9d; // Global Instance Variable: all global variables have default values.
	
	public static void main(String[] args) {
		
		E2 e0 = new E2();
		e0._aMethod();
		
		String s0 = "Yog-Sothoth"; // Local Variable
		int num;
		int num1 = 6;
		// int num2 = num + num1;  - num must be initialised before use.
		
		// Local variables must always be initialised before use.
		// Local variables can have same name as member variables. 
		// The local variables will simply shadow the member variables with the same names.
		
		java.util.Scanner sc0 = new java.util.Scanner(System.in);
		
		Person p0 = new Person();
		p0.name = "Sean";
		
		Person p1 = new Person();
		p1 = p0; // p1 now refers to the same address in memory as p0.
		
		System.out.println("p0: " + p0.name + " p1: " + p1.name); // p0: Sean p1: Sean
		
		Person p2 = new Person();
		p2.name = "Trapper";
		
		// p2 = p0;
		// System.out.println("p0: " + p0.name + " p1: " + p1.name); p0: Sean p1: Sean
		
		p0 = p2;
		System.out.println("p0: " + p0.name + " p1: " + p1.name); // p0: Trapper p1: Sean
		
		Person p3 = new Person();
		System.out.println(p3.name); // null
		// System.out.println(p3.name.length()); - Exception in thread "main" java.lang.NullPointerException
	}
	
	public void _aMethod() {
		int memVar; // uninitialised local variable that is not used.
	}
}

class Person {
	public String name;
	
	  /*private Person() {
		// This constructor cannot be instantiated.
		}*/
	
	static { 
		// Static init block: used to create static variables. 
		// The static block only gets called once, no matter how many objects of that type you create.
	} 
}
```

```java
package io.github.berkayelken.bananazura.common.exception;

/**
 * @author 		: Berkay Yelken (https://github.com/berkayelken)
 * Since 	:  1.0.0
 * Project		: Bananazura Common (https://github.com/berkayelken/spring_helper/tree/master/common)
 */
public class RestControllerException extends BananazuraThrowable {
	private static final long serialVersionUID = 5188329388554329950L;

	RestControllerException(BananazuraExceptionBuilder<? extends BananazuraThrowable> builder) {
		super(builder);
	}
}
```

```java
* You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.liferay.faces.bridge.component.inputfile.internal;
//J-

import javax.annotation.Generated;

import com.liferay.faces.util.render.DelegatingRendererBase;

import com.liferay.faces.bridge.component.inputfile.InputFile;


/**
 * @author	Neil Griffin
 */
@Generated(value = "com.liferay.alloy.tools.builder.FacesBuilder")
public abstract class InputFileRendererBase extends DelegatingRendererBase {

	// Protected Constants
	protected static final String AUTO = "auto";
	protected static final String FILE_UPLOAD_LISTENER = "fileUploadListener";
	protected static final String MULTIPLE = "multiple";

	@Override
	public String getDelegateComponentFamily() {
		return InputFile.COMPONENT_FAMILY;
	}

	@Override
	public String getDelegateRendererType() {
		return "javax.faces.File";
	}
}
//J+
```

```java
import java.io.*;
import java.util.*;

class Main {

	public static void main(String[] args) throws Exception {
		final Scanner sc = new Scanner(System.in);
		char[] s = sc.next().toCharArray();
		char[] t = sc.next().toCharArray();
		int index = -1;
		for (int i = s.length - t.length; i >= 0; i--) {
			boolean find = true;
			for (int j = 0; j < t.length; j++) {
				if (s[i + j] == '?') continue;
				if (t[j] != s[i + j]) {
					find = false;
					break;
				}
			}
			if (find) {
				index = i;
				break;
			}
		}

		if (index == -1) {
			System.out.println("UNRESTORABLE");
			return;
		}
		for (int i = 0; i < s.length; i++) {
			if (i < index) {
				if (s[i] == '?') s[i] = 'a';
			} else if (i < index + t.length) {
				s[i] = t[i - index];
			} else {
				if (s[i] == '?') s[i] = 'a';
			}
		}

		System.out.println(s);
	}
}
```

```java
@org.kie.api.definition.type.Label("Total")
    private Double total;

    public InvoiceLine() {
    }

    public InvoiceLine(String product,
                       Integer quantity,
                       Double price,
                       Double total) {
        this.product = product;
        this.quantity = quantity;
        this.price = price;
        this.total = total;
    }

    public Integer getQuantity() {
        return this.quantity;
    }

    public void setQuantity(Integer quantity) {
        this.quantity = quantity;
    }

    public Double getPrice() {
        return this.price;
    }

    public void setPrice(Double price) {
        this.price = price;
    }

    public Double getTotal() {
        return this.total;
    }

    public void setTotal(Double total) {
        this.total = total;
    }

    public String getProduct() {
        return this.product;
    }

    public void setProduct(String product) {
        this.product = product;
    }
}
```

```java
package example.service;

import example.repo.Customer1822Repository;

import org.springframework.stereotype.Service;

@Service
public class Customer1822Service {
	public Customer1822Service(Customer1822Repository repo) {}
}
```

```java
package com.jjlf.rnpainter.shadownodes;

import android.util.Log;

import com.facebook.react.bridge.Dynamic;
import com.facebook.react.bridge.ReadableMap;
import com.facebook.react.uimanager.LayoutShadowNode;
import com.facebook.react.uimanager.annotations.ReactProp;
import com.facebook.react.uimanager.annotations.ReactPropGroup;
import com.jjlf.rnpainter.utils.ModUtil;
import com.jjlf.rnpainter.views.GViewHardware;

import static com.facebook.react.uimanager.ViewProps.ALIGN_CONTENT;
import static com.facebook.react.uimanager.ViewProps.ALIGN_ITEMS;
import static com.facebook.react.uimanager.ViewProps.ALIGN_SELF;
import static com.facebook.react.uimanager.ViewProps.BORDER_BOTTOM_WIDTH;
import static com.facebook.react.uimanager.ViewProps.BORDER_END_WIDTH;
import static com.facebook.react.uimanager.ViewProps.BORDER_LEFT_WIDTH;
import static com.facebook.react.uimanager.ViewProps.BORDER_RIGHT_WIDTH;
import static com.facebook.react.uimanager.ViewProps.BORDER_START_WIDTH;
import static com.facebook.react.uimanager.ViewProps.BORDER_TOP_WIDTH;
import static com.facebook.react.uimanager.ViewProps.BORDER_WIDTH;
import static com.facebook.react.uimanager.ViewProps.BOTTOM;
import static com.facebook.react.uimanager.ViewProps.COLLAPSABLE;
import static com.facebook.react.uimanager.ViewProps.DISPLAY;
import static com.facebook.react.uimanager.ViewProps.END;
import static com.facebook.react.uimanager.ViewProps.FLEX;
import static com.facebook.react.uimanager.ViewProps.FLEX_BASIS;
import static com.facebook.react.uimanager.ViewProps.FLEX_DIRECTION;
import static com.facebook.react.uimanager.ViewProps.FLEX_GROW;
import static com.facebook.react.uimanager.ViewProps.FLEX_SHRINK;
import static com.facebook.react.uimanager.ViewProps.FLEX_WRAP;
import static com.facebook.react.uimanager.ViewProps.HEIGHT;
import static com.facebook.react.uimanager.ViewProps.JUSTIFY_CONTENT;
import static com.facebook.react.uimanager.ViewProps.LEFT;
import static com.facebook.react.uimanager.ViewProps.MARGIN;
import static com.facebook.react.uimanager.ViewProps.MARGIN_BOTTOM;
import static com.facebook.react.uimanager.ViewProps.MARGIN_END;
import static com.facebook.react.uimanager.ViewProps.MARGIN_HORIZONTAL;
import static com.facebook.react.uimanager.ViewProps.MARGIN_LEFT;
import static com.facebook.react.uimanager.ViewProps.MARGIN_RIGHT;
import static com.facebook.react.uimanager.ViewProps.MARGIN_START;
import static com.facebook.react.uimanager.ViewProps.MARGIN_TOP;
import static com.facebook.react.uimanager.ViewProps.MARGIN_VERTICAL;
import static com.facebook.react.uimanager.ViewProps.MAX_HEIGHT;
import static com.facebook.react.uimanager.ViewProps.MAX_WIDTH;
import static com.facebook.react.uimanager.ViewProps.MIN_HEIGHT;
import static com.facebook.react.uimanager.ViewProps.MIN_WIDTH;
import static com.facebook.react.uimanager.ViewProps.OVERFLOW;
import static com.facebook.react.uimanager.ViewProps.PADDING;
import static com.facebook.react.uimanager.ViewProps.PADDING_BOTTOM;
import static com.facebook.react.uimanager.ViewProps.PADDING_END;
import static com.facebook.react.uimanager.ViewProps.PADDING_HORIZONTAL;
import static com.facebook.react.uimanager.ViewProps.PADDING_LEFT;
import static com.facebook.react.uimanager.ViewProps.PADDING_RIGHT;
import static com.facebook.react.uimanager.ViewProps.PADDING_START;
import static com.facebook.react.uimanager.ViewProps.PADDING_TOP;
```

```java
import java.util.Scanner;

/**
 * @author yoshizaki
 *
 */
public class Main {
    public static void main(String[] args) {
        Scanner scanner= new Scanner(System.in);
        StringBuilder before = new StringBuilder();
        StringBuilder after = new StringBuilder();
        String start = scanner.nextLine();
        int query = scanner.nextInt();
        scanner.nextLine();
        String[] querys = new String[query]; 
        boolean reverse = false;
        for(int i = 0; i < query; i++) {
            querys[i] = scanner.nextLine();
        }
        for(String s : querys) {
            if(s.equals("1")) {
                reverse = !reverse;
            } else {
                String[] q = s.split(" ");
                if(!reverse) {
                    if(q[1].equals("1")) before.append(q[2]);
                    if(q[1].equals("2")) after.append(q[2]);
                } else {
                    if(q[1].equals("1")) after.append(q[2]);
                    if(q[1].equals("2")) before.append(q[2]);
                }
            }
        }
        before.reverse();
        before.append(start);
        before.append(after.toString());
        if(reverse) before.reverse();
        System.out.println(before.toString());
    }
}
```

```java
} catch (Exception e) {
      LOGGER.error("Sync worker failed.", e);

      return new OutputAndStatus<>(JobStatus.FAILED, null);
    }

    try (normalizationRunner) {
      LOGGER.info("Running normalization.");
      normalizationRunner.start();
      final Path normalizationRoot = Files.createDirectories(jobRoot.resolve("normalize"));
      if (!normalizationRunner.normalize(normalizationRoot, syncInput.getDestinationConfiguration(), syncInput.getCatalog())) {
        throw new WorkerException("Normalization Failed.");
      }
    } catch (Exception e) {
      LOGGER.error("Normalization Failed.", e);
      return new OutputAndStatus<>(JobStatus.FAILED, null);
    }

    final StandardSyncSummary summary = new StandardSyncSummary()
        .withStatus(cancelled.get() ? Status.FAILED : Status.COMPLETED)
        .withRecordsSynced(messageTracker.getRecordCount())
        .withBytesSynced(messageTracker.getBytesCount())
        .withStartTime(startTime)
        .withEndTime(System.currentTimeMillis());

    LOGGER.info("sync summary: {}", summary);

    final StandardSyncOutput output = new StandardSyncOutput().withStandardSyncSummary(summary);
    messageTracker.getOutputState().ifPresent(capturedState -> {
      final State state = new State()
          .withState(capturedState);
      output.withState(state);
    });

    return new OutputAndStatus<>(cancelled.get() ? JobStatus.FAILED : JobStatus.SUCCEEDED, output);
  }

  @Override
  public void cancel() {
    cancelled.set(true);
  }

}
```

```java
Vector2 position = physicsC.body.getPosition();
        final float angle = physicsC.body.getAngle();
        final float xf = Vector2Utils.getXf(position.x, radius, angle);// radius * MathUtils.cos(angle) + position.x;
        final float yf = Vector2Utils.getYf(position.y, radius, angle);//radius * MathUtils.sin(angle) + position.y;
        if(previousXF != xf || previousYF != yf) {
            gameEntitiesFound.addAll(physicsCtrl.raycastEntities(typesToDetect, position.x, position.y, xf, yf));
            previousXF = xf;
            previousYF = yf;
        }
        return this;
    }

    @Override
    public BaseSensor processDetection() {
        if(gameEntitiesFound.size > 0){
            LockOnComponent lockOnC = owner.addComponent(LockOnComponent.class);
            lockOnC.origin = owner;
            lockOnC.target =  gameEntitiesFound.get(0);
            lockOnC.lockOnTime.limit = this.lockOnInterval;
            gameEntitiesFound.clear();
        }
        return this;
    }

    @Override
    public BaseSensor setController(PhysicsController physicsController) {
        this.physicsCtrl = physicsController;
        return this;
    }

    @Override
    public BaseSensor setOwner(GameEntity owner) {
        this.owner = owner;
        return this;
    }

    @Override
    public BaseSensor debug(ShapeRenderer renderer) {
        PhysicsComponent physicsC = Mappers.physics.get(owner.entity);
        Vector2 position = physicsC.body.getPosition();
        renderer.line(position.x, position.y, previousXF, previousYF, Color.WHITE, Color.WHITE);
        return this;
    }


    @Override
    public void reset() {
        radius = 1f;
        previousXF = previousYF = 0;
        gameEntitiesFound.clear();
```

```java
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;

public class Main {

	public static void main(String[] args) throws NumberFormatException, IOException {
		// TODO ?????????????????????????????????????????????
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int n = Integer.parseInt(br.readLine());

        int[][] matrix = new int[n][n];
        for(int i = 0; i < n; i++){
        	Arrays.fill(matrix[i], Integer.MAX_VALUE);
        }
        //Vertex[] v = new Vertex[n];
        for(int i = 0; i < n; i++){
        	String tmpStr = br.readLine();
        	
        	String[] tmp = tmpStr.split(" ");
        	for(int j = 0;j < Integer.parseInt(tmp[1]); j++){
        		matrix[i][Integer.parseInt(tmp[ 2*(j + 1)])] = Integer.parseInt(tmp[2*(j + 1) + 1]);
        	}

        }
        /*
        for(int i = 0; i < n; i++){
        	for(int j = 0; j < n; j++){
        		System.out.print(matrix[i][j]+ " ");
        	}
        	System.out.println();
        }
        */
        int[] dist = singleSourceShortestDense(matrix, 0);
        
        for(int i = 0; i < n ; i++){
        	System.out.println(i + " " + dist[i]);
        }
	}

	static int[] singleSourceShortestDense(int[][] matrix, int s){
		int n = matrix[0].length;
		int[] dist = new int[n];
		Arrays.fill(dist, Integer.MAX_VALUE);
		boolean[] visited = new boolean[n];
		Arrays.fill(visited, false);

		dist[s] = 0;
		
		while(true){
		
			int u = -1;
			int sd = Integer.MAX_VALUE;
			
			for(int i = 0; i < n ; i++){
				if(!visited[i] && dist[i] < sd){
					sd = dist[i];
					u = i;
				}
			}
			
			if(u == -1){
				break;
			}
			
			visited[u] = true;
			for(int v = 0; v < n ; v++){
				int w = matrix[u][v];
				if(v == u) continue;
				
				long newLen = dist[u];
				newLen += w;
				if(newLen < dist[v]){
					dist[v] = (int)newLen;
				}
			}

		}
		
		return dist;
	}

}
```

```java
import java.util.Scanner;
public class Principal {
    
    public static void main(String args[]) {
        
        System.out.println("\f");
        
        Scanner scanner = new Scanner(System.in);
        
        Morango morango = new Morango();
        System.out.println("Digite a cor do morango");
        morango.setCor(scanner.next());
        morango.comer();
        morango.retirarCasca();
        System.out.println(morango);
        
        Abacate abacate = new Abacate();
        System.out.println("Digite a cor do abacate");
        abacate.setCor(scanner.next());
        abacate.comer();
        abacate.retirarCasca();
        System.out.println(abacate);
        
        Abacaxi abacaxi = new Abacaxi();
        System.out.println("Digite a cor do abacaxi");
        abacaxi.setCor(scanner.next());
        abacaxi.comer();
        abacaxi.retirarCasca();
        System.out.println(abacaxi);
    }
}
```

```java
package com.liujie.gmaill.sms.service.impl;

import org.springframework.stereotype.Service;
import java.util.Map;
import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
import com.liujie.gmaill.bean.PageVo;
import com.liujie.gmaill.bean.Query;
import com.liujie.gmaill.bean.QueryCondition;

import com.liujie.gmaill.sms.dao.MemberPriceDao;
import com.liujie.gmaill.sms.entity.MemberPriceEntity;
import com.liujie.gmaill.sms.service.MemberPriceService;


@Service("memberPriceService")
public class MemberPriceServiceImpl extends ServiceImpl<MemberPriceDao, MemberPriceEntity> implements MemberPriceService {

    @Override
    public PageVo queryPage(QueryCondition params) {
        IPage<MemberPriceEntity> page = this.page(
                new Query<MemberPriceEntity>().getPage(params),
                new QueryWrapper<MemberPriceEntity>()
        );

        return new PageVo(page);
    }

}
```

```java
import java.util.Scanner;
 
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int num = sc.nextInt();
      	boolean b = true;
 
      for(int i = 0; i < num; i++){
        int a = sc.nextInt();
        if(a % 2 == 0){
          if(a % 3 != 0 && a % 5 != 0){
            b = false;
          }
        }
      }
      if(b == false){
        System.out.println("DENIED");
      }else{
        System.out.println("APPROVED");
      }
    }
}
```

```java
package com.hp.jipp.encoding;

import com.hp.jipp.model.Operation;
import com.hp.jipp.model.Types;
import com.hp.jipp.model.WhichJobs;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.net.URI;
import java.util.ArrayList;
import java.util.List;
import org.junit.Test;

import static com.hp.jipp.encoding.AttributeGroup.groupOf;
import static com.hp.jipp.encoding.Cycler.cycle;
import static org.junit.Assert.assertEquals;

public class SamplePacketTest {
    @Test
    public void validatePacket() throws Exception {
        URI uri = URI.create("ipp://127.0.0.1/ipp/printer");

        List<String> keywords = new ArrayList<>();
        keywords.add(Types.jobName.getName());
        keywords.add(Types.jobId.getName());
        keywords.add(Types.jobState.getName());
        keywords.add(Types.jobOriginatingUserName.getName());
        keywords.add(Types.jobUri.getName());
        keywords.add(Types.copies.getName());
        keywords.add(Types.jobMediaSheets.getName());
        keywords.add(Types.jobMediaSheetsCompleted.getName());

        String user = "me";

        IppPacket packet = new IppPacket(Operation.getJobs, 123,
                groupOf(Tag.operationAttributes,
                        Types.attributesCharset.of("utf-8"),
                        Types.attributesNaturalLanguage.of("en"),
                        Types.printerUri.of(uri),
                        Types.requestingUserName.of(user),
                        Types.requestedAttributes.of(keywords),
                        Types.whichJobs.of(WhichJobs.fetchable),
                        Types.myJobs.of(true)),
                groupOf(Tag.unsupportedAttributes,
                        Attributes.unknown(Types.systemFirmwareName.getName())));

        IppPacket inPacket = cycle(packet);
        String expected =
                "IppPacket(v=0x200, c=Get-Jobs(10), r=0x7b) {\n" +
                "  operation-attributes {\n" +
                "    attributes-charset = \"utf-8\" (charset),\n" +
                "    attributes-natural-language = \"en\" (naturalLanguage),\n" +
                "    printer-uri = ipp://127.0.0.1/ipp/printer,\n" +
                "    requesting-user-name = \"me\" (name),\n" +
                "    requested-attributes = [ job-name, job-id, job-state, job-originating-user-name,\n" +
                "      job-uri, copies, job-media-sheets, job-media-sheets-completed ],\n" +
                "    which-jobs = fetchable,\n" +
                "    my-jobs = true },\n" +
                "  unsupported-attributes { system-firmware-name (unknown) } }";
        assertEquals(expected, inPacket.prettyPrint(90, "  "));
    }
}
```

```java
//

package com.mway.bluerange.android.sdk.common;

/**
 *
 */
public class Constants {
    public static String TAG = "com.mway.bluerange";
    public static final int MWAY_COMPANY_IDENTIFIER = 0x4d02;
    public enum Mode {
        DEVELOPMENT_MODE,
        PRODUCTION_MODE
    }
    public static Mode mode = Mode.PRODUCTION_MODE;
}
```

```java
/*
 * Copyright 2018 Thomas Heslin <tjheslin1@gmail.com>.
 *
 * This file is part of Patterdale-jvm.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package io.github.tjheslin1.patterdale.config;

import io.github.tjheslin1.patterdale.ValueType;
import io.github.tjheslin1.patterdale.metrics.probe.DatabaseDefinition;
import io.github.tjheslin1.patterdale.metrics.probe.Probe;

import java.util.List;
import java.util.Map;

import static java.lang.String.format;
import static java.util.Arrays.asList;

/**
 * The runtime configuration of the app. Configured by the 'patterdale.yml' file passed in on app start up.
 * This is a flatted representation of {@link PatterdaleConfig}.
 */
public class PatterdaleRuntimeParameters extends ValueType implements RuntimeParameters {

    private final int httpPort;
    private final long cacheDuration;
    private final int probeConnectionWaitInSeconds;
    private final List<DatabaseDefinition> databases;
    private final List<Probe> probes;
    private final int connectionPoolMaxSize;
    private final int connectionPoolMinIdle;
    private final int maxConnectionRetries;
    private final long connectionRetryDelayInSeconds;

    public PatterdaleRuntimeParameters(int httpPort, long cacheDuration, int probeConnectionWaitInSeconds, List<DatabaseDefinition> databases, int connectionPoolMaxSize, int connectionPoolMinIdle, List<Probe> probes, int maxConnectionRetries, long connectionRetryDelayInSeconds) {
        this.httpPort = httpPort;
        this.cacheDuration = cacheDuration;
        this.probeConnectionWaitInSeconds = probeConnectionWaitInSeconds;
        this.databases = databases;
        this.connectionPoolMaxSize = connectionPoolMaxSize;
        this.connectionPoolMinIdle = connectionPoolMinIdle;
        this.probes = probes;
        this.maxConnectionRetries = maxConnectionRetries;
        this.connectionRetryDelayInSeconds = connectionRetryDelayInSeconds;
    }

    public static PatterdaleRuntimeParameters patterdaleRuntimeParameters(PatterdaleConfig config) {
        if(config.httpPort <= 0)
```

```java
package io.algobox.api;

import com.mongodb.MongoClient;
import com.mongodb.MongoClientURI;
import com.mongodb.client.MongoDatabase;
import org.junit.Before;

public abstract class AbstractMongoIT<T> {
  protected T dao;

  @Before
  public void init() {
    MongoClient mongoClient = new MongoClient(new MongoClientURI(
        IntegrationTestConstants.DEFAULT_MONGO_CONNECTION_URL));
    MongoDatabase mongoDatabase = mongoClient.getDatabase(
        IntegrationTestConstants.DEFAULT_MONGO_DATABASE);
    mongoDatabase.drop();
    this.dao = createDao(mongoDatabase);
  }

  protected abstract T createDao(MongoDatabase mongoDatabase);
}
```

```java
import java.util.*;

class Main {
    public static void main(String[] args) {
        new Solver().run();
    }
}

class Solver {

    private int getNextOrderTime(int time) {
        return time + ((10 - time % 10) % 10);
    }

    public int calc(List<Integer> A, List<Integer> C, int min) {
        if (C.size() == 5) {
            min = Math.min(min, simulate(C));
            return min;
        }

        for (int i = 0; i < A.size(); i++) {
            List<Integer> a = new LinkedList<>(A);
            List<Integer> l = new LinkedList<>(C);
            int v = a.get(i);
            a.remove(i);
            l.add(v);
            min = Math.min(min, calc(a, l, min));
        }
        return min;
    }

    public int simulate(List<Integer> A) {
        int sum = 0;
        for (int i = 0; i < 5; i++) {
            int time = A.get(i);
            if (i == 4) {
                sum += time;
            } else {
                sum += getNextOrderTime(time);
            }
        }
        return sum;
    }

    public void run() {
        Scanner sc = new Scanner(System.in);
        List<Integer> A = new LinkedList<Integer>();
        A.add(sc.nextInt());
        A.add(sc.nextInt());
        A.add(sc.nextInt());
        A.add(sc.nextInt());
        A.add(sc.nextInt());

        int min = calc(A, new LinkedList<Integer>(), Integer.MAX_VALUE);
        System.out.println(min);

        return;
    }

}
```

```python
# Licensed under a 3-clause BSD style license - see LICENSE.rst
"""
sbpy Thermal Module

created on June 27, 2017
"""

__all__ = ['ThermalClass', 'STM', 'FRM', 'NEATM']


class ThermalClass():

    def flux(phys, eph, lam):
        """Model flux density for a given wavelength `lam`, or a list/array thereof

        Parameters
        ----------
        phys : `sbpy.data.Phys` instance, mandatory
            provide physical properties
        eph : `sbpy.data.Ephem` instance, mandatory
            provide object ephemerides
        lam : `astropy.units` quantity or list-like, mandatory
            wavelength or list thereof

        Examples
        --------
        >>> from astropy.time import Time
        >>> from astropy import units as u
        >>> from sbpy.thermal import STM
        >>> from sbpy.data import Ephem, Phys
        >>> epoch = Time('2019-03-12 12:30:00', scale='utc')
        >>> eph = Ephem.from_horizons('2015 HW', location='568', epochs=epoch) # doctest: +REMOTE_DATA
        >>> phys = PhysProp('diam'=0.3*u.km, 'pv'=0.3) # doctest: +SKIP
        >>> lam = np.arange(1, 20, 5)*u.micron # doctest: +SKIP
        >>> flux = STM.flux(phys, eph, lam) # doctest: +SKIP

        not yet implemented

        """

    def fit(self, eph):
        """Fit thermal model to observations stored in `sbpy.data.Ephem` instance

        Parameters
        ----------
        eph : `sbpy.data.Ephem` instance, mandatory
            provide object ephemerides and flux measurements

        Examples
        --------
        >>> from sbpy.thermal import STM
        >>> stmfit = STM.fit(eph) # doctest: +SKIP

        not yet implemented

        """


class STM(ThermalClass):
    pass


class FRM(ThermalClass):
    pass


class NEATM(ThermalClass):
    def __init__(self):
        from .. import bib
        bib.register('sbpy.thermal.NEATM', {'method': '1998Icar..131..291H'})
```

```python
for a, b in segment_dict[cg]:
            segment_length = (b - a + 1)
            segment_prob = segment_length/float(len(gt))
            _, _, segment = segment_dict[cg][(a, b)]
            H_C_given_SG = entropy(segment)
            H_SC_given_SG = entropy(relabel_clustering(segment))

            # print segment_prob, H_C_given_SG, H_SC_given_SG, (H_C_given_SG + H_SC_given_SG)
            unnormalized_score += segment_prob * (H_C_given_SG + H_SC_given_SG)

    metric = unnormalized_score/(H_C + H_SC) if H_C != 0 and H_SC != 0 else 0.
    # print unnormalized_score,metric

    return max(1 - metric, 0.)

def temporal_structure_score(gt, pred, beta=1.0, aligned=False, substring=False):
    c = segment_structure_score(gt, pred)
    p = repeated_structure_score(gt, pred, aligned=aligned, substring=substring)
    return ((1 + beta) * c * p)/(beta * p + c)





def compute_HSC_given_SG(gt, pred):
    segment_dict = get_segment_dict(gt, pred)

    unnormalized_score = 0.
    for cg in segment_dict:
        for a, b in segment_dict[cg]:
            segment_length = (b - a + 1)
            segment_prob = segment_length / float(len(gt))
            _, _, segment = segment_dict[cg][(a, b)]
            H_SC_given_SG = entropy(relabel_clustering(segment))

            unnormalized_score += segment_prob * H_SC_given_SG

    return unnormalized_score

def compute_HC_given_SG(gt, pred):
    segment_dict = get_segment_dict(gt, pred)

    unnormalized_score = 0.
    for cg in segment_dict:
        for a, b in segment_dict[cg]:
            segment_length = (b - a + 1)
            segment_prob = segment_length / float(len(gt))
            _, _, segment = segment_dict[cg][(a, b)]
            H_C_given_SG = entropy(segment)

            unnormalized_score += segment_prob * H_C_given_SG

    return unnormalized_score




def label_agnostic_segmentation_score(gt, pred):
    H_SC = entropy(relabel_clustering(pred))
    H_SG = entropy(relabel_clustering(gt))
    H_SC_given_SG = compute_HSC_given_SG(gt, pred)
    H_SG_given_SC = compute_HSC_given_SG(pred, gt)

    metric = (H_SC_given_SG + H_SG_given_SC) / (H_SG + H_SC) if (H_SC + H_SG) != 0 else 0.

    return max(1 - metric, 0.)

def segment_homogeneity_score(gt, pred):
```

```python
s = input()
t = input()
print("Yes" if s==t[:-1] else "No")
```

```python
from __future__ import print_function
from collections import OrderedDict
import hashlib
import os.path

import wget

import onnx
from onnx import helper
from onnx import TensorProto
import numpy as np


class DarkNetParser(object):
    """Definition of a parser for DarkNet-based YOLOv3-608 (only tested for this topology)."""

    def __init__(self, supported_layers):
        """Initializes a DarkNetParser object.

        Keyword argument:
        supported_layers -- a string list of supported layers in DarkNet naming convention,
        parameters are only added to the class dictionary if a parsed layer is included.
        """

        # A list of YOLOv3 layers containing dictionaries with all layer
        # parameters:
        self.layer_configs = OrderedDict()
        self.supported_layers = supported_layers
        self.layer_counter = 0

    def parse_cfg_file(self, cfg_file_path):
        """Takes the yolov3.cfg file and parses it layer by layer,
        appending each layer's parameters as a dictionary to layer_configs.

        Keyword argument:
        cfg_file_path -- path to the yolov3.cfg file as string
        """
        with open(cfg_file_path) as cfg_file:
            remainder = cfg_file.read()
            while remainder is not None:
                layer_dict, layer_name, remainder = self._next_layer(remainder)
                if layer_dict is not None:
                    self.layer_configs[layer_name] = layer_dict
        return self.layer_configs

    def _next_layer(self, remainder):
        """Takes in a string and segments it by looking for DarkNet delimiters.
        Returns the layer parameters and the remaining string after the last delimiter.
        Example for the first Conv layer in yolo.cfg ...

        [convolutional]
        batch_normalize=1
        filters=32
        size=3
        stride=1
        pad=1
        activation=leaky

        ... becomes the following layer_dict return value:
        {'activation': 'leaky', 'stride': 1, 'pad': 1, 'filters': 32,
        'batch_normalize': 1, 'type': 'convolutional', 'size': 3}.

        '001_convolutional' is returned as layer_name, and all lines that follow in yolo.cfg
        are returned as the next remainder.

        Keyword argument:
        remainder -- a string with all raw text after the previously parsed layer
        """
        remainder = remainder.split('[', 1)
        if len(remainder) == 2:
            remainder = remainder[1]
        else:
            return None, None, None
        remainder = remainder.split(']', 1)
        if len(remainder) == 2:
            layer_type, remainder = remainder
        else:
            return None, None, None
        if remainder.replace(' ', '')[0] == '#':
            remainder = remainder.split('\n', 1)[1]

        layer_param_block, remainder = remainder.split('\n\n', 1)
        layer_param_lines = layer_param_block.split('\n')[1:]
```

```python
import sys
from collections import Counter
import numpy as np

n, *s = sys.stdin.read().split()
n = int(n)

def comb_2(n):
    return n * (n - 1) // 2

def main():
    t = [''.join(sorted(t)) for t in s]
    v = np.array(list(Counter(t).values()), dtype=np.int32)
    return np.sum(comb_2(v))

if __name__ == '__main__':
    ans = main()
    print(ans)
```

```python
from setuptools import setup

setup(
    name="pytest-structlog",
    version="0.1",
    url="https://github.com/wimglenn/pytest-structlog",
    description="Structured logging assertions",
    long_description=open("README.rst").read(),
```

```python
import torch
from pandas import read_csv, DataFrame as df
from sklearn.metrics import r2_score
from numpy import mean, std
from statistics import variance as var
from math import sqrt
from matplotlib import pyplot as plt
from time import time
from ipynb.fs.full.database import load_dataset, data_processing

torch.set_printoptions(edgeitems=4, profile="full")

# Data Loading, Transform, and Labeling
dataset, yield_stats = load_dataset()
train_data, test_data, len_snp, max_loc, max_var = data_processing(dataset, .15)

# Model Definition
class AttentionMechanism(torch.nn.Module):
    def __init__(self, embedding_dim, attn_hidden, *args, **kwargs):
        super(AttentionMechanism, self).__init__()
        self.embedding_dim = embedding_dim
        self.attn_hidden = attn_hidden
        self.ReLU = torch.nn.ReLU()
        
        self.attn_fc1 = torch.nn.Linear(self.embedding_dim, self.attn_hidden)
        self.attn_fc2 = torch.nn.Linear(self.attn_hidden, 1)
        self.softmax = torch.nn.Softmax(dim=1)
        self.init_weights()
        
    def init_weights(self, *args, **kwargs):
        torch.nn.init.xavier_normal_(self.attn_fc1.weight, gain=torch.nn.init.calculate_gain("relu"))
        torch.nn.init.xavier_normal_(self.attn_fc2.weight, gain=torch.nn.init.calculate_gain("relu"))
#         torch.nn.init.normal_(self.attn_fc1.weight)
#         torch.nn.init.normal_(self.attn_fc2.weight)
```

```python
import os
import torch
from torch import nn

__all__ = [
    'AverageMeter', 'freeze_model', 'cuda_to_cpu', 'load_module_state_dict',
    'check_mkdir', 'check_makedirs'
]


class AverageMeter(object):
    """Computes and stores the average and current value"""

    def __init__(self):
        self.reset()

    def reset(self):
        self.val = 0
        self.avg = 0
        self.sum = 0
        self.count = 0

    def update(self, val, n=1):
        self.val = val
        self.sum += val * n
        self.count += n
        self.avg = self.sum / self.count


def freeze_model(model):
    for m in model.modules():
        m.eval()
        for p in m.parameters():
            p.requires_grad = False


def cuda_to_cpu(filename):
    checkpoint = torch.load(filename + '.pth')
    state_dict = checkpoint['state_dict'].copy()
```

```python
k=int(input())
s=input()
if(len(s)<=k):
    print(s)
else:
    for i in range(k+3):
        if k > i:
            print(s[i],end="")
        else:
            print('.',end="")
```

```python
result.stfName("space/space_item","engine_novaldex_singularity_n")		
	
	#### BEGIN MODIFICATIONS ####
	####  END MODIFICATIONS  ####
	
	return result
```

```python
import collections
n = int(input())
si = []
for i in range(n):
    si.append(input())

ss = collections.Counter(si)
n_ma = max(ss.values())
ans = []
for i in ss.keys():
    if ss[i] == n_ma:
        ans.append(i)
ans.sort()
for i in range(len(ans)):
    print(ans[i])
```

```python
def BS(A, N):
    A = list(map(int, A.split()))
    flag = 1
    count = 0 
    while flag:
        flag = 0
        for j in range(N-1, 0, -1):
            if A[j] < A[j-1]:
                unk = A[j]
                A[j] = A[j-1]
                A[j-1] = unk
                flag = 1
                count = count +1
    print(" ".join(map(str,A)))
    print(count)
 
N = int(input())
A = input()
BS(A, N)
```

```python
N = int(input())
a = [int(i) for i in input().split()]

result = 0
for ai in a:
    result += ai - 1

print(result)
```

```python
from rllab.misc.instrument import VariantGenerator
from rllab import config
from rllab_maml.baselines.linear_feature_baseline import LinearFeatureBaseline
from sandbox.ours.envs.normalized_env import normalize
from sandbox.ours.envs.base import TfEnv
from rllab.misc.instrument import stub, run_experiment_lite
from sandbox.ours.policies.maml_improved_gauss_mlp_policy import MAMLImprovedGaussianMLPPolicy
from sandbox.ours.dynamics.dynamics_ensemble import MLPDynamicsEnsemble
from sandbox.ours.algos.ModelMAML.model_maml_trpo import ModelMAMLTRPO
from experiments.helpers.ec2_helpers import cheapest_subnets
from experiments.helpers.run_multi_gpu import run_multi_gpu
```

```python
#!/usr/bin/env python3

"""Script is for renaming files to have more zeros in the index number
padding. This was mainly used to transition the analysis files when
the numbering scheme changed.

"""

from pathlib import Path
import os
import sys

if __name__ == '__main__':

    dir = Path(sys.argv[1])

    file_list = [f for f in dir.glob('*') if f.is_file()]
    
    for filename in file_list:
        fields = filename.name.split('.')
        label  = fields[0]
        count  = int(fields[1])
        ext    = fields[2]

        os.rename(filename, os.path.join(filename.parent, "{}.{:04d}.{}".format(label, count, ext)))
```

```python
from os import path
from setuptools import setup


here = path.abspath(path.dirname(__file__))

with open(path.join(here, "requirements.txt")) as f:
    required = f.read().splitlines()


setup(
    name="grow-ext-bibtex-print",
    version="0.0.8",
    license="MIT",
    author="Ben Falk",
    author_email="falk.ben@gmail.com",
    include_package_data=False,
    packages=["bibtex_print"],
    install_requires=required,
)
```

```python
#!/usr/bin/env python3

"""Worker module polling events from argus incidents"""

import argparse
import os
import socket
import sys
import time
import traceback
from logging import debug, error, info, warning
from typing import Any, Dict, Generator, Optional, Text, cast, List

import caep
import requests
import urllib3

import act.api
from act.workers.libs import argus, mnemonic, worker
from act.api.libs import cli

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)
```

```python
def even_int(x):
  if int(x) % 2 != 0: return int(x-1)
  return int(x)
for pruning in [False]: 
  if pruning:
    folder = "WS_Pruned"
    rmv_folder(folder, rmv_flag)

    'load a dic to save D-order parameter'
    ordp_pmbD_dic = NestedDict()  
    _, p_prog, _, mu_prog, R0_min, R0_max, start_inf =  parameters_net_and_sir(folder = folder) 
    #old mu_prog: np.linspace(0.16,1,10)
    #R0_min = 0; R0_max = 4
    print("---I'm pruning!")
    betas = [2.1e-4] #[8.9e-5]

    'In WS model, if D = odd, D = D - 1. So, convert it now'
    k_prog = [even_int(N/x) for x in \
              [2**i for i in range(0,pow_max(N, num_iter = "all"))]]*len(betas) #if pow_max +1 --> error of connectivity: D = k_odd - 1
    beta_prog = [beta*N/k for beta in betas for k in k_prog[:len(set(k_prog))] if beta*N/k <= 1] 

    print("kprog, betaprog, zip",  k_prog, "\n", beta_prog, "\n", list(zip(k_prog,beta_prog))[3:])

    zipped = list(zip(k_prog,beta_prog))[5:] #the [1:] is an arbitrary choice. If want also 1000, remove it

    total_iterations = 0
    for mu, p in product(mu_prog, p_prog):
        for D, beta in zipped:
          #print("R0: ", beta*D/mu)
          if  R0_min < beta*D/mu < R0_max and beta <= 1:
            total_iterations += 1
    print("Total SIR Pruned Iterations:", total_iterations)

    'save parameters'
    text = "N %s;\nk_prog %s, len: %s;\np_prog %s, len: %s;\nbeta_prog %s, len: %s;\nmu_prog %s, len: %s;\nR0_min %s, R0_max %s; start_inf %s; \nTotal Iterations: %s;\n---\n" \
            % (N, k_prog, len(k_prog), p_prog, len(p_prog), beta_prog, len(beta_prog), \
            mu_prog, len(mu_prog),  R0_min, R0_max, start_inf, total_iterations)
    save_log_params(folder = folder, text = text)  
    print("text", text)  

    done_iterations = 0; saved_nets = []
    for D, beta in zipped:
      for mu, p in product(mu_prog, p_prog):
        'With p = 1 and <k>/N ~ 0, degree distr is sim to a Poissonian'
        if R0_min < beta*D/mu < R0_max and beta <= 1:
          done_iterations+=1
          print("Iterations left: %s" % ( total_iterations - done_iterations ) )

          if folder == "WS_Pruned":
            ordp_path = f"{my_dir()}{folder}/OrdParam/p{rhu(p,3)}/mu{rhu(mu,3)}/"
          #print(ordp_path)
          #ordp_path = "".join((my_dir(), folder, "/OrdParam/p%s/mu%s/" % (rhu(p,3),rhu(mu,3)) ))
          #print(ordp_path)
```

```python
import os
import re

from pykwalify.types import is_bool, is_float, is_int

from tavern.util import exceptions
from tavern.util.exceptions import BadSchemaError
from tavern.util.extfunctions import get_pykwalify_logger, import_ext_function
from tavern.util.loader import ApproxScalar, BoolToken, FloatToken, IntToken
from tavern.util.strict_util import StrictLevel


# To extend pykwalify's type validation, extend its internal functions
# These return boolean values
def validate_type_and_token(validate_type, token):
    def validate(value):
        return validate_type(value) or isinstance(value, token)

    return validate


is_int_like = validate_type_and_token(is_int, IntToken)
is_float_like = validate_type_and_token(is_float, FloatToken)
is_bool_like = validate_type_and_token(is_bool, BoolToken)


# These plug into the pykwalify extension function API
def validator_like(validate, description):
    def validator(value, rule_obj, path):
        # pylint: disable=unused-argument
        if validate(value):
            return True
        else:
            err_msg = "expected '{}' type at '{}', got '{}'".format(
```

```python
import os.path as osp
import os
import cv2
import json
import numpy as np


def mkdirs(d):
    if not osp.exists(d):
        os.makedirs(d)


def load_func(fpath):
    print('fpath', fpath)
    assert os.path.exists(fpath)
    with open(fpath, 'r') as fid:
        lines = fid.readlines()
    records =[json.loads(line.strip('\n')) for line in lines]
    return records


def gen_labels_crowd(data_root, label_root, ann_root):
    mkdirs(label_root)
    anns_data = load_func(ann_root)

    tid_curr = 0
    for i, ann_data in enumerate(anns_data):
        print(i)
        image_name = '{}.jpg'.format(ann_data['ID'])
        img_path = os.path.join(data_root, image_name)
        anns = ann_data['gtboxes']
        img = cv2.imread(
            img_path,
            cv2.IMREAD_COLOR | cv2.IMREAD_IGNORE_ORIENTATION
        )
        img_height, img_width = img.shape[0:2]
        for i in range(len(anns)):
            if 'extra' in anns[i] and 'ignore' in anns[i]['extra'] and anns[i]['extra']['ignore'] == 1:
                continue
            x, y, w, h = anns[i]['fbox']
            x += w / 2
            y += h / 2
            label_fpath = img_path.replace('images', 'labels_with_ids').replace('.png', '.txt').replace('.jpg', '.txt')
            label_str = '0 {:d} {:.6f} {:.6f} {:.6f} {:.6f}\n'.format(
```

```python
def run():
    if len(sys.argv) < 2:
        raise Exception('please provide a case study selector!')

    if sys.argv[1] == '1':
        from case_studies.case_study_1 import get_distribution
    elif sys.argv[1] == '2':
        from case_studies.case_study_2 import get_distribution
    elif sys.argv[1] == '3':
        from case_studies.case_study_3 import get_distribution
    else:
        raise Exception(f'unknown case study selector {sys.argv[1]}')

    ordered_devices, distribution = get_distribution()

    if len(sys.argv) == 3:
        if sys.argv[2] == 'print':
            print(f'{ordered_devices}\n{distribution}')
        elif sys.argv[2] == 'order':
            for device in ordered_devices:
                print(device)
        elif sys.argv[2] == 'clear':
            print('clearing assignment')
            for device in ordered_devices:
                try:
                    device.remove_assignment('0')
                except (AcknowledgementException, TimeoutError, ConnectionRefusedError):
                    raise Exception(
                        f'Fatal Error: device {device.host}:{device.port} is not reachable. Please check if Framework is running.')
        else:
            raise Exception(f'unknown command: {sys.argv[1]}')
    else:
        print('removing old assignments')
        for device in ordered_devices:
            try:
                device.remove_assignment('0')
            except (AcknowledgementException, TimeoutError, ConnectionRefusedError):
                raise Exception(
                    f'Fatal Error: device {device.host}:{device.port} is not reachable. Please check if Framework is running.')

        print('assigning new assignment')
        for device in ordered_devices:
            try:
                device.distribute_assignment(distribution)
            except AcknowledgementException:
                raise Exception(
                    f'Fatal Error: device {device.host}:{device.port} is not answering. Probably a fatal error occurred on the device. Please check.')


if __name__ == "__main__":
    run()
```

```python
from functools import lru_cache

def main():
    N = int(input())
    A = list(map(int, input().split()))
    x = 0
    for a in A[2:]:
        x ^= a
    a, b = A[0], A[1]
    if (a ^ b ^ x) & 1 != 0:
        return -1

    @lru_cache(None)
    def helper(a, b, x):
        if a == 0 or b == 0:
            return 0 if a ^ b == x else None
        if (a ^ b) & 1 != x & 1:
            return None
        t1 = helper(a // 2, b // 2, x // 2)
        t2 = helper((a - 1) // 2, (b + 1) // 2, x // 2)
        if t1 is None and t2 is None:
            return None
        if t1 is None:
            return t2 * 2 + 1
        if t2 is None:
            return t1 * 2
        t1 = t1 * 2
        t2 = t2 * 2 + 1
        return min(t1, t2)
    r = helper(a, b, x)
    if r is None or r >= a:
        return -1
    return r

print(main())
```

```python
a,b=input().split(' ')
a=int(a)
b=float(b)
if a>=100:
    aa=a//100
    aaa=a%100
    bb=int(100*b)
    ans=aa*bb+int(aaa*b)
    print(ans)
else:
    print(int(a*b))
```

```python
"""                 Working with calendars
The calendar module contains different classes that you can use to create calendars.

A text based calendar  # 11
# A HTML based calendar  # 32

Part 2:  # 50


"""
import calendar
# A text based calendar
# cal = calendar.TextCalendar(calendar.SUNDAY)  # SUNDAY is the first day of the week. == If I want to use Monday instead than enter MONDAY.

# str = cal.formatmonth(2020,1)

# print(str)  #     January 2020
#             # Su Mo Tu We Th Fr Sa
#             #         1  2  3  4
#             # 5  6  7  8  9 10 11
#             # 12 13 14 15 16 17 18
#             # 19 20 21 22 23 24 25
#             # 26 27 28 29 30 31








# A HTML based calendar
# cal = calendar.HTMLCalendar(calendar.MONDAY)  # MONDAY is the first day of the week. == If I want to use Sunday instead than enter SUNDAY.

# str = cal.formatmonth(2020,1)

# print(str)  # 
# <table border="0" cellpadding="0" cellspacing="0" class="month">
# <tr><th colspan="7" class="month">January 2020</th></tr>
# <tr><th class="mon">Mon</th><th class="tue">Tue</th><th class="wed">Wed</th><th class="thu">Thu</th><th class="fri">Fri</th><th class="sat">Sat</th><th class="sun">Sun</th></tr>
# <tr><td class="noday">&nbsp;</td><td class="noday">&nbsp;</td><td class="wed">1</td><td class="thu">2</td><td class="fri">3</td><td class="sat">4</td><td class="sun">5</td></tr>
# <tr><td class="mon">6</td><td class="tue">7</td><td class="wed">8</td><td class="thu">9</td><td class="fri">10</td><td class="sat">11</td><td class="sun">12</td></tr>
# <tr><td class="mon">13</td><td class="tue">14</td><td class="wed">15</td><td class="thu">16</td><td class="fri">17</td><td class="sat">18</td><td class="sun">19</td></tr>
```

```python
"""
'abba' & 'baab' == true

'abba' & 'bbaa' == true

'abba' & 'abbba' == false

'abba' & 'abca' == false


Write function:
anagrams('abba', ['aabb', 'abcd', 'bbaa', 'dada']) => ['aabb', 'bbaa']

anagrams('racer', ['crazer', 'carer', 'racar', 'caers', 'racer']) => ['carer', 'racer']

anagrams('laser', ['lazing', 'lazy',  'lacer']) => []
"""


def anagrams(word_to_match: str, word_list: list) -> list:
    return [word for word in word_list if sorted(word_to_match) == sorted(word)]


print(anagrams("abba", ["aabb", "abcd", "bbaa", "dada"]))

print(anagrams("racer", ["crazer", "carer", "racar", "caers", "racer"]))
```

```python
n=int(input())
s=[input()for i in range(n)]
cnt=0
for i in range(n):
    for j in range(i,n):
        if sorted(s[i])==sorted(s[j]):
            cnt+=1
print(cnt-n)
```

```python
from importlib import reload
import numpy as np
from numpy.testing import assert_equal, assert_almost_equal
import pytest
import sys

import ray
import ray.experimental.array.remote as ra
import ray.experimental.array.distributed as da
import ray.cluster_utils


@pytest.fixture
def reload_modules():
    modules = [ra.core, ra.random, ra.linalg, da.core, da.random, da.linalg]
    [reload(module) for module in modules]


def test_remote_array_methods(ray_start_2_cpus, reload_modules):
    # test eye
    object_id = ra.eye.remote(3)
    val = ray.get(object_id)
    assert_almost_equal(val, np.eye(3))

    # test zeros
    object_id = ra.zeros.remote([3, 4, 5])
    val = ray.get(object_id)
    assert_equal(val, np.zeros([3, 4, 5]))

    # test qr - pass by value
    a_val = np.random.normal(size=[10, 11])
    q_id, r_id = ra.linalg.qr.remote(a_val)
```

```python
# Copyright (C) 2019 Intel Corporation
#
# SPDX-License-Identifier: MIT

import argparse
import os.path as osp

from datumaro.components.project import Project
from datumaro.util.command_targets import (TargetKinds, target_selector,
    ProjectTarget, SourceTarget, ExternalDatasetTarget, ImageTarget,
    is_project_path
)

from . import project as project_module
from . import source as source_module
from . import item as item_module


def compute_external_dataset_stats(target, params):
    raise NotImplementedError()

def build_parser(parser=argparse.ArgumentParser()):
    parser.add_argument('target', nargs='?', default=None)
    parser.add_argument('params', nargs=argparse.REMAINDER)

    parser.add_argument('-p', '--project', dest='project_dir', default='.',
        help="Directory of the project to operate on (default: current dir)")

    return parser

def process_command(target, params, args):
    project_dir = args.project_dir
    target_kind, target_value = target
    if target_kind == TargetKinds.project:
        return project_module.main(['stats', '-p', target_value] + params)
    elif target_kind == TargetKinds.source:
        return source_module.main(['stats', '-p', project_dir, target_value] + params)
    elif target_kind == TargetKinds.item:
        return item_module.main(['stats', '-p', project_dir, target_value] + params)
```

```python
n = int(input())
arr = list(map(int, input().split()))

ans = 1
for x in arr:
    ans *= x

if ans > 1000000000000000000:
    print(-1)
else:
    print(ans)
```

```python
#!/usr/bin/env python
# encoding: utf-8

"""
gmconvert.py

Created by Brant Faircloth on 28 April 2011.
Copyright 2011 Brant C. Faircloth. All rights reserved.
"""


import pdb
import os
import sys
import copy
import optparse
import numpy
import la
from openpyxl.workbook import Workbook
from openpyxl.cell import get_column_letter
from openpyxl.writer.excel import ExcelWriter



def interface():
    '''Command-line interface'''
    usage = "usage: %prog [options]"

    p = optparse.OptionParser(usage)

    p.add_option('--input', dest = 'input', action='store', 
type='string', default = None, help='The path to the input file.', 
metavar='FILE')

    p.add_option('--output', dest = 'output', action='store', 
type='string', default = None, help='The path to the output file.', 
metavar='FILE')

    (options,arg) = p.parse_args()
    if not options.input:
        p.print_help()
        sys.exit(2)
    if not os.path.isfile(options.input):
        print "You must provide a valid path to the configuration file."
        p.print_help()
        sys.exit(2)
    return options, arg

def get_number_of_markers(input):
    markers = set()
    samples = set()
    for line in open(input, 'rU'):
        line_elements = line.strip('\n').split('\t')
        if line_elements[0] == 'Sample File':
            marker_pos = line_elements.index('Marker')
            sample_pos = line_elements.index('Sample Name')
        else:
            markers.add(line_elements[marker_pos])
            samples.add(line_elements[sample_pos])
    return markers, samples
    
def create_population(samples, markers, columns = ['A','B']):
    population = {}
    for individual in samples:
        population[individual] = create_larry(markers)
```

```python
class TaskTerminationError(Exception):
    """Raise when something goes wrong while trying to terminate a task"""

    def __init__(self, message=None, task_name=None, *args, **kwargs):
        """
        :param message: A non-default message
        :param task_name: The name of the task that was unsuccessfully terminated
        """
        self.message = message
        if not self.message:
            if task_name:
                self.message = f"Failed to terminate task with name: {task_name}"
            else:
                self.message = "Failed to terminate task with unknown name"
        super(TaskTerminationError, self).__init__(self.message, *args, **kwargs)


class MultipleTaskTerminationErrors(TaskTerminationError):
    """Raise when multiple task termination errors occurred"""

    def __init__(self, errors: List[TaskTerminationError]) -> None:
        """
        :param errors: All of the task termination errors that occurred
        """
        self.errors = errors
        super().__init__(self.errors)

    def __str__(self) -> str:
        return "The following errors occurred while trying to terminate multiple tasks\n" + "\n".join(
            [str(err) for err in self.errors]
        )
```

```python
# encoding: utf-8
from __future__ import unicode_literals

import itertools

from .common import InfoExtractor
from ..compat import (
    compat_HTTPError,
    compat_urllib_parse,
    compat_urllib_request,
    compat_urlparse,
)
from ..utils import (
    ExtractorError,
    clean_html,
    determine_ext,
    int_or_none,
    parse_iso8601,
)


class DramaFeverBaseIE(InfoExtractor):
    _LOGIN_URL = 'https://www.dramafever.com/accounts/login/'
    _NETRC_MACHINE = 'dramafever'

    _CONSUMER_SECRET = 'DA59dtVXYLxajktV'

    _consumer_secret = None

    def _get_consumer_secret(self):
        mainjs = self._download_webpage(
            'http://www.dramafever.com/static/51afe95/df2014/scripts/main.js',
            None, 'Downloading main.js', fatal=False)
        if not mainjs:
            return self._CONSUMER_SECRET
        return self._search_regex(
            r"var\s+cs\s*=\s*'([^']+)'", mainjs,
            'consumer secret', default=self._CONSUMER_SECRET)

    def _real_initialize(self):
        self._login()
```

```python
x, n = map(int, input().split())
_p = list(map(int, input().split()))

p = set(_p)

for i in range(100):
  if x - i not in p:
    print(x - i)
    break
  if x + i not in p:
    print(x + i)
    break
```

```python
# coding:utf-8
def main():
    n = int(input())
    h = list(map(int, input().split()))
    start_num = 0
    best_score = 1000
    best_sc = 0

    min_h = h.index(min(h))

    for i in range(n-1):
        score =  h[i] - h[i+1]
        if best_score >= score and score >= 0:
            if best_score == score:
                if h[i] > h[start_num]:
                    start_num = i
                    sc = 0
                    while  i != n - 1 and h[i] >= h[i+1] :
                        sc = sc + 1
                        i = i + 1
                    if best_sc <= sc:
                        best_sc = sc
                        best_score = score
            else:
                start_num = i
                sc = 0
                while  i != n - 1 and h[i] >= h[i+1] :
                    sc = sc + 1
                    i = i + 1
                    if best_sc <= sc:
                        best_sc = sc
                        best_score = score

    print(best_sc)





if __name__ == '__main__' :
    main()
```

```python
a = list(map(int, input().split()))


def a1():
    if a[0] == 1 or a[0] == 0:
        a[0] = 1
        return a[0]
    else:
        return a[0] * (a[0] - 1) / 2


def b1():
    if a[1] == 1 or a[1] == 0:
        a[1] = 1
        return a[1]
    else:
        return a[1] * (a[1] - 1) / 2


print(a1() + b1())
```

```python
#CLASE EDIFICIOS

class Edificio:

    #Atributos del Objeto

    def __init__(self,type,huella,dptos,ancho,largo,adpto,prior):

        self.type = type
        self.huella = huella
        self.dptos = dptos
        self.ancho = ancho
        self.largo = largo
        self.adpto = adpto
        self.prior = prior

    # Metodos del Objeto

    def num_max_vivedif (self,num_vivmax):
        return round((self.prior*num_vivmax)/100)
    def viv_init (self):
        return self.dptos
    def niv_tedif (self,num_vivmax):
        return round(((self.prior*num_vivmax)/100) / self.dptos)
```

```python
"""composeexample URL Configuration

The `urlpatterns` list routes URLs to views. For more information please see:
    https://docs.djangoproject.com/en/2.0/topics/http/urls/
Examples:
Function views
    1. Add an import:  from my_app import views
    2. Add a URL to urlpatterns:  path('', views.home, name='home')
Class-based views
    1. Add an import:  from other_app.views import Home
    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')
Including another URLconf
    1. Import the include() function: from django.urls import include, path
    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))
"""
from django.contrib import admin
from django.urls import path, include


urlpatterns = [
    path('admin/', admin.site.urls),
    path('com/', include('companies.urls')),
]
```

```python
a,b,k = map(int,input().split())

li = [i for i in range(a,b+1)]
print(li[0])
print(li[k-1])
print(li[-k])
print(li[-1])
```

```python
import frappe
from frappe.core.doctype.user.user import create_contact
import re

def execute():
	""" Create Contact for each User if not present """
	frappe.reload_doc('contacts', 'doctype', 'contact')

	users = frappe.get_all('User', filters={"name": ('not in', 'Administrator, Guest')}, fields=["*"])
	for user in users:
		if user.first_name:
			user.first_name = re.sub("[<>]+", '', frappe.safe_decode(user.first_name))
		if user.last_name:
			user.last_name  = re.sub("[<>]+", '', frappe.safe_decode(user.last_name))
		create_contact(user, ignore_links=True, ignore_mandatory=True)
```

```python
# Copyright 2011 OpenStack LLC.
# All Rights Reserved.
#
#    Licensed under the Apache License, Version 2.0 (the "License"); you may
#    not use this file except in compliance with the License. You may obtain
#    a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
```

```python
#!/usr/bin/env python3

"""
List all users registered in <CWL_ICA_REPO_PATH>/config/user.yaml
"""

from classes.command import Command
from utils.logging import get_logger
import pandas as pd
from utils.repo import read_yaml, get_tenant_yaml_path
import sys

logger = get_logger()


class ListTenants(Command):
    """Usage:
    cwl-ica [options] list-tenants help
    cwl-ica [options] list-tenants

Description:
```

```python
n,k = map(int,input().split())
N = n // k
if k % 2 == 1:
    ans = 3*N
else:
    if N * k + k/2 <= n:
        ans = N**3 + (N+1)**3
    else:
        ans = 2 * N**3
print(ans)
```

```python
n, m, d = list(map(int, input().split()))
if (d == 0):
  	ans = (m - 1) * (1 / n)
    print(ans)
else:
	ans = (m - 1) * (2 * (n - d) / n ** 2)
    print(ans)
```

